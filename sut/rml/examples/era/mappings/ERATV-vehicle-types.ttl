@prefix rr: <http://www.w3.org/ns/r2rml#>.
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>.
@prefix fnml: <http://semweb.mmlab.be/ns/fnml#>.
@prefix fno: <https://w3id.org/function/ontology#>.
@prefix d2rq: <http://www.wiwiss.fu-berlin.de/suhl/bizer/D2RQ/0.1#>.
@prefix void: <http://rdfs.org/ns/void#>.
@prefix dc: <http://purl.org/dc/terms/>.
@prefix foaf: <http://xmlns.com/foaf/0.1/>.
@prefix rml: <http://semweb.mmlab.be/ns/rml#>.
@prefix ql: <http://semweb.mmlab.be/ns/ql#>.
@prefix : <http://mapping.example.com/>.
@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.
@prefix idlab-fn: <http://example.com/idlab/function/>.
@prefix grel: <http://users.ugent.be/~bjdmeest/function/grel.ttl#>.
@prefix eu-country: <http://publications.europa.eu/resource/authority/country/>.
@prefix era: <http://data.europa.eu/949/>.
@prefix era-vehicle-types: <http://data.europa.eu/949/concepts/vehicle-types/>.
@prefix era-manufacturers: <http://data.europa.eu/949/manufacturers/>.
@prefix era-gaugings: <http://data.europa.eu/949/concepts/gaugings/>.
@prefix era-ntg: <http://data.europa.eu/949/concepts/nominal-track-gauges/>.
@prefix era-am: <http://data.europa.eu/949/concepts/axle-monitoring/>.
@prefix era-tds: <http://data.europa.eu/949/concepts/train-detection/>.
@prefix era-ri: <http://data.europa.eu/949/concepts/rail-inclinations/>.
@prefix era-gcf: <http://data.europa.eu/949/concepts/gauge-changeover-facilities/>.
@prefix era-bwp: <http://data.europa.eu/949/concepts/brake-weight-percentages/>.
@prefix era-ess: <http://data.europa.eu/949/concepts/energy-supply-systems/>.
@prefix era-tc: <http://data.europa.eu/949/concepts/thermal-capacity/>.
@prefix era-ic: <http://data.europa.eu/949/concepts/ice-conditions/>.
@prefix era-csm: <http://data.europa.eu/949/concepts/contact-strip-materials/>.
@prefix era-rsf: <http://data.europa.eu/949/concepts/rolling-stock-fire/>.
@prefix era-ph: <http://data.europa.eu/949/concepts/platform-heights/>.
@prefix era-esc: <http://data.europa.eu/949/concepts/etcs-system-compatibilities/>.
@prefix era-gsmr: <http://data.europa.eu/949/concepts/gsmr-networks/>.
@prefix era-gsmrev: <http://data.europa.eu/949/concepts/gsm-r-equipment-version/>.
@prefix era-gsmrrdc: <http://data.europa.eu/949/concepts/gsm-r-radio-data-communication/>.
@prefix era-rsc: <http://data.europa.eu/949/concepts/radio-system-compatibilities/>.
@prefix era-tpls: <http://data.europa.eu/949/concepts/train-protection-legacy-systems/>.
@prefix era-lrs: <http://data.europa.eu/949/concepts/legacy-radio-systems/>.
@prefix era-bpt: <http://data.europa.eu/949/concepts/brake-parking-type/>.
@prefix era-ect: <http://data.europa.eu/949/concepts/end-coupling-type/>.
@prefix era-eeobl: <http://data.europa.eu/949/concepts/etcs-equipment-on-board-level/>.
@prefix era-etcsbaseline: <http://data.europa.eu/949/concepts/etcs-baselines/>.
@prefix era-etcsinfill: <http://data.europa.eu/949/concepts/etcs-infills/>.

:rules_000 a void:Dataset;
    void:exampleResource :map_vehicles-types_000.
:map_vehicles-types_000 rml:logicalSource :source_000.
:source_000 a rml:LogicalSource;
    rml:source :database_000;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, VehicleTypes.TypeName, VehicleTypes.AlternativeTypeName, Categories.Code AS CategoryCode, Categories.Name AS Category, SubCategories.Code AS SubCategoryCode, SubCategories.Name AS SubCategory, Countries.Name AS Country, Countries.Code AS CountryCode, Manufacturers.Name AS Manufacturer FROM ERATV.dbo.VehicleTypes, ERATV.dbo.Categories, ERATV.dbo.SubCategories, ERATV.dbo.Countries, ERATV.dbo.Manufacturers WHERE VehicleTypes.CategoriesId = Categories.Id AND VehicleTypes.SubCategoriesId = SubCategories.Id AND VehicleTypes.CountriesId = Countries.Id AND VehicleTypes.ManufacturersId = Manufacturers.Id AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_000 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_000 rml:referenceFormulation ql:CSV.
:map_vehicles-types_000 a rr:TriplesMap;
    rdfs:label "vehicles-types".
:s_000 a rr:SubjectMap.
:map_vehicles-types_000 rr:subjectMap :s_000.
:s_000 rr:template "http://data.europa.eu/949/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_000.
:gm_000 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_000 a rr:PredicateObjectMap.
:map_vehicles-types_000 rr:predicateObjectMap :pom_000.
:pm_000 a rr:PredicateMap.
:pom_000 rr:predicateMap :pm_000.
:pm_000 rr:constant rdf:type.
:pom_000 rr:objectMap :om_000.
:om_000 a rr:ObjectMap;
    rr:constant era:VehicleType;
    rr:termType rr:IRI.
:pom_001 a rr:PredicateObjectMap.
:map_vehicles-types_000 rr:predicateObjectMap :pom_001.
:pm_001 a rr:PredicateMap.
:pom_001 rr:predicateMap :pm_001.
:pm_001 rr:constant era:manufacturer.
:pom_001 rr:objectMap :om_001.
:om_001 a rr:ObjectMap;
    rr:template "http://data.europa.eu/949/manufacturers/{Manufacturer}";
    rr:termType rr:IRI.
:pom_002 a rr:PredicateObjectMap.
:map_vehicles-types_000 rr:predicateObjectMap :pom_002.
:pm_002 a rr:PredicateMap.
:pom_002 rr:predicateMap :pm_002.
:pm_002 rr:constant era:typeVersionNumber.
:pom_002 rr:objectMap :om_002.
:om_002 a rr:ObjectMap;
    rml:reference "TypeVersionNumber";
    rr:termType rr:Literal.
:pom_003 a rr:PredicateObjectMap.
:map_vehicles-types_000 rr:predicateObjectMap :pom_003.
:pm_003 a rr:PredicateMap.
:pom_003 rr:predicateMap :pm_003.
:pm_003 rr:constant rdfs:label.
:pom_003 rr:objectMap :om_003.
:om_003 a fnml:FunctionTermMap;
    rr:termType rr:Literal;
    fnml:functionValue :fn_000.
:fn_000 rml:logicalSource :source_000;
    rr:predicateObjectMap :pomexec_000.
:pomexec_000 rr:predicateMap :pmexec_000.
:pmexec_000 rr:constant fno:executes.
:pomexec_000 rr:objectMap :omexec_000.
:omexec_000 rr:constant "https://w3id.org/imec/idlab/function#trueCondition";
    rr:termType rr:IRI.
:fn_000 rr:predicateObjectMap :pom_004.
:pom_004 a rr:PredicateObjectMap;
    rr:predicateMap :pm_004.
:pm_004 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#strBoolean>.
:pom_004 rr:objectMap :om_004.
:om_004 a rr:ObjectMap, fnml:FunctionTermMap;
    fnml:functionValue :fn_001.
:fn_001 rml:logicalSource :source_000;
    rr:predicateObjectMap :pomexec_001.
:pomexec_001 rr:predicateMap :pmexec_001.
:pmexec_001 rr:constant fno:executes.
:pomexec_001 rr:objectMap :omexec_001.
:omexec_001 rr:constant "http://example.com/idlab/function/notEqual";
    rr:termType rr:IRI.
:fn_001 rr:predicateObjectMap :pom_005.
:pom_005 a rr:PredicateObjectMap;
    rr:predicateMap :pm_005.
:pm_005 a rr:PredicateMap;
    rr:constant grel:valueParameter.
:pom_005 rr:objectMap :om_005.
:om_005 a rr:ObjectMap;
    rml:reference "TypeName";
    rr:termType rr:Literal.
:fn_001 rr:predicateObjectMap :pom_006.
:pom_006 a rr:PredicateObjectMap;
    rr:predicateMap :pm_006.
:pm_006 a rr:PredicateMap;
    rr:constant grel:valueParameter2.
:pom_006 rr:objectMap :om_006.
:om_006 a rr:ObjectMap;
    rr:constant "";
    rr:termType rr:Literal.
:fn_000 rr:predicateObjectMap :pom_007.
:pom_007 a rr:PredicateObjectMap;
    rr:predicateMap :pm_007.
:pm_007 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#str>.
:pom_007 rr:objectMap :om_007.
:om_007 a rr:ObjectMap;
    rml:reference "TypeName";
    rr:termType rr:Literal.
:pom_008 a rr:PredicateObjectMap.
:map_vehicles-types_000 rr:predicateObjectMap :pom_008.
:pm_008 a rr:PredicateMap.
:pom_008 rr:predicateMap :pm_008.
:pm_008 rr:constant era:manufacturingCountry.
:pom_009 a rr:PredicateObjectMap.
:map_vehicles-types_000 rr:predicateObjectMap :pom_009.
:pm_009 a rr:PredicateMap.
:pom_009 rr:predicateMap :pm_009.
:pm_009 rr:constant era:alternativeName.
:pom_009 rr:objectMap :om_008.
:om_008 a fnml:FunctionTermMap;
    rr:termType rr:Literal;
    fnml:functionValue :fn_002.
:fn_002 rml:logicalSource :source_000;
    rr:predicateObjectMap :pomexec_002.
:pomexec_002 rr:predicateMap :pmexec_002.
:pmexec_002 rr:constant fno:executes.
:pomexec_002 rr:objectMap :omexec_002.
:omexec_002 rr:constant "https://w3id.org/imec/idlab/function#trueCondition";
    rr:termType rr:IRI.
:fn_002 rr:predicateObjectMap :pom_010.
:pom_010 a rr:PredicateObjectMap;
    rr:predicateMap :pm_010.
:pm_010 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#strBoolean>.
:pom_010 rr:objectMap :om_009.
:om_009 a rr:ObjectMap, fnml:FunctionTermMap;
    fnml:functionValue :fn_003.
:fn_003 rml:logicalSource :source_000;
    rr:predicateObjectMap :pomexec_003.
:pomexec_003 rr:predicateMap :pmexec_003.
:pmexec_003 rr:constant fno:executes.
:pomexec_003 rr:objectMap :omexec_003.
:omexec_003 rr:constant "http://example.com/idlab/function/notEqual";
    rr:termType rr:IRI.
:fn_003 rr:predicateObjectMap :pom_011.
:pom_011 a rr:PredicateObjectMap;
    rr:predicateMap :pm_011.
:pm_011 a rr:PredicateMap;
    rr:constant grel:valueParameter.
:pom_011 rr:objectMap :om_010.
:om_010 a rr:ObjectMap;
    rml:reference "AlternativeTypeName";
    rr:termType rr:Literal.
:fn_003 rr:predicateObjectMap :pom_012.
:pom_012 a rr:PredicateObjectMap;
    rr:predicateMap :pm_012.
:pm_012 a rr:PredicateMap;
    rr:constant grel:valueParameter2.
:pom_012 rr:objectMap :om_011.
:om_011 a rr:ObjectMap;
    rr:constant "";
    rr:termType rr:Literal.
:fn_002 rr:predicateObjectMap :pom_013.
:pom_013 a rr:PredicateObjectMap;
    rr:predicateMap :pm_013.
:pm_013 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#str>.
:pom_013 rr:objectMap :om_012.
:om_012 a rr:ObjectMap;
    rml:reference "AlternativeTypeName";
    rr:termType rr:Literal.
:pom_014 a rr:PredicateObjectMap.
:map_vehicles-types_000 rr:predicateObjectMap :pom_014.
:pm_014 a rr:PredicateMap.
:pom_014 rr:predicateMap :pm_014.
:pm_014 rr:constant era:category.
:pom_014 rr:objectMap :om_013.
:om_013 a fnml:FunctionTermMap;
    rr:termType rr:IRI;
    fnml:functionValue :fn_004.
:fn_004 rml:logicalSource :source_000;
    rr:predicateObjectMap :pomexec_004.
:pomexec_004 rr:predicateMap :pmexec_004.
:pmexec_004 rr:constant fno:executes.
:pomexec_004 rr:objectMap :omexec_004.
:omexec_004 rr:constant "https://w3id.org/imec/idlab/function#trueCondition";
    rr:termType rr:IRI.
:fn_004 rr:predicateObjectMap :pom_015.
:pom_015 a rr:PredicateObjectMap;
    rr:predicateMap :pm_015.
:pm_015 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#strBoolean>.
:pom_015 rr:objectMap :om_014.
:om_014 a rr:ObjectMap, fnml:FunctionTermMap;
    fnml:functionValue :fn_005.
:fn_005 rml:logicalSource :source_000;
    rr:predicateObjectMap :pomexec_005.
:pomexec_005 rr:predicateMap :pmexec_005.
:pmexec_005 rr:constant fno:executes.
:pomexec_005 rr:objectMap :omexec_005.
:omexec_005 rr:constant "http://example.com/idlab/function/equal";
    rr:termType rr:IRI.
:fn_005 rr:predicateObjectMap :pom_016.
:pom_016 a rr:PredicateObjectMap;
    rr:predicateMap :pm_016.
:pm_016 a rr:PredicateMap;
    rr:constant grel:valueParameter.
:pom_016 rr:objectMap :om_015.
:om_015 a rr:ObjectMap;
    rml:reference "CategoryCode";
    rr:termType rr:Literal.
:fn_005 rr:predicateObjectMap :pom_017.
:pom_017 a rr:PredicateObjectMap;
    rr:predicateMap :pm_017.
:pm_017 a rr:PredicateMap;
    rr:constant grel:valueParameter2.
:pom_017 rr:objectMap :om_016.
:om_016 a rr:ObjectMap;
    rr:constant "11";
    rr:termType rr:Literal.
:fn_004 rr:predicateObjectMap :pom_018.
:pom_018 a rr:PredicateObjectMap;
    rr:predicateMap :pm_018.
:pm_018 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#str>.
:pom_018 rr:objectMap :om_017.
:om_017 a rr:ObjectMap;
    rr:constant "http://data.europa.eu/949/concepts/vehicle-types/tractionVehicles";
    rr:termType rr:IRI.
:pom_019 a rr:PredicateObjectMap.
:map_vehicles-types_000 rr:predicateObjectMap :pom_019.
:pm_019 a rr:PredicateMap.
:pom_019 rr:predicateMap :pm_019.
:pm_019 rr:constant era:category.
:pom_019 rr:objectMap :om_018.
:om_018 a fnml:FunctionTermMap;
    rr:termType rr:IRI;
    fnml:functionValue :fn_006.
:fn_006 rml:logicalSource :source_000;
    rr:predicateObjectMap :pomexec_006.
:pomexec_006 rr:predicateMap :pmexec_006.
:pmexec_006 rr:constant fno:executes.
:pomexec_006 rr:objectMap :omexec_006.
:omexec_006 rr:constant "https://w3id.org/imec/idlab/function#trueCondition";
    rr:termType rr:IRI.
:fn_006 rr:predicateObjectMap :pom_020.
:pom_020 a rr:PredicateObjectMap;
    rr:predicateMap :pm_020.
:pm_020 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#strBoolean>.
:pom_020 rr:objectMap :om_019.
:om_019 a rr:ObjectMap, fnml:FunctionTermMap;
    fnml:functionValue :fn_007.
:fn_007 rml:logicalSource :source_000;
    rr:predicateObjectMap :pomexec_007.
:pomexec_007 rr:predicateMap :pmexec_007.
:pmexec_007 rr:constant fno:executes.
:pomexec_007 rr:objectMap :omexec_007.
:omexec_007 rr:constant "http://example.com/idlab/function/equal";
    rr:termType rr:IRI.
:fn_007 rr:predicateObjectMap :pom_021.
:pom_021 a rr:PredicateObjectMap;
    rr:predicateMap :pm_021.
:pm_021 a rr:PredicateMap;
    rr:constant grel:valueParameter.
:pom_021 rr:objectMap :om_020.
:om_020 a rr:ObjectMap;
    rml:reference "CategoryCode";
    rr:termType rr:Literal.
:fn_007 rr:predicateObjectMap :pom_022.
:pom_022 a rr:PredicateObjectMap;
    rr:predicateMap :pm_022.
:pm_022 a rr:PredicateMap;
    rr:constant grel:valueParameter2.
:pom_022 rr:objectMap :om_021.
:om_021 a rr:ObjectMap;
    rr:constant "31";
    rr:termType rr:Literal.
:fn_006 rr:predicateObjectMap :pom_023.
:pom_023 a rr:PredicateObjectMap;
    rr:predicateMap :pm_023.
:pm_023 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#str>.
:pom_023 rr:objectMap :om_022.
:om_022 a rr:ObjectMap;
    rr:constant "http://data.europa.eu/949/concepts/vehicle-types/hauledPassenger";
    rr:termType rr:IRI.
:pom_024 a rr:PredicateObjectMap.
:map_vehicles-types_000 rr:predicateObjectMap :pom_024.
:pm_024 a rr:PredicateMap.
:pom_024 rr:predicateMap :pm_024.
:pm_024 rr:constant era:category.
:pom_024 rr:objectMap :om_023.
:om_023 a fnml:FunctionTermMap;
    rr:termType rr:IRI;
    fnml:functionValue :fn_008.
:fn_008 rml:logicalSource :source_000;
    rr:predicateObjectMap :pomexec_008.
:pomexec_008 rr:predicateMap :pmexec_008.
:pmexec_008 rr:constant fno:executes.
:pomexec_008 rr:objectMap :omexec_008.
:omexec_008 rr:constant "https://w3id.org/imec/idlab/function#trueCondition";
    rr:termType rr:IRI.
:fn_008 rr:predicateObjectMap :pom_025.
:pom_025 a rr:PredicateObjectMap;
    rr:predicateMap :pm_025.
:pm_025 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#strBoolean>.
:pom_025 rr:objectMap :om_024.
:om_024 a rr:ObjectMap, fnml:FunctionTermMap;
    fnml:functionValue :fn_009.
:fn_009 rml:logicalSource :source_000;
    rr:predicateObjectMap :pomexec_009.
:pomexec_009 rr:predicateMap :pmexec_009.
:pmexec_009 rr:constant fno:executes.
:pomexec_009 rr:objectMap :omexec_009.
:omexec_009 rr:constant "http://example.com/idlab/function/equal";
    rr:termType rr:IRI.
:fn_009 rr:predicateObjectMap :pom_026.
:pom_026 a rr:PredicateObjectMap;
    rr:predicateMap :pm_026.
:pm_026 a rr:PredicateMap;
    rr:constant grel:valueParameter.
:pom_026 rr:objectMap :om_025.
:om_025 a rr:ObjectMap;
    rml:reference "CategoryCode";
    rr:termType rr:Literal.
:fn_009 rr:predicateObjectMap :pom_027.
:pom_027 a rr:PredicateObjectMap;
    rr:predicateMap :pm_027.
:pm_027 a rr:PredicateMap;
    rr:constant grel:valueParameter2.
:pom_027 rr:objectMap :om_026.
:om_026 a rr:ObjectMap;
    rr:constant "51";
    rr:termType rr:Literal.
:fn_008 rr:predicateObjectMap :pom_028.
:pom_028 a rr:PredicateObjectMap;
    rr:predicateMap :pm_028.
:pm_028 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#str>.
:pom_028 rr:objectMap :om_027.
:om_027 a rr:ObjectMap;
    rr:constant "http://data.europa.eu/949/concepts/vehicle-types/freightWagons";
    rr:termType rr:IRI.
:pom_029 a rr:PredicateObjectMap.
:map_vehicles-types_000 rr:predicateObjectMap :pom_029.
:pm_029 a rr:PredicateMap.
:pom_029 rr:predicateMap :pm_029.
:pm_029 rr:constant era:category.
:pom_029 rr:objectMap :om_028.
:om_028 a fnml:FunctionTermMap;
    rr:termType rr:IRI;
    fnml:functionValue :fn_010.
:fn_010 rml:logicalSource :source_000;
    rr:predicateObjectMap :pomexec_010.
:pomexec_010 rr:predicateMap :pmexec_010.
:pmexec_010 rr:constant fno:executes.
:pomexec_010 rr:objectMap :omexec_010.
:omexec_010 rr:constant "https://w3id.org/imec/idlab/function#trueCondition";
    rr:termType rr:IRI.
:fn_010 rr:predicateObjectMap :pom_030.
:pom_030 a rr:PredicateObjectMap;
    rr:predicateMap :pm_030.
:pm_030 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#strBoolean>.
:pom_030 rr:objectMap :om_029.
:om_029 a rr:ObjectMap, fnml:FunctionTermMap;
    fnml:functionValue :fn_011.
:fn_011 rml:logicalSource :source_000;
    rr:predicateObjectMap :pomexec_011.
:pomexec_011 rr:predicateMap :pmexec_011.
:pmexec_011 rr:constant fno:executes.
:pomexec_011 rr:objectMap :omexec_011.
:omexec_011 rr:constant "http://example.com/idlab/function/equal";
    rr:termType rr:IRI.
:fn_011 rr:predicateObjectMap :pom_031.
:pom_031 a rr:PredicateObjectMap;
    rr:predicateMap :pm_031.
:pm_031 a rr:PredicateMap;
    rr:constant grel:valueParameter.
:pom_031 rr:objectMap :om_030.
:om_030 a rr:ObjectMap;
    rml:reference "CategoryCode";
    rr:termType rr:Literal.
:fn_011 rr:predicateObjectMap :pom_032.
:pom_032 a rr:PredicateObjectMap;
    rr:predicateMap :pm_032.
:pm_032 a rr:PredicateMap;
    rr:constant grel:valueParameter2.
:pom_032 rr:objectMap :om_031.
:om_031 a rr:ObjectMap;
    rr:constant "71";
    rr:termType rr:Literal.
:fn_010 rr:predicateObjectMap :pom_033.
:pom_033 a rr:PredicateObjectMap;
    rr:predicateMap :pm_033.
:pm_033 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#str>.
:pom_033 rr:objectMap :om_032.
:om_032 a rr:ObjectMap;
    rr:constant "http://data.europa.eu/949/concepts/vehicle-types/specialVehicles";
    rr:termType rr:IRI.
:pom_034 a rr:PredicateObjectMap.
:map_vehicles-types_000 rr:predicateObjectMap :pom_034.
:pm_034 a rr:PredicateMap.
:pom_034 rr:predicateMap :pm_034.
:pm_034 rr:constant era:subCategory.
:pom_034 rr:objectMap :om_033.
:om_033 a fnml:FunctionTermMap;
    rr:termType rr:IRI;
    fnml:functionValue :fn_012.
:fn_012 rml:logicalSource :source_000;
    rr:predicateObjectMap :pomexec_012.
:pomexec_012 rr:predicateMap :pmexec_012.
:pmexec_012 rr:constant fno:executes.
:pomexec_012 rr:objectMap :omexec_012.
:omexec_012 rr:constant "https://w3id.org/imec/idlab/function#trueCondition";
    rr:termType rr:IRI.
:fn_012 rr:predicateObjectMap :pom_035.
:pom_035 a rr:PredicateObjectMap;
    rr:predicateMap :pm_035.
:pm_035 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#strBoolean>.
:pom_035 rr:objectMap :om_034.
:om_034 a rr:ObjectMap, fnml:FunctionTermMap;
    fnml:functionValue :fn_013.
:fn_013 rml:logicalSource :source_000;
    rr:predicateObjectMap :pomexec_013.
:pomexec_013 rr:predicateMap :pmexec_013.
:pmexec_013 rr:constant fno:executes.
:pomexec_013 rr:objectMap :omexec_013.
:omexec_013 rr:constant "http://example.com/idlab/function/equal";
    rr:termType rr:IRI.
:fn_013 rr:predicateObjectMap :pom_036.
:pom_036 a rr:PredicateObjectMap;
    rr:predicateMap :pm_036.
:pm_036 a rr:PredicateMap;
    rr:constant grel:valueParameter.
:pom_036 rr:objectMap :om_035.
:om_035 a rr:ObjectMap;
    rml:reference "SubCategoryCode";
    rr:termType rr:Literal.
:fn_013 rr:predicateObjectMap :pom_037.
:pom_037 a rr:PredicateObjectMap;
    rr:predicateMap :pm_037.
:pm_037 a rr:PredicateMap;
    rr:constant grel:valueParameter2.
:pom_037 rr:objectMap :om_036.
:om_036 a rr:ObjectMap;
    rr:constant "11";
    rr:termType rr:Literal.
:fn_012 rr:predicateObjectMap :pom_038.
:pom_038 a rr:PredicateObjectMap;
    rr:predicateMap :pm_038.
:pm_038 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#str>.
:pom_038 rr:objectMap :om_037.
:om_037 a rr:ObjectMap;
    rr:constant "http://data.europa.eu/949/concepts/vehicle-types/locomotive";
    rr:termType rr:IRI.
:pom_039 a rr:PredicateObjectMap.
:map_vehicles-types_000 rr:predicateObjectMap :pom_039.
:pm_039 a rr:PredicateMap.
:pom_039 rr:predicateMap :pm_039.
:pm_039 rr:constant era:subCategory.
:pom_039 rr:objectMap :om_038.
:om_038 a fnml:FunctionTermMap;
    rr:termType rr:IRI;
    fnml:functionValue :fn_014.
:fn_014 rml:logicalSource :source_000;
    rr:predicateObjectMap :pomexec_014.
:pomexec_014 rr:predicateMap :pmexec_014.
:pmexec_014 rr:constant fno:executes.
:pomexec_014 rr:objectMap :omexec_014.
:omexec_014 rr:constant "https://w3id.org/imec/idlab/function#trueCondition";
    rr:termType rr:IRI.
:fn_014 rr:predicateObjectMap :pom_040.
:pom_040 a rr:PredicateObjectMap;
    rr:predicateMap :pm_040.
:pm_040 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#strBoolean>.
:pom_040 rr:objectMap :om_039.
:om_039 a rr:ObjectMap, fnml:FunctionTermMap;
    fnml:functionValue :fn_015.
:fn_015 rml:logicalSource :source_000;
    rr:predicateObjectMap :pomexec_015.
:pomexec_015 rr:predicateMap :pmexec_015.
:pmexec_015 rr:constant fno:executes.
:pomexec_015 rr:objectMap :omexec_015.
:omexec_015 rr:constant "http://example.com/idlab/function/equal";
    rr:termType rr:IRI.
:fn_015 rr:predicateObjectMap :pom_041.
:pom_041 a rr:PredicateObjectMap;
    rr:predicateMap :pm_041.
:pm_041 a rr:PredicateMap;
    rr:constant grel:valueParameter.
:pom_041 rr:objectMap :om_040.
:om_040 a rr:ObjectMap;
    rml:reference "SubCategoryCode";
    rr:termType rr:Literal.
:fn_015 rr:predicateObjectMap :pom_042.
:pom_042 a rr:PredicateObjectMap;
    rr:predicateMap :pm_042.
:pm_042 a rr:PredicateMap;
    rr:constant grel:valueParameter2.
:pom_042 rr:objectMap :om_041.
:om_041 a rr:ObjectMap;
    rr:constant "13";
    rr:termType rr:Literal.
:fn_014 rr:predicateObjectMap :pom_043.
:pom_043 a rr:PredicateObjectMap;
    rr:predicateMap :pm_043.
:pm_043 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#str>.
:pom_043 rr:objectMap :om_042.
:om_042 a rr:ObjectMap;
    rr:constant "http://data.europa.eu/949/concepts/vehicle-types/passengerTrainset";
    rr:termType rr:IRI.
:pom_044 a rr:PredicateObjectMap.
:map_vehicles-types_000 rr:predicateObjectMap :pom_044.
:pm_044 a rr:PredicateMap.
:pom_044 rr:predicateMap :pm_044.
:pm_044 rr:constant era:subCategory.
:pom_044 rr:objectMap :om_043.
:om_043 a fnml:FunctionTermMap;
    rr:termType rr:IRI;
    fnml:functionValue :fn_016.
:fn_016 rml:logicalSource :source_000;
    rr:predicateObjectMap :pomexec_016.
:pomexec_016 rr:predicateMap :pmexec_016.
:pmexec_016 rr:constant fno:executes.
:pomexec_016 rr:objectMap :omexec_016.
:omexec_016 rr:constant "https://w3id.org/imec/idlab/function#trueCondition";
    rr:termType rr:IRI.
:fn_016 rr:predicateObjectMap :pom_045.
:pom_045 a rr:PredicateObjectMap;
    rr:predicateMap :pm_045.
:pm_045 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#strBoolean>.
:pom_045 rr:objectMap :om_044.
:om_044 a rr:ObjectMap, fnml:FunctionTermMap;
    fnml:functionValue :fn_017.
:fn_017 rml:logicalSource :source_000;
    rr:predicateObjectMap :pomexec_017.
:pomexec_017 rr:predicateMap :pmexec_017.
:pmexec_017 rr:constant fno:executes.
:pomexec_017 rr:objectMap :omexec_017.
:omexec_017 rr:constant "http://example.com/idlab/function/equal";
    rr:termType rr:IRI.
:fn_017 rr:predicateObjectMap :pom_046.
:pom_046 a rr:PredicateObjectMap;
    rr:predicateMap :pm_046.
:pm_046 a rr:PredicateMap;
    rr:constant grel:valueParameter.
:pom_046 rr:objectMap :om_045.
:om_045 a rr:ObjectMap;
    rml:reference "SubCategoryCode";
    rr:termType rr:Literal.
:fn_017 rr:predicateObjectMap :pom_047.
:pom_047 a rr:PredicateObjectMap;
    rr:predicateMap :pm_047.
:pm_047 a rr:PredicateMap;
    rr:constant grel:valueParameter2.
:pom_047 rr:objectMap :om_046.
:om_046 a rr:ObjectMap;
    rr:constant "15";
    rr:termType rr:Literal.
:fn_016 rr:predicateObjectMap :pom_048.
:pom_048 a rr:PredicateObjectMap;
    rr:predicateMap :pm_048.
:pm_048 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#str>.
:pom_048 rr:objectMap :om_047.
:om_047 a rr:ObjectMap;
    rr:constant "http://data.europa.eu/949/concepts/vehicle-types/freightTrainset";
    rr:termType rr:IRI.
:pom_049 a rr:PredicateObjectMap.
:map_vehicles-types_000 rr:predicateObjectMap :pom_049.
:pm_049 a rr:PredicateMap.
:pom_049 rr:predicateMap :pm_049.
:pm_049 rr:constant era:subCategory.
:pom_049 rr:objectMap :om_048.
:om_048 a fnml:FunctionTermMap;
    rr:termType rr:IRI;
    fnml:functionValue :fn_018.
:fn_018 rml:logicalSource :source_000;
    rr:predicateObjectMap :pomexec_018.
:pomexec_018 rr:predicateMap :pmexec_018.
:pmexec_018 rr:constant fno:executes.
:pomexec_018 rr:objectMap :omexec_018.
:omexec_018 rr:constant "https://w3id.org/imec/idlab/function#trueCondition";
    rr:termType rr:IRI.
:fn_018 rr:predicateObjectMap :pom_050.
:pom_050 a rr:PredicateObjectMap;
    rr:predicateMap :pm_050.
:pm_050 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#strBoolean>.
:pom_050 rr:objectMap :om_049.
:om_049 a rr:ObjectMap, fnml:FunctionTermMap;
    fnml:functionValue :fn_019.
:fn_019 rml:logicalSource :source_000;
    rr:predicateObjectMap :pomexec_019.
:pomexec_019 rr:predicateMap :pmexec_019.
:pmexec_019 rr:constant fno:executes.
:pomexec_019 rr:objectMap :omexec_019.
:omexec_019 rr:constant "http://example.com/idlab/function/equal";
    rr:termType rr:IRI.
:fn_019 rr:predicateObjectMap :pom_051.
:pom_051 a rr:PredicateObjectMap;
    rr:predicateMap :pm_051.
:pm_051 a rr:PredicateMap;
    rr:constant grel:valueParameter.
:pom_051 rr:objectMap :om_050.
:om_050 a rr:ObjectMap;
    rml:reference "SubCategoryCode";
    rr:termType rr:Literal.
:fn_019 rr:predicateObjectMap :pom_052.
:pom_052 a rr:PredicateObjectMap;
    rr:predicateMap :pm_052.
:pm_052 a rr:PredicateMap;
    rr:constant grel:valueParameter2.
:pom_052 rr:objectMap :om_051.
:om_051 a rr:ObjectMap;
    rr:constant "17";
    rr:termType rr:Literal.
:fn_018 rr:predicateObjectMap :pom_053.
:pom_053 a rr:PredicateObjectMap;
    rr:predicateMap :pm_053.
:pm_053 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#str>.
:pom_053 rr:objectMap :om_052.
:om_052 a rr:ObjectMap;
    rr:constant "http://data.europa.eu/949/concepts/vehicle-types/shunter";
    rr:termType rr:IRI.
:pom_054 a rr:PredicateObjectMap.
:map_vehicles-types_000 rr:predicateObjectMap :pom_054.
:pm_054 a rr:PredicateMap.
:pom_054 rr:predicateMap :pm_054.
:pm_054 rr:constant era:subCategory.
:pom_054 rr:objectMap :om_053.
:om_053 a fnml:FunctionTermMap;
    rr:termType rr:IRI;
    fnml:functionValue :fn_020.
:fn_020 rml:logicalSource :source_000;
    rr:predicateObjectMap :pomexec_020.
:pomexec_020 rr:predicateMap :pmexec_020.
:pmexec_020 rr:constant fno:executes.
:pomexec_020 rr:objectMap :omexec_020.
:omexec_020 rr:constant "https://w3id.org/imec/idlab/function#trueCondition";
    rr:termType rr:IRI.
:fn_020 rr:predicateObjectMap :pom_055.
:pom_055 a rr:PredicateObjectMap;
    rr:predicateMap :pm_055.
:pm_055 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#strBoolean>.
:pom_055 rr:objectMap :om_054.
:om_054 a rr:ObjectMap, fnml:FunctionTermMap;
    fnml:functionValue :fn_021.
:fn_021 rml:logicalSource :source_000;
    rr:predicateObjectMap :pomexec_021.
:pomexec_021 rr:predicateMap :pmexec_021.
:pmexec_021 rr:constant fno:executes.
:pomexec_021 rr:objectMap :omexec_021.
:omexec_021 rr:constant "http://example.com/idlab/function/equal";
    rr:termType rr:IRI.
:fn_021 rr:predicateObjectMap :pom_056.
:pom_056 a rr:PredicateObjectMap;
    rr:predicateMap :pm_056.
:pm_056 a rr:PredicateMap;
    rr:constant grel:valueParameter.
:pom_056 rr:objectMap :om_055.
:om_055 a rr:ObjectMap;
    rml:reference "SubCategoryCode";
    rr:termType rr:Literal.
:fn_021 rr:predicateObjectMap :pom_057.
:pom_057 a rr:PredicateObjectMap;
    rr:predicateMap :pm_057.
:pm_057 a rr:PredicateMap;
    rr:constant grel:valueParameter2.
:pom_057 rr:objectMap :om_056.
:om_056 a rr:ObjectMap;
    rr:constant "19";
    rr:termType rr:Literal.
:fn_020 rr:predicateObjectMap :pom_058.
:pom_058 a rr:PredicateObjectMap;
    rr:predicateMap :pm_058.
:pm_058 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#str>.
:pom_058 rr:objectMap :om_057.
:om_057 a rr:ObjectMap;
    rr:constant "http://data.europa.eu/949/concepts/vehicle-types/otherTractionVehicles";
    rr:termType rr:IRI.
:pom_059 a rr:PredicateObjectMap.
:map_vehicles-types_000 rr:predicateObjectMap :pom_059.
:pm_059 a rr:PredicateMap.
:pom_059 rr:predicateMap :pm_059.
:pm_059 rr:constant era:subCategory.
:pom_059 rr:objectMap :om_058.
:om_058 a fnml:FunctionTermMap;
    rr:termType rr:IRI;
    fnml:functionValue :fn_022.
:fn_022 rml:logicalSource :source_000;
    rr:predicateObjectMap :pomexec_022.
:pomexec_022 rr:predicateMap :pmexec_022.
:pmexec_022 rr:constant fno:executes.
:pomexec_022 rr:objectMap :omexec_022.
:omexec_022 rr:constant "https://w3id.org/imec/idlab/function#trueCondition";
    rr:termType rr:IRI.
:fn_022 rr:predicateObjectMap :pom_060.
:pom_060 a rr:PredicateObjectMap;
    rr:predicateMap :pm_060.
:pm_060 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#strBoolean>.
:pom_060 rr:objectMap :om_059.
:om_059 a rr:ObjectMap, fnml:FunctionTermMap;
    fnml:functionValue :fn_023.
:fn_023 rml:logicalSource :source_000;
    rr:predicateObjectMap :pomexec_023.
:pomexec_023 rr:predicateMap :pmexec_023.
:pmexec_023 rr:constant fno:executes.
:pomexec_023 rr:objectMap :omexec_023.
:omexec_023 rr:constant "http://example.com/idlab/function/equal";
    rr:termType rr:IRI.
:fn_023 rr:predicateObjectMap :pom_061.
:pom_061 a rr:PredicateObjectMap;
    rr:predicateMap :pm_061.
:pm_061 a rr:PredicateMap;
    rr:constant grel:valueParameter.
:pom_061 rr:objectMap :om_060.
:om_060 a rr:ObjectMap;
    rml:reference "SubCategoryCode";
    rr:termType rr:Literal.
:fn_023 rr:predicateObjectMap :pom_062.
:pom_062 a rr:PredicateObjectMap;
    rr:predicateMap :pm_062.
:pm_062 a rr:PredicateMap;
    rr:constant grel:valueParameter2.
:pom_062 rr:objectMap :om_061.
:om_061 a rr:ObjectMap;
    rr:constant "31";
    rr:termType rr:Literal.
:fn_022 rr:predicateObjectMap :pom_063.
:pom_063 a rr:PredicateObjectMap;
    rr:predicateMap :pm_063.
:pm_063 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#str>.
:pom_063 rr:objectMap :om_062.
:om_062 a rr:ObjectMap;
    rr:constant "http://data.europa.eu/949/concepts/vehicle-types/passengerCoach";
    rr:termType rr:IRI.
:pom_064 a rr:PredicateObjectMap.
:map_vehicles-types_000 rr:predicateObjectMap :pom_064.
:pm_064 a rr:PredicateMap.
:pom_064 rr:predicateMap :pm_064.
:pm_064 rr:constant era:subCategory.
:pom_064 rr:objectMap :om_063.
:om_063 a fnml:FunctionTermMap;
    rr:termType rr:IRI;
    fnml:functionValue :fn_024.
:fn_024 rml:logicalSource :source_000;
    rr:predicateObjectMap :pomexec_024.
:pomexec_024 rr:predicateMap :pmexec_024.
:pmexec_024 rr:constant fno:executes.
:pomexec_024 rr:objectMap :omexec_024.
:omexec_024 rr:constant "https://w3id.org/imec/idlab/function#trueCondition";
    rr:termType rr:IRI.
:fn_024 rr:predicateObjectMap :pom_065.
:pom_065 a rr:PredicateObjectMap;
    rr:predicateMap :pm_065.
:pm_065 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#strBoolean>.
:pom_065 rr:objectMap :om_064.
:om_064 a rr:ObjectMap, fnml:FunctionTermMap;
    fnml:functionValue :fn_025.
:fn_025 rml:logicalSource :source_000;
    rr:predicateObjectMap :pomexec_025.
:pomexec_025 rr:predicateMap :pmexec_025.
:pmexec_025 rr:constant fno:executes.
:pomexec_025 rr:objectMap :omexec_025.
:omexec_025 rr:constant "http://example.com/idlab/function/equal";
    rr:termType rr:IRI.
:fn_025 rr:predicateObjectMap :pom_066.
:pom_066 a rr:PredicateObjectMap;
    rr:predicateMap :pm_066.
:pm_066 a rr:PredicateMap;
    rr:constant grel:valueParameter.
:pom_066 rr:objectMap :om_065.
:om_065 a rr:ObjectMap;
    rml:reference "SubCategoryCode";
    rr:termType rr:Literal.
:fn_025 rr:predicateObjectMap :pom_067.
:pom_067 a rr:PredicateObjectMap;
    rr:predicateMap :pm_067.
:pm_067 a rr:PredicateMap;
    rr:constant grel:valueParameter2.
:pom_067 rr:objectMap :om_066.
:om_066 a rr:ObjectMap;
    rr:constant "33";
    rr:termType rr:Literal.
:fn_024 rr:predicateObjectMap :pom_068.
:pom_068 a rr:PredicateObjectMap;
    rr:predicateMap :pm_068.
:pm_068 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#str>.
:pom_068 rr:objectMap :om_067.
:om_067 a rr:ObjectMap;
    rr:constant "http://data.europa.eu/949/concepts/vehicle-types/van";
    rr:termType rr:IRI.
:pom_069 a rr:PredicateObjectMap.
:map_vehicles-types_000 rr:predicateObjectMap :pom_069.
:pm_069 a rr:PredicateMap.
:pom_069 rr:predicateMap :pm_069.
:pm_069 rr:constant era:subCategory.
:pom_069 rr:objectMap :om_068.
:om_068 a fnml:FunctionTermMap;
    rr:termType rr:IRI;
    fnml:functionValue :fn_026.
:fn_026 rml:logicalSource :source_000;
    rr:predicateObjectMap :pomexec_026.
:pomexec_026 rr:predicateMap :pmexec_026.
:pmexec_026 rr:constant fno:executes.
:pomexec_026 rr:objectMap :omexec_026.
:omexec_026 rr:constant "https://w3id.org/imec/idlab/function#trueCondition";
    rr:termType rr:IRI.
:fn_026 rr:predicateObjectMap :pom_070.
:pom_070 a rr:PredicateObjectMap;
    rr:predicateMap :pm_070.
:pm_070 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#strBoolean>.
:pom_070 rr:objectMap :om_069.
:om_069 a rr:ObjectMap, fnml:FunctionTermMap;
    fnml:functionValue :fn_027.
:fn_027 rml:logicalSource :source_000;
    rr:predicateObjectMap :pomexec_027.
:pomexec_027 rr:predicateMap :pmexec_027.
:pmexec_027 rr:constant fno:executes.
:pomexec_027 rr:objectMap :omexec_027.
:omexec_027 rr:constant "http://example.com/idlab/function/equal";
    rr:termType rr:IRI.
:fn_027 rr:predicateObjectMap :pom_071.
:pom_071 a rr:PredicateObjectMap;
    rr:predicateMap :pm_071.
:pm_071 a rr:PredicateMap;
    rr:constant grel:valueParameter.
:pom_071 rr:objectMap :om_070.
:om_070 a rr:ObjectMap;
    rml:reference "SubCategoryCode";
    rr:termType rr:Literal.
:fn_027 rr:predicateObjectMap :pom_072.
:pom_072 a rr:PredicateObjectMap;
    rr:predicateMap :pm_072.
:pm_072 a rr:PredicateMap;
    rr:constant grel:valueParameter2.
:pom_072 rr:objectMap :om_071.
:om_071 a rr:ObjectMap;
    rr:constant "35";
    rr:termType rr:Literal.
:fn_026 rr:predicateObjectMap :pom_073.
:pom_073 a rr:PredicateObjectMap;
    rr:predicateMap :pm_073.
:pm_073 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#str>.
:pom_073 rr:objectMap :om_072.
:om_072 a rr:ObjectMap;
    rr:constant "http://data.europa.eu/949/concepts/vehicle-types/carCarrier";
    rr:termType rr:IRI.
:pom_074 a rr:PredicateObjectMap.
:map_vehicles-types_000 rr:predicateObjectMap :pom_074.
:pm_074 a rr:PredicateMap.
:pom_074 rr:predicateMap :pm_074.
:pm_074 rr:constant era:subCategory.
:pom_074 rr:objectMap :om_073.
:om_073 a fnml:FunctionTermMap;
    rr:termType rr:IRI;
    fnml:functionValue :fn_028.
:fn_028 rml:logicalSource :source_000;
    rr:predicateObjectMap :pomexec_028.
:pomexec_028 rr:predicateMap :pmexec_028.
:pmexec_028 rr:constant fno:executes.
:pomexec_028 rr:objectMap :omexec_028.
:omexec_028 rr:constant "https://w3id.org/imec/idlab/function#trueCondition";
    rr:termType rr:IRI.
:fn_028 rr:predicateObjectMap :pom_075.
:pom_075 a rr:PredicateObjectMap;
    rr:predicateMap :pm_075.
:pm_075 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#strBoolean>.
:pom_075 rr:objectMap :om_074.
:om_074 a rr:ObjectMap, fnml:FunctionTermMap;
    fnml:functionValue :fn_029.
:fn_029 rml:logicalSource :source_000;
    rr:predicateObjectMap :pomexec_029.
:pomexec_029 rr:predicateMap :pmexec_029.
:pmexec_029 rr:constant fno:executes.
:pomexec_029 rr:objectMap :omexec_029.
:omexec_029 rr:constant "http://example.com/idlab/function/equal";
    rr:termType rr:IRI.
:fn_029 rr:predicateObjectMap :pom_076.
:pom_076 a rr:PredicateObjectMap;
    rr:predicateMap :pm_076.
:pm_076 a rr:PredicateMap;
    rr:constant grel:valueParameter.
:pom_076 rr:objectMap :om_075.
:om_075 a rr:ObjectMap;
    rml:reference "SubCategoryCode";
    rr:termType rr:Literal.
:fn_029 rr:predicateObjectMap :pom_077.
:pom_077 a rr:PredicateObjectMap;
    rr:predicateMap :pm_077.
:pm_077 a rr:PredicateMap;
    rr:constant grel:valueParameter2.
:pom_077 rr:objectMap :om_076.
:om_076 a rr:ObjectMap;
    rr:constant "37";
    rr:termType rr:Literal.
:fn_028 rr:predicateObjectMap :pom_078.
:pom_078 a rr:PredicateObjectMap;
    rr:predicateMap :pm_078.
:pm_078 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#str>.
:pom_078 rr:objectMap :om_077.
:om_077 a rr:ObjectMap;
    rr:constant "http://data.europa.eu/949/concepts/vehicle-types/serviceVehicle";
    rr:termType rr:IRI.
:pom_079 a rr:PredicateObjectMap.
:map_vehicles-types_000 rr:predicateObjectMap :pom_079.
:pm_079 a rr:PredicateMap.
:pom_079 rr:predicateMap :pm_079.
:pm_079 rr:constant era:subCategory.
:pom_079 rr:objectMap :om_078.
:om_078 a fnml:FunctionTermMap;
    rr:termType rr:IRI;
    fnml:functionValue :fn_030.
:fn_030 rml:logicalSource :source_000;
    rr:predicateObjectMap :pomexec_030.
:pomexec_030 rr:predicateMap :pmexec_030.
:pmexec_030 rr:constant fno:executes.
:pomexec_030 rr:objectMap :omexec_030.
:omexec_030 rr:constant "https://w3id.org/imec/idlab/function#trueCondition";
    rr:termType rr:IRI.
:fn_030 rr:predicateObjectMap :pom_080.
:pom_080 a rr:PredicateObjectMap;
    rr:predicateMap :pm_080.
:pm_080 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#strBoolean>.
:pom_080 rr:objectMap :om_079.
:om_079 a rr:ObjectMap, fnml:FunctionTermMap;
    fnml:functionValue :fn_031.
:fn_031 rml:logicalSource :source_000;
    rr:predicateObjectMap :pomexec_031.
:pomexec_031 rr:predicateMap :pmexec_031.
:pmexec_031 rr:constant fno:executes.
:pomexec_031 rr:objectMap :omexec_031.
:omexec_031 rr:constant "http://example.com/idlab/function/equal";
    rr:termType rr:IRI.
:fn_031 rr:predicateObjectMap :pom_081.
:pom_081 a rr:PredicateObjectMap;
    rr:predicateMap :pm_081.
:pm_081 a rr:PredicateMap;
    rr:constant grel:valueParameter.
:pom_081 rr:objectMap :om_080.
:om_080 a rr:ObjectMap;
    rml:reference "SubCategoryCode";
    rr:termType rr:Literal.
:fn_031 rr:predicateObjectMap :pom_082.
:pom_082 a rr:PredicateObjectMap;
    rr:predicateMap :pm_082.
:pm_082 a rr:PredicateMap;
    rr:constant grel:valueParameter2.
:pom_082 rr:objectMap :om_081.
:om_081 a rr:ObjectMap;
    rr:constant "39";
    rr:termType rr:Literal.
:fn_030 rr:predicateObjectMap :pom_083.
:pom_083 a rr:PredicateObjectMap;
    rr:predicateMap :pm_083.
:pm_083 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#str>.
:pom_083 rr:objectMap :om_082.
:om_082 a rr:ObjectMap;
    rr:constant "http://data.europa.eu/949/concepts/vehicle-types/coachesRake";
    rr:termType rr:IRI.
:pom_084 a rr:PredicateObjectMap.
:map_vehicles-types_000 rr:predicateObjectMap :pom_084.
:pm_084 a rr:PredicateMap.
:pom_084 rr:predicateMap :pm_084.
:pm_084 rr:constant era:subCategory.
:pom_084 rr:objectMap :om_083.
:om_083 a fnml:FunctionTermMap;
    rr:termType rr:IRI;
    fnml:functionValue :fn_032.
:fn_032 rml:logicalSource :source_000;
    rr:predicateObjectMap :pomexec_032.
:pomexec_032 rr:predicateMap :pmexec_032.
:pmexec_032 rr:constant fno:executes.
:pomexec_032 rr:objectMap :omexec_032.
:omexec_032 rr:constant "https://w3id.org/imec/idlab/function#trueCondition";
    rr:termType rr:IRI.
:fn_032 rr:predicateObjectMap :pom_085.
:pom_085 a rr:PredicateObjectMap;
    rr:predicateMap :pm_085.
:pm_085 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#strBoolean>.
:pom_085 rr:objectMap :om_084.
:om_084 a rr:ObjectMap, fnml:FunctionTermMap;
    fnml:functionValue :fn_033.
:fn_033 rml:logicalSource :source_000;
    rr:predicateObjectMap :pomexec_033.
:pomexec_033 rr:predicateMap :pmexec_033.
:pmexec_033 rr:constant fno:executes.
:pomexec_033 rr:objectMap :omexec_033.
:omexec_033 rr:constant "http://example.com/idlab/function/equal";
    rr:termType rr:IRI.
:fn_033 rr:predicateObjectMap :pom_086.
:pom_086 a rr:PredicateObjectMap;
    rr:predicateMap :pm_086.
:pm_086 a rr:PredicateMap;
    rr:constant grel:valueParameter.
:pom_086 rr:objectMap :om_085.
:om_085 a rr:ObjectMap;
    rml:reference "SubCategoryCode";
    rr:termType rr:Literal.
:fn_033 rr:predicateObjectMap :pom_087.
:pom_087 a rr:PredicateObjectMap;
    rr:predicateMap :pm_087.
:pm_087 a rr:PredicateMap;
    rr:constant grel:valueParameter2.
:pom_087 rr:objectMap :om_086.
:om_086 a rr:ObjectMap;
    rr:constant "41";
    rr:termType rr:Literal.
:fn_032 rr:predicateObjectMap :pom_088.
:pom_088 a rr:PredicateObjectMap;
    rr:predicateMap :pm_088.
:pm_088 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#str>.
:pom_088 rr:objectMap :om_087.
:om_087 a rr:ObjectMap;
    rr:constant "http://data.europa.eu/949/concepts/vehicle-types/otherHauledPassenger";
    rr:termType rr:IRI.
:pom_089 a rr:PredicateObjectMap.
:map_vehicles-types_000 rr:predicateObjectMap :pom_089.
:pm_089 a rr:PredicateMap.
:pom_089 rr:predicateMap :pm_089.
:pm_089 rr:constant era:subCategory.
:pom_089 rr:objectMap :om_088.
:om_088 a fnml:FunctionTermMap;
    rr:termType rr:IRI;
    fnml:functionValue :fn_034.
:fn_034 rml:logicalSource :source_000;
    rr:predicateObjectMap :pomexec_034.
:pomexec_034 rr:predicateMap :pmexec_034.
:pmexec_034 rr:constant fno:executes.
:pomexec_034 rr:objectMap :omexec_034.
:omexec_034 rr:constant "https://w3id.org/imec/idlab/function#trueCondition";
    rr:termType rr:IRI.
:fn_034 rr:predicateObjectMap :pom_090.
:pom_090 a rr:PredicateObjectMap;
    rr:predicateMap :pm_090.
:pm_090 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#strBoolean>.
:pom_090 rr:objectMap :om_089.
:om_089 a rr:ObjectMap, fnml:FunctionTermMap;
    fnml:functionValue :fn_035.
:fn_035 rml:logicalSource :source_000;
    rr:predicateObjectMap :pomexec_035.
:pomexec_035 rr:predicateMap :pmexec_035.
:pmexec_035 rr:constant fno:executes.
:pomexec_035 rr:objectMap :omexec_035.
:omexec_035 rr:constant "http://example.com/idlab/function/equal";
    rr:termType rr:IRI.
:fn_035 rr:predicateObjectMap :pom_091.
:pom_091 a rr:PredicateObjectMap;
    rr:predicateMap :pm_091.
:pm_091 a rr:PredicateMap;
    rr:constant grel:valueParameter.
:pom_091 rr:objectMap :om_090.
:om_090 a rr:ObjectMap;
    rml:reference "SubCategoryCode";
    rr:termType rr:Literal.
:fn_035 rr:predicateObjectMap :pom_092.
:pom_092 a rr:PredicateObjectMap;
    rr:predicateMap :pm_092.
:pm_092 a rr:PredicateMap;
    rr:constant grel:valueParameter2.
:pom_092 rr:objectMap :om_091.
:om_091 a rr:ObjectMap;
    rr:constant "51";
    rr:termType rr:Literal.
:fn_034 rr:predicateObjectMap :pom_093.
:pom_093 a rr:PredicateObjectMap;
    rr:predicateMap :pm_093.
:pm_093 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#str>.
:pom_093 rr:objectMap :om_092.
:om_092 a rr:ObjectMap;
    rr:constant "http://data.europa.eu/949/concepts/vehicle-types/freightWagon";
    rr:termType rr:IRI.
:pom_094 a rr:PredicateObjectMap.
:map_vehicles-types_000 rr:predicateObjectMap :pom_094.
:pm_094 a rr:PredicateMap.
:pom_094 rr:predicateMap :pm_094.
:pm_094 rr:constant era:subCategory.
:pom_094 rr:objectMap :om_093.
:om_093 a fnml:FunctionTermMap;
    rr:termType rr:IRI;
    fnml:functionValue :fn_036.
:fn_036 rml:logicalSource :source_000;
    rr:predicateObjectMap :pomexec_036.
:pomexec_036 rr:predicateMap :pmexec_036.
:pmexec_036 rr:constant fno:executes.
:pomexec_036 rr:objectMap :omexec_036.
:omexec_036 rr:constant "https://w3id.org/imec/idlab/function#trueCondition";
    rr:termType rr:IRI.
:fn_036 rr:predicateObjectMap :pom_095.
:pom_095 a rr:PredicateObjectMap;
    rr:predicateMap :pm_095.
:pm_095 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#strBoolean>.
:pom_095 rr:objectMap :om_094.
:om_094 a rr:ObjectMap, fnml:FunctionTermMap;
    fnml:functionValue :fn_037.
:fn_037 rml:logicalSource :source_000;
    rr:predicateObjectMap :pomexec_037.
:pomexec_037 rr:predicateMap :pmexec_037.
:pmexec_037 rr:constant fno:executes.
:pomexec_037 rr:objectMap :omexec_037.
:omexec_037 rr:constant "http://example.com/idlab/function/equal";
    rr:termType rr:IRI.
:fn_037 rr:predicateObjectMap :pom_096.
:pom_096 a rr:PredicateObjectMap;
    rr:predicateMap :pm_096.
:pm_096 a rr:PredicateMap;
    rr:constant grel:valueParameter.
:pom_096 rr:objectMap :om_095.
:om_095 a rr:ObjectMap;
    rml:reference "SubCategoryCode";
    rr:termType rr:Literal.
:fn_037 rr:predicateObjectMap :pom_097.
:pom_097 a rr:PredicateObjectMap;
    rr:predicateMap :pm_097.
:pm_097 a rr:PredicateMap;
    rr:constant grel:valueParameter2.
:pom_097 rr:objectMap :om_096.
:om_096 a rr:ObjectMap;
    rr:constant "53";
    rr:termType rr:Literal.
:fn_036 rr:predicateObjectMap :pom_098.
:pom_098 a rr:PredicateObjectMap;
    rr:predicateMap :pm_098.
:pm_098 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#str>.
:pom_098 rr:objectMap :om_097.
:om_097 a rr:ObjectMap;
    rr:constant "http://data.europa.eu/949/concepts/vehicle-types/freightWagonsRake";
    rr:termType rr:IRI.
:pom_099 a rr:PredicateObjectMap.
:map_vehicles-types_000 rr:predicateObjectMap :pom_099.
:pm_099 a rr:PredicateMap.
:pom_099 rr:predicateMap :pm_099.
:pm_099 rr:constant era:subCategory.
:pom_099 rr:objectMap :om_098.
:om_098 a fnml:FunctionTermMap;
    rr:termType rr:IRI;
    fnml:functionValue :fn_038.
:fn_038 rml:logicalSource :source_000;
    rr:predicateObjectMap :pomexec_038.
:pomexec_038 rr:predicateMap :pmexec_038.
:pmexec_038 rr:constant fno:executes.
:pomexec_038 rr:objectMap :omexec_038.
:omexec_038 rr:constant "https://w3id.org/imec/idlab/function#trueCondition";
    rr:termType rr:IRI.
:fn_038 rr:predicateObjectMap :pom_100.
:pom_100 a rr:PredicateObjectMap;
    rr:predicateMap :pm_100.
:pm_100 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#strBoolean>.
:pom_100 rr:objectMap :om_099.
:om_099 a rr:ObjectMap, fnml:FunctionTermMap;
    fnml:functionValue :fn_039.
:fn_039 rml:logicalSource :source_000;
    rr:predicateObjectMap :pomexec_039.
:pomexec_039 rr:predicateMap :pmexec_039.
:pmexec_039 rr:constant fno:executes.
:pomexec_039 rr:objectMap :omexec_039.
:omexec_039 rr:constant "http://example.com/idlab/function/equal";
    rr:termType rr:IRI.
:fn_039 rr:predicateObjectMap :pom_101.
:pom_101 a rr:PredicateObjectMap;
    rr:predicateMap :pm_101.
:pm_101 a rr:PredicateMap;
    rr:constant grel:valueParameter.
:pom_101 rr:objectMap :om_100.
:om_100 a rr:ObjectMap;
    rml:reference "SubCategoryCode";
    rr:termType rr:Literal.
:fn_039 rr:predicateObjectMap :pom_102.
:pom_102 a rr:PredicateObjectMap;
    rr:predicateMap :pm_102.
:pm_102 a rr:PredicateMap;
    rr:constant grel:valueParameter2.
:pom_102 rr:objectMap :om_101.
:om_101 a rr:ObjectMap;
    rr:constant "71";
    rr:termType rr:Literal.
:fn_038 rr:predicateObjectMap :pom_103.
:pom_103 a rr:PredicateObjectMap;
    rr:predicateMap :pm_103.
:pm_103 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#str>.
:pom_103 rr:objectMap :om_102.
:om_102 a rr:ObjectMap;
    rr:constant "http://data.europa.eu/949/concepts/vehicle-types/selfPropelledSpecialVehicle";
    rr:termType rr:IRI.
:pom_104 a rr:PredicateObjectMap.
:map_vehicles-types_000 rr:predicateObjectMap :pom_104.
:pm_104 a rr:PredicateMap.
:pom_104 rr:predicateMap :pm_104.
:pm_104 rr:constant era:subCategory.
:pom_104 rr:objectMap :om_103.
:om_103 a fnml:FunctionTermMap;
    rr:termType rr:IRI;
    fnml:functionValue :fn_040.
:fn_040 rml:logicalSource :source_000;
    rr:predicateObjectMap :pomexec_040.
:pomexec_040 rr:predicateMap :pmexec_040.
:pmexec_040 rr:constant fno:executes.
:pomexec_040 rr:objectMap :omexec_040.
:omexec_040 rr:constant "https://w3id.org/imec/idlab/function#trueCondition";
    rr:termType rr:IRI.
:fn_040 rr:predicateObjectMap :pom_105.
:pom_105 a rr:PredicateObjectMap;
    rr:predicateMap :pm_105.
:pm_105 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#strBoolean>.
:pom_105 rr:objectMap :om_104.
:om_104 a rr:ObjectMap, fnml:FunctionTermMap;
    fnml:functionValue :fn_041.
:fn_041 rml:logicalSource :source_000;
    rr:predicateObjectMap :pomexec_041.
:pomexec_041 rr:predicateMap :pmexec_041.
:pmexec_041 rr:constant fno:executes.
:pomexec_041 rr:objectMap :omexec_041.
:omexec_041 rr:constant "http://example.com/idlab/function/equal";
    rr:termType rr:IRI.
:fn_041 rr:predicateObjectMap :pom_106.
:pom_106 a rr:PredicateObjectMap;
    rr:predicateMap :pm_106.
:pm_106 a rr:PredicateMap;
    rr:constant grel:valueParameter.
:pom_106 rr:objectMap :om_105.
:om_105 a rr:ObjectMap;
    rml:reference "SubCategoryCode";
    rr:termType rr:Literal.
:fn_041 rr:predicateObjectMap :pom_107.
:pom_107 a rr:PredicateObjectMap;
    rr:predicateMap :pm_107.
:pm_107 a rr:PredicateMap;
    rr:constant grel:valueParameter2.
:pom_107 rr:objectMap :om_106.
:om_106 a rr:ObjectMap;
    rr:constant "73";
    rr:termType rr:Literal.
:fn_040 rr:predicateObjectMap :pom_108.
:pom_108 a rr:PredicateObjectMap;
    rr:predicateMap :pm_108.
:pm_108 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#str>.
:pom_108 rr:objectMap :om_107.
:om_107 a rr:ObjectMap;
    rr:constant "http://data.europa.eu/949/concepts/vehicle-types/hauledSpecialVehicle";
    rr:termType rr:IRI.
:rules_000 void:exampleResource :map_authorized-countries_000.
:map_authorized-countries_000 rml:logicalSource :source_001.
:source_001 a rml:LogicalSource;
    rml:source :database_001;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, Countries.Code FROM ERATV.dbo.VehicleTypes, ERATV.dbo.Authorisations, ERATV.dbo.AuthorisationMemberStates, ERATV.dbo.Countries WHERE VehicleTypes.Id = Authorisations.VehicleTypeId AND Authorisations.Id = AuthorisationMemberStates.AuthorisationId AND AuthorisationMemberStates.CountryId = Countries.Id AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_001 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_001 rml:referenceFormulation ql:CSV.
:map_authorized-countries_000 a rr:TriplesMap;
    rdfs:label "authorized-countries".
:s_001 a rr:SubjectMap.
:map_authorized-countries_000 rr:subjectMap :s_001.
:s_001 rr:template "http://data.europa.eu/949/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_001.
:gm_001 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_109 a rr:PredicateObjectMap.
:map_authorized-countries_000 rr:predicateObjectMap :pom_109.
:pm_109 a rr:PredicateMap.
:pom_109 rr:predicateMap :pm_109.
:pm_109 rr:constant era:authorizedCountry.
:rules_000 void:exampleResource :map_eu-country_000.
:map_eu-country_000 rml:logicalSource :source_002.
:source_002 a rml:LogicalSource;
    rml:source "data/countries.csv";
    rml:referenceFormulation ql:CSV.
:map_eu-country_000 a rr:TriplesMap;
    rdfs:label "eu-country".
:s_002 a rr:SubjectMap.
:map_eu-country_000 rr:subjectMap :s_002.
:s_002 rml:reference "eu".
:rules_000 void:exampleResource :map_driving-cabs_000.
:map_driving-cabs_000 rml:logicalSource :source_003.
:source_003 a rml:LogicalSource;
    rml:source :database_002;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, DrivingCabs.Name FROM ERATV.dbo.VehicleTypes, ERATV.dbo.DrivingCabs WHERE VehicleTypes.DrivingCabsId = DrivingCabs.Id AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_002 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_003 rml:referenceFormulation ql:CSV.
:map_driving-cabs_000 a rr:TriplesMap;
    rdfs:label "driving-cabs".
:s_003 a rr:SubjectMap.
:map_driving-cabs_000 rr:subjectMap :s_003.
:s_003 rr:template "http://data.europa.eu/949/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_002.
:gm_002 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_110 a rr:PredicateObjectMap.
:map_driving-cabs_000 rr:predicateObjectMap :pom_110.
:pm_110 a rr:PredicateMap.
:pom_110 rr:predicateMap :pm_110.
:pm_110 rr:constant era:drivingCabs.
:pom_110 rr:objectMap :om_108.
:om_108 a rr:ObjectMap;
    rml:reference "Name";
    rr:termType rr:Literal;
    rr:datatype xsd:integer.
:rules_000 void:exampleResource :map_maximum-design-speed_000.
:map_maximum-design-speed_000 rml:logicalSource :source_004.
:source_004 a rml:LogicalSource;
    rml:source :database_003;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.1.2.1')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_003 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_004 rml:referenceFormulation ql:CSV.
:map_maximum-design-speed_000 a rr:TriplesMap;
    rdfs:label "maximum-design-speed".
:s_004 a rr:SubjectMap.
:map_maximum-design-speed_000 rr:subjectMap :s_004.
:s_004 rr:template "http://data.europa.eu/949/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_003.
:gm_003 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_111 a rr:PredicateObjectMap.
:map_maximum-design-speed_000 rr:predicateObjectMap :pom_111.
:pm_111 a rr:PredicateMap.
:pom_111 rr:predicateMap :pm_111.
:pm_111 rr:constant era:maximumDesignSpeed.
:pom_111 rr:objectMap :om_109.
:om_109 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal;
    rr:datatype xsd:integer.
:rules_000 void:exampleResource :map_maximum-speed-empty_000.
:map_maximum-speed-empty_000 rml:logicalSource :source_005.
:source_005 a rml:LogicalSource;
    rml:source :database_004;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.1.2.2')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_004 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_005 rml:referenceFormulation ql:CSV.
:map_maximum-speed-empty_000 a rr:TriplesMap;
    rdfs:label "maximum-speed-empty".
:s_005 a rr:SubjectMap.
:map_maximum-speed-empty_000 rr:subjectMap :s_005.
:s_005 rr:template "http://era.europa.eu/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_004.
:gm_004 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_112 a rr:PredicateObjectMap.
:map_maximum-speed-empty_000 rr:predicateObjectMap :pom_112.
:pm_112 a rr:PredicateMap.
:pom_112 rr:predicateMap :pm_112.
:pm_112 rr:constant era:maximumSpeedEmpty.
:pom_112 rr:objectMap :om_110.
:om_110 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal;
    rr:datatype xsd:integer.
:rules_000 void:exampleResource :map_wheelset-gauge_000.
:map_wheelset-gauge_000 rml:logicalSource :source_006.
:source_006 a rml:LogicalSource;
    rml:source :database_005;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, Parameters.Code, Parameters.Name AS ParameterName, REVERSE(SUBSTRING(REVERSE(CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId))), 3, 10)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.1.3')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_005 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_006 rml:referenceFormulation ql:CSV.
:map_wheelset-gauge_000 a rr:TriplesMap;
    rdfs:label "wheelset-gauge".
:s_006 a rr:SubjectMap.
:map_wheelset-gauge_000 rr:subjectMap :s_006.
:s_006 rr:template "http://data.europa.eu/949/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_005.
:gm_005 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_113 a rr:PredicateObjectMap.
:map_wheelset-gauge_000 rr:predicateObjectMap :pom_113.
:pm_113 a rr:PredicateMap.
:pom_113 rr:predicateMap :pm_113.
:pm_113 rr:constant era:wheelSetGauge.
:pom_113 rr:objectMap :om_111.
:om_111 a rr:ObjectMap;
    rr:template "http://data.europa.eu/949/concepts/nominal-track-gauges/{ParameterValue}";
    rr:termType rr:IRI.
:rules_000 void:exampleResource :map_wheelset-gauge-transformation-method_000.
:map_wheelset-gauge-transformation-method_000 rml:logicalSource :source_007.
:source_007 a rml:LogicalSource;
    rml:source :database_006;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.1.3.b')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_006 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_007 rml:referenceFormulation ql:CSV.
:map_wheelset-gauge-transformation-method_000 a rr:TriplesMap;
    rdfs:label "wheelset-gauge-transformation-method".
:s_007 a rr:SubjectMap.
:map_wheelset-gauge-transformation-method_000 rr:subjectMap :s_007.
:s_007 rr:template "http://era.europa.eu/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_006.
:gm_006 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_114 a rr:PredicateObjectMap.
:map_wheelset-gauge-transformation-method_000 rr:predicateObjectMap :pom_114.
:pm_114 a rr:PredicateMap.
:pom_114 rr:predicateMap :pm_114.
:pm_114 rr:constant era:wheelSetGaugeTransformationMethod.
:pom_114 rr:objectMap :om_112.
:om_112 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal.
:rules_000 void:exampleResource :map_conditions-regarding-train-formation_000.
:map_conditions-regarding-train-formation_000 rml:logicalSource :source_008.
:source_008 a rml:LogicalSource;
    rml:source :database_007;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.1.4')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_007 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_008 rml:referenceFormulation ql:CSV.
:map_conditions-regarding-train-formation_000 a rr:TriplesMap;
    rdfs:label "conditions-regarding-train-formation".
:s_008 a rr:SubjectMap.
:map_conditions-regarding-train-formation_000 rr:subjectMap :s_008.
:s_008 rr:template "http://era.europa.eu/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_007.
:gm_007 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_115 a rr:PredicateObjectMap.
:map_conditions-regarding-train-formation_000 rr:predicateObjectMap :pom_115.
:pm_115 a rr:PredicateMap.
:pom_115 rr:predicateMap :pm_115.
:pm_115 rr:constant era:conditionsTrainFormation.
:pom_115 rr:objectMap :om_113.
:om_113 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal.
:rules_000 void:exampleResource :map_maximum-trainsets-locomotives-coupled_000.
:map_maximum-trainsets-locomotives-coupled_000 rml:logicalSource :source_009.
:source_009 a rml:LogicalSource;
    rml:source :database_008;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.1.5')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_008 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_009 rml:referenceFormulation ql:CSV.
:map_maximum-trainsets-locomotives-coupled_000 a rr:TriplesMap;
    rdfs:label "maximum-trainsets-locomotives-coupled".
:s_009 a rr:SubjectMap.
:map_maximum-trainsets-locomotives-coupled_000 rr:subjectMap :s_009.
:s_009 rr:template "http://era.europa.eu/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_008.
:gm_008 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_116 a rr:PredicateObjectMap.
:map_maximum-trainsets-locomotives-coupled_000 rr:predicateObjectMap :pom_116.
:pm_116 a rr:PredicateMap.
:pom_116 rr:predicateMap :pm_116.
:pm_116 rr:constant era:maximumLocomotivesCoupled.
:pom_116 rr:objectMap :om_114.
:om_114 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal;
    rr:datatype xsd:integer.
:rules_000 void:exampleResource :map_number-elements-rake-freight-wagons_000.
:map_number-elements-rake-freight-wagons_000 rml:logicalSource :source_010.
:source_010 a rml:LogicalSource;
    rml:source :database_009;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.1.6')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_009 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_010 rml:referenceFormulation ql:CSV.
:map_number-elements-rake-freight-wagons_000 a rr:TriplesMap;
    rdfs:label "number-elements-rake-freight-wagons".
:s_010 a rr:SubjectMap.
:map_number-elements-rake-freight-wagons_000 rr:subjectMap :s_010.
:s_010 rr:template "http://era.europa.eu/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_009.
:gm_009 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_117 a rr:PredicateObjectMap.
:map_number-elements-rake-freight-wagons_000 rr:predicateObjectMap :pom_117.
:pm_117 a rr:PredicateMap.
:pom_117 rr:predicateMap :pm_117.
:pm_117 rr:constant era:numberElementsRakeFreightWagons.
:pom_117 rr:objectMap :om_115.
:om_115 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal;
    rr:datatype xsd:integer.
:rules_000 void:exampleResource :map_letter-marking_000.
:map_letter-marking_000 rml:logicalSource :source_011.
:source_011 a rml:LogicalSource;
    rml:source :database_010;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.1.7')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_010 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_011 rml:referenceFormulation ql:CSV.
:map_letter-marking_000 a rr:TriplesMap;
    rdfs:label "letter-marking".
:s_011 a rr:SubjectMap.
:map_letter-marking_000 rr:subjectMap :s_011.
:s_011 rr:template "http://era.europa.eu/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_010.
:gm_010 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_118 a rr:PredicateObjectMap.
:map_letter-marking_000 rr:predicateObjectMap :pom_118.
:pm_118 a rr:PredicateMap.
:pom_118 rr:predicateMap :pm_118.
:pm_118 rr:constant era:letterMarking.
:pom_118 rr:objectMap :om_116.
:om_116 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal.
:rules_000 void:exampleResource :map_meets-requirement-vehicle-authorisation-member-state_000.
:map_meets-requirement-vehicle-authorisation-member-state_000 rml:logicalSource :source_012.
:source_012 a rml:LogicalSource;
    rml:source :database_011;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.1.8')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_011 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_012 rml:referenceFormulation ql:CSV.
:map_meets-requirement-vehicle-authorisation-member-state_000 a rr:TriplesMap;
    rdfs:label "meets-requirement-vehicle-authorisation-member-state".
:s_012 a rr:SubjectMap.
:map_meets-requirement-vehicle-authorisation-member-state_000 rr:subjectMap :s_012.
:s_012 rr:template "http://era.europa.eu/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_011.
:gm_011 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_119 a rr:PredicateObjectMap.
:map_meets-requirement-vehicle-authorisation-member-state_000 rr:predicateObjectMap :pom_119.
:pm_119 a rr:PredicateMap.
:pom_119 rr:predicateMap :pm_119.
:pm_119 rr:constant era:meetsRequirementVehicleAuthorisation.
:pom_119 rr:objectMap :om_117.
:om_117 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal.
:rules_000 void:exampleResource :map_dangerous-goods-tank-code_000.
:map_dangerous-goods-tank-code_000 rml:logicalSource :source_013.
:source_013 a rml:LogicalSource;
    rml:source :database_012;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.1.9')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_012 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_013 rml:referenceFormulation ql:CSV.
:map_dangerous-goods-tank-code_000 a rr:TriplesMap;
    rdfs:label "dangerous-goods-tank-code".
:s_013 a rr:SubjectMap.
:map_dangerous-goods-tank-code_000 rr:subjectMap :s_013.
:s_013 rr:template "http://era.europa.eu/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_012.
:gm_012 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_120 a rr:PredicateObjectMap.
:map_dangerous-goods-tank-code_000 rr:predicateObjectMap :pom_120.
:pm_120 a rr:PredicateMap.
:pom_120 rr:predicateMap :pm_120.
:pm_120 rr:constant era:dangerousGoodsTankCode.
:pom_120 rr:objectMap :om_118.
:om_118 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal.
:rules_000 void:exampleResource :map_structural-category_000.
:map_structural-category_000 rml:logicalSource :source_014.
:source_014 a rml:LogicalSource;
    rml:source :database_013;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, CASE WHEN RegistrationParameters.OtherValue IS NOT NULL THEN RegistrationParameters.OtherValue ELSE ReferenceListValues.[Name] END AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters, ERATV.dbo.ReferenceListValues WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.1.10')) AND RegistrationParameters.ReferenceListValueId = ReferenceListValues.Id AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_013 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_014 rml:referenceFormulation ql:CSV.
:map_structural-category_000 a rr:TriplesMap;
    rdfs:label "structural-category".
:s_014 a rr:SubjectMap.
:map_structural-category_000 rr:subjectMap :s_014.
:s_014 rr:template "http://era.europa.eu/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_013.
:gm_013 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_121 a rr:PredicateObjectMap.
:map_structural-category_000 rr:predicateObjectMap :pom_121.
:pm_121 a rr:PredicateMap.
:pom_121 rr:predicateMap :pm_121.
:pm_121 rr:constant era:structuralCategory.
:pom_121 rr:objectMap :om_119.
:om_119 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal.
:rules_000 void:exampleResource :map_wheelset-gauge-changeover-facility_000.
:map_wheelset-gauge-changeover-facility_000 rml:logicalSource :source_015.
:source_015 a rml:LogicalSource;
    rml:source :database_014;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, (SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId) AS ParameterValue, RegistrationParameters.OtherValue, REPLACE((SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId), ' ', '_') AS ParameterURI, REPLACE(RegistrationParameters.OtherValue, ' ', '_') AS OtherURI FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.1.11')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_014 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_015 rml:referenceFormulation ql:CSV.
:map_wheelset-gauge-changeover-facility_000 a rr:TriplesMap;
    rdfs:label "wheelset-gauge-changeover-facility".
:s_015 a rr:SubjectMap.
:map_wheelset-gauge-changeover-facility_000 rr:subjectMap :s_015.
:s_015 rr:template "http://data.europa.eu/949/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_014.
:gm_014 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_122 a rr:PredicateObjectMap.
:map_wheelset-gauge-changeover-facility_000 rr:predicateObjectMap :pom_122.
:pm_122 a rr:PredicateMap.
:pom_122 rr:predicateMap :pm_122.
:pm_122 rr:constant era:wheelSetGaugeChangeoverFacility.
:pom_122 rr:objectMap :om_120.
:om_120 a fnml:FunctionTermMap;
    rr:termType rr:IRI;
    fnml:functionValue :fn_042.
:fn_042 rml:logicalSource :source_015;
    rr:predicateObjectMap :pomexec_042.
:pomexec_042 rr:predicateMap :pmexec_042.
:pmexec_042 rr:constant fno:executes.
:pomexec_042 rr:objectMap :omexec_042.
:omexec_042 rr:constant "https://w3id.org/imec/idlab/function#trueCondition";
    rr:termType rr:IRI.
:fn_042 rr:predicateObjectMap :pom_123.
:pom_123 a rr:PredicateObjectMap;
    rr:predicateMap :pm_123.
:pm_123 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#strBoolean>.
:pom_123 rr:objectMap :om_121.
:om_121 a rr:ObjectMap, fnml:FunctionTermMap;
    fnml:functionValue :fn_043.
:fn_043 rml:logicalSource :source_015;
    rr:predicateObjectMap :pomexec_043.
:pomexec_043 rr:predicateMap :pmexec_043.
:pmexec_043 rr:constant fno:executes.
:pomexec_043 rr:objectMap :omexec_043.
:omexec_043 rr:constant "http://example.com/idlab/function/equal";
    rr:termType rr:IRI.
:fn_043 rr:predicateObjectMap :pom_124.
:pom_124 a rr:PredicateObjectMap;
    rr:predicateMap :pm_124.
:pm_124 a rr:PredicateMap;
    rr:constant grel:valueParameter.
:pom_124 rr:objectMap :om_122.
:om_122 a rr:ObjectMap;
    rml:reference "OtherURI";
    rr:termType rr:Literal.
:fn_043 rr:predicateObjectMap :pom_125.
:pom_125 a rr:PredicateObjectMap;
    rr:predicateMap :pm_125.
:pm_125 a rr:PredicateMap;
    rr:constant grel:valueParameter2.
:pom_125 rr:objectMap :om_123.
:om_123 a rr:ObjectMap;
    rr:constant "";
    rr:termType rr:Literal.
:fn_042 rr:predicateObjectMap :pom_126.
:pom_126 a rr:PredicateObjectMap;
    rr:predicateMap :pm_126.
:pm_126 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#str>.
:pom_126 rr:objectMap :om_124.
:om_124 a rr:ObjectMap;
    rr:template "http://data.europa.eu/949/concepts/gauge-changeover-facilities/{ParameterURI}";
    rr:termType rr:IRI.
:pom_127 a rr:PredicateObjectMap.
:map_wheelset-gauge-changeover-facility_000 rr:predicateObjectMap :pom_127.
:pm_127 a rr:PredicateMap.
:pom_127 rr:predicateMap :pm_127.
:pm_127 rr:constant era:wheelSetGaugeChangeoverFacility.
:pom_127 rr:objectMap :om_125.
:om_125 a fnml:FunctionTermMap;
    rr:termType rr:IRI;
    fnml:functionValue :fn_044.
:fn_044 rml:logicalSource :source_015;
    rr:predicateObjectMap :pomexec_044.
:pomexec_044 rr:predicateMap :pmexec_044.
:pmexec_044 rr:constant fno:executes.
:pomexec_044 rr:objectMap :omexec_044.
:omexec_044 rr:constant "https://w3id.org/imec/idlab/function#trueCondition";
    rr:termType rr:IRI.
:fn_044 rr:predicateObjectMap :pom_128.
:pom_128 a rr:PredicateObjectMap;
    rr:predicateMap :pm_128.
:pm_128 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#strBoolean>.
:pom_128 rr:objectMap :om_126.
:om_126 a rr:ObjectMap, fnml:FunctionTermMap;
    fnml:functionValue :fn_045.
:fn_045 rml:logicalSource :source_015;
    rr:predicateObjectMap :pomexec_045.
:pomexec_045 rr:predicateMap :pmexec_045.
:pmexec_045 rr:constant fno:executes.
:pomexec_045 rr:objectMap :omexec_045.
:omexec_045 rr:constant "http://example.com/idlab/function/notEqual";
    rr:termType rr:IRI.
:fn_045 rr:predicateObjectMap :pom_129.
:pom_129 a rr:PredicateObjectMap;
    rr:predicateMap :pm_129.
:pm_129 a rr:PredicateMap;
    rr:constant grel:valueParameter.
:pom_129 rr:objectMap :om_127.
:om_127 a rr:ObjectMap;
    rml:reference "OtherURI";
    rr:termType rr:Literal.
:fn_045 rr:predicateObjectMap :pom_130.
:pom_130 a rr:PredicateObjectMap;
    rr:predicateMap :pm_130.
:pm_130 a rr:PredicateMap;
    rr:constant grel:valueParameter2.
:pom_130 rr:objectMap :om_128.
:om_128 a rr:ObjectMap;
    rr:constant "";
    rr:termType rr:Literal.
:fn_044 rr:predicateObjectMap :pom_131.
:pom_131 a rr:PredicateObjectMap;
    rr:predicateMap :pm_131.
:pm_131 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#str>.
:pom_131 rr:objectMap :om_129.
:om_129 a rr:ObjectMap;
    rr:template "http://data.europa.eu/949/concepts/gauge-changeover-facilities/{OtherURI}";
    rr:termType rr:IRI.
:rules_000 void:exampleResource :map_vehicles-composing-fixed-formation_000.
:map_vehicles-composing-fixed-formation_000 rml:logicalSource :source_016.
:source_016 a rml:LogicalSource;
    rml:source :database_015;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.1.12')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_015 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_016 rml:referenceFormulation ql:CSV.
:map_vehicles-composing-fixed-formation_000 a rr:TriplesMap;
    rdfs:label "vehicles-composing-fixed-formation".
:s_016 a rr:SubjectMap.
:map_vehicles-composing-fixed-formation_000 rr:subjectMap :s_016.
:s_016 rr:template "http://era.europa.eu/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_015.
:gm_015 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_132 a rr:PredicateObjectMap.
:map_vehicles-composing-fixed-formation_000 rr:predicateObjectMap :pom_132.
:pm_132 a rr:PredicateMap.
:pom_132 rr:predicateMap :pm_132.
:pm_132 rr:constant era:vehiclesComposingFixedFormation.
:pom_132 rr:objectMap :om_130.
:om_130 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal;
    rr:datatype xsd:integer.
:rules_000 void:exampleResource :map_vehicle-gauge_000.
:map_vehicle-gauge_000 rml:logicalSource :source_017.
:source_017 a rml:LogicalSource;
    rml:source :database_016;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, (SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId) AS ParameterValue, RegistrationParameters.OtherValue, REPLACE((SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId), ' ', '_') AS ParameterURI, REPLACE(RegistrationParameters.OtherValue, ' ', '_') AS OtherURI FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.2.1')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_016 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_017 rml:referenceFormulation ql:CSV.
:map_vehicle-gauge_000 a rr:TriplesMap;
    rdfs:label "vehicle-gauge".
:s_017 a rr:SubjectMap.
:map_vehicle-gauge_000 rr:subjectMap :s_017.
:s_017 rr:template "http://data.europa.eu/949/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_016.
:gm_016 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_133 a rr:PredicateObjectMap.
:map_vehicle-gauge_000 rr:predicateObjectMap :pom_133.
:pm_133 a rr:PredicateMap.
:pom_133 rr:predicateMap :pm_133.
:pm_133 rr:constant era:gaugingProfile.
:pom_133 rr:objectMap :om_131.
:om_131 a fnml:FunctionTermMap;
    rr:termType rr:IRI;
    fnml:functionValue :fn_046.
:fn_046 rml:logicalSource :source_017;
    rr:predicateObjectMap :pomexec_046.
:pomexec_046 rr:predicateMap :pmexec_046.
:pmexec_046 rr:constant fno:executes.
:pomexec_046 rr:objectMap :omexec_046.
:omexec_046 rr:constant "https://w3id.org/imec/idlab/function#trueCondition";
    rr:termType rr:IRI.
:fn_046 rr:predicateObjectMap :pom_134.
:pom_134 a rr:PredicateObjectMap;
    rr:predicateMap :pm_134.
:pm_134 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#strBoolean>.
:pom_134 rr:objectMap :om_132.
:om_132 a rr:ObjectMap, fnml:FunctionTermMap;
    fnml:functionValue :fn_047.
:fn_047 rml:logicalSource :source_017;
    rr:predicateObjectMap :pomexec_047.
:pomexec_047 rr:predicateMap :pmexec_047.
:pmexec_047 rr:constant fno:executes.
:pomexec_047 rr:objectMap :omexec_047.
:omexec_047 rr:constant "http://example.com/idlab/function/equal";
    rr:termType rr:IRI.
:fn_047 rr:predicateObjectMap :pom_135.
:pom_135 a rr:PredicateObjectMap;
    rr:predicateMap :pm_135.
:pm_135 a rr:PredicateMap;
    rr:constant grel:valueParameter.
:pom_135 rr:objectMap :om_133.
:om_133 a rr:ObjectMap;
    rml:reference "OtherURI";
    rr:termType rr:Literal.
:fn_047 rr:predicateObjectMap :pom_136.
:pom_136 a rr:PredicateObjectMap;
    rr:predicateMap :pm_136.
:pm_136 a rr:PredicateMap;
    rr:constant grel:valueParameter2.
:pom_136 rr:objectMap :om_134.
:om_134 a rr:ObjectMap;
    rr:constant "";
    rr:termType rr:Literal.
:fn_046 rr:predicateObjectMap :pom_137.
:pom_137 a rr:PredicateObjectMap;
    rr:predicateMap :pm_137.
:pm_137 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#str>.
:pom_137 rr:objectMap :om_135.
:om_135 a rr:ObjectMap;
    rr:template "http://data.europa.eu/949/concepts/gaugings/{ParameterURI}";
    rr:termType rr:IRI.
:pom_138 a rr:PredicateObjectMap.
:map_vehicle-gauge_000 rr:predicateObjectMap :pom_138.
:pm_138 a rr:PredicateMap.
:pom_138 rr:predicateMap :pm_138.
:pm_138 rr:constant era:gaugingProfile.
:pom_138 rr:objectMap :om_136.
:om_136 a fnml:FunctionTermMap;
    rr:termType rr:IRI;
    fnml:functionValue :fn_048.
:fn_048 rml:logicalSource :source_017;
    rr:predicateObjectMap :pomexec_048.
:pomexec_048 rr:predicateMap :pmexec_048.
:pmexec_048 rr:constant fno:executes.
:pomexec_048 rr:objectMap :omexec_048.
:omexec_048 rr:constant "https://w3id.org/imec/idlab/function#trueCondition";
    rr:termType rr:IRI.
:fn_048 rr:predicateObjectMap :pom_139.
:pom_139 a rr:PredicateObjectMap;
    rr:predicateMap :pm_139.
:pm_139 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#strBoolean>.
:pom_139 rr:objectMap :om_137.
:om_137 a rr:ObjectMap, fnml:FunctionTermMap;
    fnml:functionValue :fn_049.
:fn_049 rml:logicalSource :source_017;
    rr:predicateObjectMap :pomexec_049.
:pomexec_049 rr:predicateMap :pmexec_049.
:pmexec_049 rr:constant fno:executes.
:pomexec_049 rr:objectMap :omexec_049.
:omexec_049 rr:constant "http://example.com/idlab/function/notEqual";
    rr:termType rr:IRI.
:fn_049 rr:predicateObjectMap :pom_140.
:pom_140 a rr:PredicateObjectMap;
    rr:predicateMap :pm_140.
:pm_140 a rr:PredicateMap;
    rr:constant grel:valueParameter.
:pom_140 rr:objectMap :om_138.
:om_138 a rr:ObjectMap;
    rml:reference "OtherURI";
    rr:termType rr:Literal.
:fn_049 rr:predicateObjectMap :pom_141.
:pom_141 a rr:PredicateObjectMap;
    rr:predicateMap :pm_141.
:pm_141 a rr:PredicateMap;
    rr:constant grel:valueParameter2.
:pom_141 rr:objectMap :om_139.
:om_139 a rr:ObjectMap;
    rr:constant "";
    rr:termType rr:Literal.
:fn_048 rr:predicateObjectMap :pom_142.
:pom_142 a rr:PredicateObjectMap;
    rr:predicateMap :pm_142.
:pm_142 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#str>.
:pom_142 rr:objectMap :om_140.
:om_140 a rr:ObjectMap;
    rr:template "http://data.europa.eu/949/concepts/gaugings/{OtherURI}";
    rr:termType rr:IRI.
:rules_000 void:exampleResource :map_other-vehicle-gauge_000.
:map_other-vehicle-gauge_000 rml:logicalSource :source_018.
:source_018 a rml:LogicalSource;
    rml:source :database_017;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, REPLACE((SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId), ' ', '_') AS ParameterURI FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.2.2')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_017 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_018 rml:referenceFormulation ql:CSV.
:map_other-vehicle-gauge_000 a rr:TriplesMap;
    rdfs:label "other-vehicle-gauge".
:s_018 a rr:SubjectMap.
:map_other-vehicle-gauge_000 rr:subjectMap :s_018.
:s_018 rr:template "http://data.europa.eu/949/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_017.
:gm_017 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_143 a rr:PredicateObjectMap.
:map_other-vehicle-gauge_000 rr:predicateObjectMap :pom_143.
:pm_143 a rr:PredicateMap.
:pom_143 rr:predicateMap :pm_143.
:pm_143 rr:constant era:gaugingProfile.
:pom_143 rr:objectMap :om_141.
:om_141 a rr:ObjectMap;
    rr:template "http://data.europa.eu/949/concepts/gaugings/{ParameterURI}";
    rr:termType rr:IRI.
:rules_000 void:exampleResource :map_temperature-range_000.
:map_temperature-range_000 rml:logicalSource :source_019.
:source_019 a rml:LogicalSource;
    rml:source :database_018;
    rml:query "SELECT * FROM (SELECT VehicleTypes.TypeVersionNumber, SUBSTRING(REPLACE(CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)), ' ', ''), PATINDEX('%-[0-9][0-9]%', REPLACE(CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)), ' ', '')), 3) AS MinimumTemperature, SUBSTRING(REPLACE(CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)), ' ', ''), PATINDEX('%+[0-9][0-9]%', REPLACE(CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)), ' ', '')) + 1, 2) AS MaximumTemperature FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '' AND (Parameters.Code IN ('4.3.1'))) VirtualTable WHERE PATINDEX('%[0-9]%', MinimumTemperature) > 0;";
    rr:sqlVersion rr:SQL2008.
:database_018 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_019 rml:referenceFormulation ql:CSV.
:map_temperature-range_000 a rr:TriplesMap;
    rdfs:label "temperature-range".
:s_019 a rr:SubjectMap.
:map_temperature-range_000 rr:subjectMap :s_019.
:s_019 rr:template "http://data.europa.eu/949/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_018.
:gm_018 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_144 a rr:PredicateObjectMap.
:map_temperature-range_000 rr:predicateObjectMap :pom_144.
:pm_144 a rr:PredicateMap.
:pom_144 rr:predicateMap :pm_144.
:pm_144 rr:constant era:minimumTemperature.
:pom_144 rr:objectMap :om_142.
:om_142 a rr:ObjectMap;
    rml:reference "MinimumTemperature";
    rr:termType rr:Literal;
    rr:datatype xsd:integer.
:pom_145 a rr:PredicateObjectMap.
:map_temperature-range_000 rr:predicateObjectMap :pom_145.
:pm_145 a rr:PredicateMap.
:pom_145 rr:predicateMap :pm_145.
:pm_145 rr:constant era:maximumTemperature.
:pom_145 rr:objectMap :om_143.
:om_143 a rr:ObjectMap;
    rml:reference "MaximumTemperature";
    rr:termType rr:Literal;
    rr:datatype xsd:integer.
:rules_000 void:exampleResource :map_altitude-range_000.
:map_altitude-range_000 rml:logicalSource :source_020.
:source_020 a rml:LogicalSource;
    rml:source :database_019;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.3.2')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_019 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_020 rml:referenceFormulation ql:CSV.
:map_altitude-range_000 a rr:TriplesMap;
    rdfs:label "altitude-range".
:s_020 a rr:SubjectMap.
:map_altitude-range_000 rr:subjectMap :s_020.
:s_020 rr:template "http://era.europa.eu/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_019.
:gm_019 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_146 a rr:PredicateObjectMap.
:map_altitude-range_000 rr:predicateObjectMap :pom_146.
:pm_146 a rr:PredicateMap.
:pom_146 rr:predicateMap :pm_146.
:pm_146 rr:constant era:altitudeRange.
:pom_146 rr:objectMap :om_144.
:om_144 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal.
:rules_000 void:exampleResource :map_altitude-range-detail_000.
:map_altitude-range-detail_000 rml:logicalSource :source_021.
:source_021 a rml:LogicalSource;
    rml:source :database_020;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.3.2.1')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_020 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_021 rml:referenceFormulation ql:CSV.
:map_altitude-range-detail_000 a rr:TriplesMap;
    rdfs:label "altitude-range-detail".
:s_021 a rr:SubjectMap.
:map_altitude-range-detail_000 rr:subjectMap :s_021.
:s_021 rr:template "http://era.europa.eu/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_020.
:gm_020 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_147 a rr:PredicateObjectMap.
:map_altitude-range-detail_000 rr:predicateObjectMap :pom_147.
:pm_147 a rr:PredicateMap.
:pom_147 rr:predicateMap :pm_147.
:pm_147 rr:constant era:altitudeRangeDetail.
:pom_147 rr:objectMap :om_145.
:om_145 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal;
    rr:datatype xsd:integer.
:rules_000 void:exampleResource :map_snow-ice-hail-conditions_000.
:map_snow-ice-hail-conditions_000 rml:logicalSource :source_022.
:source_022 a rml:LogicalSource;
    rml:source :database_021;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, REPLACE((SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId), ' ', '_') AS ParameterURI, REPLACE(RegistrationParameters.OtherValue, ' ', '_') AS OtherURI FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.3.3')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_021 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_022 rml:referenceFormulation ql:CSV.
:map_snow-ice-hail-conditions_000 a rr:TriplesMap;
    rdfs:label "snow-ice-hail-conditions".
:s_022 a rr:SubjectMap.
:map_snow-ice-hail-conditions_000 rr:subjectMap :s_022.
:s_022 rr:template "http://data.europa.eu/949/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_021.
:gm_021 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_148 a rr:PredicateObjectMap.
:map_snow-ice-hail-conditions_000 rr:predicateObjectMap :pom_148.
:pm_148 a rr:PredicateMap.
:pom_148 rr:predicateMap :pm_148.
:pm_148 rr:constant era:snowIceHailConditions.
:pom_148 rr:objectMap :om_146.
:om_146 a fnml:FunctionTermMap;
    rr:termType rr:IRI;
    fnml:functionValue :fn_050.
:fn_050 rml:logicalSource :source_022;
    rr:predicateObjectMap :pomexec_050.
:pomexec_050 rr:predicateMap :pmexec_050.
:pmexec_050 rr:constant fno:executes.
:pomexec_050 rr:objectMap :omexec_050.
:omexec_050 rr:constant "https://w3id.org/imec/idlab/function#trueCondition";
    rr:termType rr:IRI.
:fn_050 rr:predicateObjectMap :pom_149.
:pom_149 a rr:PredicateObjectMap;
    rr:predicateMap :pm_149.
:pm_149 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#strBoolean>.
:pom_149 rr:objectMap :om_147.
:om_147 a rr:ObjectMap, fnml:FunctionTermMap;
    fnml:functionValue :fn_051.
:fn_051 rml:logicalSource :source_022;
    rr:predicateObjectMap :pomexec_051.
:pomexec_051 rr:predicateMap :pmexec_051.
:pmexec_051 rr:constant fno:executes.
:pomexec_051 rr:objectMap :omexec_051.
:omexec_051 rr:constant "http://example.com/idlab/function/equal";
    rr:termType rr:IRI.
:fn_051 rr:predicateObjectMap :pom_150.
:pom_150 a rr:PredicateObjectMap;
    rr:predicateMap :pm_150.
:pm_150 a rr:PredicateMap;
    rr:constant grel:valueParameter.
:pom_150 rr:objectMap :om_148.
:om_148 a rr:ObjectMap;
    rml:reference "OtherURI";
    rr:termType rr:Literal.
:fn_051 rr:predicateObjectMap :pom_151.
:pom_151 a rr:PredicateObjectMap;
    rr:predicateMap :pm_151.
:pm_151 a rr:PredicateMap;
    rr:constant grel:valueParameter2.
:pom_151 rr:objectMap :om_149.
:om_149 a rr:ObjectMap;
    rr:constant "";
    rr:termType rr:Literal.
:fn_050 rr:predicateObjectMap :pom_152.
:pom_152 a rr:PredicateObjectMap;
    rr:predicateMap :pm_152.
:pm_152 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#str>.
:pom_152 rr:objectMap :om_150.
:om_150 a rr:ObjectMap;
    rr:template "http://data.europa.eu/949/concepts/ice-conditions/{ParameterURI}";
    rr:termType rr:IRI.
:pom_153 a rr:PredicateObjectMap.
:map_snow-ice-hail-conditions_000 rr:predicateObjectMap :pom_153.
:pm_153 a rr:PredicateMap.
:pom_153 rr:predicateMap :pm_153.
:pm_153 rr:constant era:snowIceHailConditions.
:pom_153 rr:objectMap :om_151.
:om_151 a fnml:FunctionTermMap;
    rr:termType rr:IRI;
    fnml:functionValue :fn_052.
:fn_052 rml:logicalSource :source_022;
    rr:predicateObjectMap :pomexec_052.
:pomexec_052 rr:predicateMap :pmexec_052.
:pmexec_052 rr:constant fno:executes.
:pomexec_052 rr:objectMap :omexec_052.
:omexec_052 rr:constant "https://w3id.org/imec/idlab/function#trueCondition";
    rr:termType rr:IRI.
:fn_052 rr:predicateObjectMap :pom_154.
:pom_154 a rr:PredicateObjectMap;
    rr:predicateMap :pm_154.
:pm_154 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#strBoolean>.
:pom_154 rr:objectMap :om_152.
:om_152 a rr:ObjectMap, fnml:FunctionTermMap;
    fnml:functionValue :fn_053.
:fn_053 rml:logicalSource :source_022;
    rr:predicateObjectMap :pomexec_053.
:pomexec_053 rr:predicateMap :pmexec_053.
:pmexec_053 rr:constant fno:executes.
:pomexec_053 rr:objectMap :omexec_053.
:omexec_053 rr:constant "http://example.com/idlab/function/notEqual";
    rr:termType rr:IRI.
:fn_053 rr:predicateObjectMap :pom_155.
:pom_155 a rr:PredicateObjectMap;
    rr:predicateMap :pm_155.
:pm_155 a rr:PredicateMap;
    rr:constant grel:valueParameter.
:pom_155 rr:objectMap :om_153.
:om_153 a rr:ObjectMap;
    rml:reference "OtherURI";
    rr:termType rr:Literal.
:fn_053 rr:predicateObjectMap :pom_156.
:pom_156 a rr:PredicateObjectMap;
    rr:predicateMap :pm_156.
:pm_156 a rr:PredicateMap;
    rr:constant grel:valueParameter2.
:pom_156 rr:objectMap :om_154.
:om_154 a rr:ObjectMap;
    rr:constant "";
    rr:termType rr:Literal.
:fn_052 rr:predicateObjectMap :pom_157.
:pom_157 a rr:PredicateObjectMap;
    rr:predicateMap :pm_157.
:pm_157 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#str>.
:pom_157 rr:objectMap :om_155.
:om_155 a rr:ObjectMap;
    rr:template "http://data.europa.eu/949/concepts/ice-conditions/{OtherURI}";
    rr:termType rr:IRI.
:rules_000 void:exampleResource :map_fire-safety-category_000.
:map_fire-safety-category_000 rml:logicalSource :source_023.
:source_023 a rml:LogicalSource;
    rml:source :database_022;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, (SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.4.1')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_022 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_023 rml:referenceFormulation ql:CSV.
:map_fire-safety-category_000 a rr:TriplesMap;
    rdfs:label "fire-safety-category".
:s_023 a rr:SubjectMap.
:map_fire-safety-category_000 rr:subjectMap :s_023.
:s_023 rr:template "http://data.europa.eu/949/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_022.
:gm_022 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_158 a rr:PredicateObjectMap.
:map_fire-safety-category_000 rr:predicateObjectMap :pom_158.
:pm_158 a rr:PredicateMap.
:pom_158 rr:predicateMap :pm_158.
:pm_158 rr:constant era:fireSafetyCategory.
:pom_158 rr:objectMap :om_156.
:om_156 a fnml:FunctionTermMap;
    rr:termType rr:IRI;
    fnml:functionValue :fn_054.
:fn_054 rml:logicalSource :source_023;
    rr:predicateObjectMap :pomexec_054.
:pomexec_054 rr:predicateMap :pmexec_054.
:pmexec_054 rr:constant fno:executes.
:pomexec_054 rr:objectMap :omexec_054.
:omexec_054 rr:constant "https://w3id.org/imec/idlab/function#trueCondition";
    rr:termType rr:IRI.
:fn_054 rr:predicateObjectMap :pom_159.
:pom_159 a rr:PredicateObjectMap;
    rr:predicateMap :pm_159.
:pm_159 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#strBoolean>.
:pom_159 rr:objectMap :om_157.
:om_157 a rr:ObjectMap, fnml:FunctionTermMap;
    fnml:functionValue :fn_055.
:fn_055 rml:logicalSource :source_023;
    rr:predicateObjectMap :pomexec_055.
:pomexec_055 rr:predicateMap :pmexec_055.
:pmexec_055 rr:constant fno:executes.
:pomexec_055 rr:objectMap :omexec_055.
:omexec_055 rr:constant "http://example.com/idlab/function/equal";
    rr:termType rr:IRI.
:fn_055 rr:predicateObjectMap :pom_160.
:pom_160 a rr:PredicateObjectMap;
    rr:predicateMap :pm_160.
:pm_160 a rr:PredicateMap;
    rr:constant grel:valueParameter.
:pom_160 rr:objectMap :om_158.
:om_158 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal.
:fn_055 rr:predicateObjectMap :pom_161.
:pom_161 a rr:PredicateObjectMap;
    rr:predicateMap :pm_161.
:pm_161 a rr:PredicateMap;
    rr:constant grel:valueParameter2.
:pom_161 rr:objectMap :om_159.
:om_159 a rr:ObjectMap;
    rr:constant "A";
    rr:termType rr:Literal.
:fn_054 rr:predicateObjectMap :pom_162.
:pom_162 a rr:PredicateObjectMap;
    rr:predicateMap :pm_162.
:pm_162 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#str>.
:pom_162 rr:objectMap :om_160.
:om_160 a rr:ObjectMap;
    rr:constant "http://data.europa.eu/949/concepts/rolling-stock-fire/a";
    rr:termType rr:IRI.
:pom_163 a rr:PredicateObjectMap.
:map_fire-safety-category_000 rr:predicateObjectMap :pom_163.
:pm_163 a rr:PredicateMap.
:pom_163 rr:predicateMap :pm_163.
:pm_163 rr:constant era:fireSafetyCategory.
:pom_163 rr:objectMap :om_161.
:om_161 a fnml:FunctionTermMap;
    rr:termType rr:IRI;
    fnml:functionValue :fn_056.
:fn_056 rml:logicalSource :source_023;
    rr:predicateObjectMap :pomexec_056.
:pomexec_056 rr:predicateMap :pmexec_056.
:pmexec_056 rr:constant fno:executes.
:pomexec_056 rr:objectMap :omexec_056.
:omexec_056 rr:constant "https://w3id.org/imec/idlab/function#trueCondition";
    rr:termType rr:IRI.
:fn_056 rr:predicateObjectMap :pom_164.
:pom_164 a rr:PredicateObjectMap;
    rr:predicateMap :pm_164.
:pm_164 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#strBoolean>.
:pom_164 rr:objectMap :om_162.
:om_162 a rr:ObjectMap, fnml:FunctionTermMap;
    fnml:functionValue :fn_057.
:fn_057 rml:logicalSource :source_023;
    rr:predicateObjectMap :pomexec_057.
:pomexec_057 rr:predicateMap :pmexec_057.
:pmexec_057 rr:constant fno:executes.
:pomexec_057 rr:objectMap :omexec_057.
:omexec_057 rr:constant "http://example.com/idlab/function/equal";
    rr:termType rr:IRI.
:fn_057 rr:predicateObjectMap :pom_165.
:pom_165 a rr:PredicateObjectMap;
    rr:predicateMap :pm_165.
:pm_165 a rr:PredicateMap;
    rr:constant grel:valueParameter.
:pom_165 rr:objectMap :om_163.
:om_163 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal.
:fn_057 rr:predicateObjectMap :pom_166.
:pom_166 a rr:PredicateObjectMap;
    rr:predicateMap :pm_166.
:pm_166 a rr:PredicateMap;
    rr:constant grel:valueParameter2.
:pom_166 rr:objectMap :om_164.
:om_164 a rr:ObjectMap;
    rr:constant "B";
    rr:termType rr:Literal.
:fn_056 rr:predicateObjectMap :pom_167.
:pom_167 a rr:PredicateObjectMap;
    rr:predicateMap :pm_167.
:pm_167 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#str>.
:pom_167 rr:objectMap :om_165.
:om_165 a rr:ObjectMap;
    rr:constant "http://data.europa.eu/949/concepts/rolling-stock-fire/b";
    rr:termType rr:IRI.
:pom_168 a rr:PredicateObjectMap.
:map_fire-safety-category_000 rr:predicateObjectMap :pom_168.
:pm_168 a rr:PredicateMap.
:pom_168 rr:predicateMap :pm_168.
:pm_168 rr:constant era:fireSafetyCategory.
:pom_168 rr:objectMap :om_166.
:om_166 a fnml:FunctionTermMap;
    rr:termType rr:IRI;
    fnml:functionValue :fn_058.
:fn_058 rml:logicalSource :source_023;
    rr:predicateObjectMap :pomexec_058.
:pomexec_058 rr:predicateMap :pmexec_058.
:pmexec_058 rr:constant fno:executes.
:pomexec_058 rr:objectMap :omexec_058.
:omexec_058 rr:constant "https://w3id.org/imec/idlab/function#trueCondition";
    rr:termType rr:IRI.
:fn_058 rr:predicateObjectMap :pom_169.
:pom_169 a rr:PredicateObjectMap;
    rr:predicateMap :pm_169.
:pm_169 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#strBoolean>.
:pom_169 rr:objectMap :om_167.
:om_167 a rr:ObjectMap, fnml:FunctionTermMap;
    fnml:functionValue :fn_059.
:fn_059 rml:logicalSource :source_023;
    rr:predicateObjectMap :pomexec_059.
:pomexec_059 rr:predicateMap :pmexec_059.
:pmexec_059 rr:constant fno:executes.
:pomexec_059 rr:objectMap :omexec_059.
:omexec_059 rr:constant "http://example.com/idlab/function/equal";
    rr:termType rr:IRI.
:fn_059 rr:predicateObjectMap :pom_170.
:pom_170 a rr:PredicateObjectMap;
    rr:predicateMap :pm_170.
:pm_170 a rr:PredicateMap;
    rr:constant grel:valueParameter.
:pom_170 rr:objectMap :om_168.
:om_168 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal.
:fn_059 rr:predicateObjectMap :pom_171.
:pom_171 a rr:PredicateObjectMap;
    rr:predicateMap :pm_171.
:pm_171 a rr:PredicateMap;
    rr:constant grel:valueParameter2.
:pom_171 rr:objectMap :om_169.
:om_169 a rr:ObjectMap;
    rr:constant "no category, acceptable in tunnels shorter then 1km";
    rr:termType rr:Literal.
:fn_058 rr:predicateObjectMap :pom_172.
:pom_172 a rr:PredicateObjectMap;
    rr:predicateMap :pm_172.
:pm_172 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#str>.
:pom_172 rr:objectMap :om_170.
:om_170 a rr:ObjectMap;
    rr:constant "http://data.europa.eu/949/concepts/rolling-stock-fire/none";
    rr:termType rr:IRI.
:pom_173 a rr:PredicateObjectMap.
:map_fire-safety-category_000 rr:predicateObjectMap :pom_173.
:pm_173 a rr:PredicateMap.
:pom_173 rr:predicateMap :pm_173.
:pm_173 rr:constant era:fireSafetyCategory.
:pom_173 rr:objectMap :om_171.
:om_171 a fnml:FunctionTermMap;
    rr:termType rr:IRI;
    fnml:functionValue :fn_060.
:fn_060 rml:logicalSource :source_023;
    rr:predicateObjectMap :pomexec_060.
:pomexec_060 rr:predicateMap :pmexec_060.
:pmexec_060 rr:constant fno:executes.
:pomexec_060 rr:objectMap :omexec_060.
:omexec_060 rr:constant "https://w3id.org/imec/idlab/function#trueCondition";
    rr:termType rr:IRI.
:fn_060 rr:predicateObjectMap :pom_174.
:pom_174 a rr:PredicateObjectMap;
    rr:predicateMap :pm_174.
:pm_174 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#strBoolean>.
:pom_174 rr:objectMap :om_172.
:om_172 a rr:ObjectMap, fnml:FunctionTermMap;
    fnml:functionValue :fn_061.
:fn_061 rml:logicalSource :source_023;
    rr:predicateObjectMap :pomexec_061.
:pomexec_061 rr:predicateMap :pmexec_061.
:pmexec_061 rr:constant fno:executes.
:pomexec_061 rr:objectMap :omexec_061.
:omexec_061 rr:constant "http://example.com/idlab/function/equal";
    rr:termType rr:IRI.
:fn_061 rr:predicateObjectMap :pom_175.
:pom_175 a rr:PredicateObjectMap;
    rr:predicateMap :pm_175.
:pm_175 a rr:PredicateMap;
    rr:constant grel:valueParameter.
:pom_175 rr:objectMap :om_173.
:om_173 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal.
:fn_061 rr:predicateObjectMap :pom_176.
:pom_176 a rr:PredicateObjectMap;
    rr:predicateMap :pm_176.
:pm_176 a rr:PredicateMap;
    rr:constant grel:valueParameter2.
:pom_176 rr:objectMap :om_174.
:om_174 a rr:ObjectMap;
    rr:constant "OTM as defined in 4.2.10.1.2";
    rr:termType rr:Literal.
:fn_060 rr:predicateObjectMap :pom_177.
:pom_177 a rr:PredicateObjectMap;
    rr:predicateMap :pm_177.
:pm_177 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#str>.
:pom_177 rr:objectMap :om_175.
:om_175 a rr:ObjectMap;
    rr:constant "http://data.europa.eu/949/concepts/rolling-stock-fire/otm";
    rr:termType rr:IRI.
:pom_178 a rr:PredicateObjectMap.
:map_fire-safety-category_000 rr:predicateObjectMap :pom_178.
:pm_178 a rr:PredicateMap.
:pom_178 rr:predicateMap :pm_178.
:pm_178 rr:constant era:fireSafetyCategory.
:pom_178 rr:objectMap :om_176.
:om_176 a fnml:FunctionTermMap;
    rr:termType rr:IRI;
    fnml:functionValue :fn_062.
:fn_062 rml:logicalSource :source_023;
    rr:predicateObjectMap :pomexec_062.
:pomexec_062 rr:predicateMap :pmexec_062.
:pmexec_062 rr:constant fno:executes.
:pomexec_062 rr:objectMap :omexec_062.
:omexec_062 rr:constant "https://w3id.org/imec/idlab/function#trueCondition";
    rr:termType rr:IRI.
:fn_062 rr:predicateObjectMap :pom_179.
:pom_179 a rr:PredicateObjectMap;
    rr:predicateMap :pm_179.
:pm_179 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#strBoolean>.
:pom_179 rr:objectMap :om_177.
:om_177 a rr:ObjectMap, fnml:FunctionTermMap;
    fnml:functionValue :fn_063.
:fn_063 rml:logicalSource :source_023;
    rr:predicateObjectMap :pomexec_063.
:pomexec_063 rr:predicateMap :pmexec_063.
:pmexec_063 rr:constant fno:executes.
:pomexec_063 rr:objectMap :omexec_063.
:omexec_063 rr:constant "http://example.com/idlab/function/equal";
    rr:termType rr:IRI.
:fn_063 rr:predicateObjectMap :pom_180.
:pom_180 a rr:PredicateObjectMap;
    rr:predicateMap :pm_180.
:pm_180 a rr:PredicateMap;
    rr:constant grel:valueParameter.
:pom_180 rr:objectMap :om_178.
:om_178 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal.
:fn_063 rr:predicateObjectMap :pom_181.
:pom_181 a rr:PredicateObjectMap;
    rr:predicateMap :pm_181.
:pm_181 a rr:PredicateMap;
    rr:constant grel:valueParameter2.
:pom_181 rr:objectMap :om_179.
:om_179 a rr:ObjectMap;
    rr:constant "SRT TSI Freight Locomotive as defined in 4.2.10.1.2";
    rr:termType rr:Literal.
:fn_062 rr:predicateObjectMap :pom_182.
:pom_182 a rr:PredicateObjectMap;
    rr:predicateMap :pm_182.
:pm_182 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#str>.
:pom_182 rr:objectMap :om_180.
:om_180 a rr:ObjectMap;
    rr:constant "http://data.europa.eu/949/concepts/rolling-stock-fire/srt-tsi";
    rr:termType rr:IRI.
:rules_000 void:exampleResource :map_permissible-payload_000.
:map_permissible-payload_000 rml:logicalSource :source_024.
:source_024 a rml:LogicalSource;
    rml:source :database_023;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND RegistrationParameters.Value != '' AND (Parameters.Code IN ('4.5.1')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_023 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_024 rml:referenceFormulation ql:CSV.
:map_permissible-payload_000 a rr:TriplesMap;
    rdfs:label "permissible-payload".
:s_024 a rr:SubjectMap.
:map_permissible-payload_000 rr:subjectMap :s_024.
:s_024 rr:template "http://data.europa.eu/949/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_023.
:gm_023 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_183 a rr:PredicateObjectMap.
:map_permissible-payload_000 rr:predicateObjectMap :pom_183.
:pm_183 a rr:PredicateMap.
:pom_183 rr:predicateMap :pm_183.
:pm_183 rr:constant era:permissiblePayload.
:pom_183 rr:objectMap :om_181.
:om_181 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal.
:rules_000 void:exampleResource :map_design-mass-in-working-order_000.
:map_design-mass-in-working-order_000 rml:logicalSource :source_025.
:source_025 a rml:LogicalSource;
    rml:source :database_024;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.5.2.1')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_024 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_025 rml:referenceFormulation ql:CSV.
:map_design-mass-in-working-order_000 a rr:TriplesMap;
    rdfs:label "design-mass-in-working-order".
:s_025 a rr:SubjectMap.
:map_design-mass-in-working-order_000 rr:subjectMap :s_025.
:s_025 rr:template "http://data.europa.eu/949/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_024.
:gm_024 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_184 a rr:PredicateObjectMap.
:map_design-mass-in-working-order_000 rr:predicateObjectMap :pom_184.
:pm_184 a rr:PredicateMap.
:pom_184 rr:predicateMap :pm_184.
:pm_184 rr:constant era:designMassWorkingOrder.
:pom_184 rr:objectMap :om_182.
:om_182 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal;
    rr:datatype xsd:integer.
:rules_000 void:exampleResource :map_design-mass-under-normal-payload_000.
:map_design-mass-under-normal-payload_000 rml:logicalSource :source_026.
:source_026 a rml:LogicalSource;
    rml:source :database_025;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.5.2.2')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_025 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_026 rml:referenceFormulation ql:CSV.
:map_design-mass-under-normal-payload_000 a rr:TriplesMap;
    rdfs:label "design-mass-under-normal-payload".
:s_026 a rr:SubjectMap.
:map_design-mass-under-normal-payload_000 rr:subjectMap :s_026.
:s_026 rr:template "http://data.europa.eu/949/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_025.
:gm_025 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_185 a rr:PredicateObjectMap.
:map_design-mass-under-normal-payload_000 rr:predicateObjectMap :pom_185.
:pm_185 a rr:PredicateMap.
:pom_185 rr:predicateMap :pm_185.
:pm_185 rr:constant era:designMassNormalPayload.
:pom_185 rr:objectMap :om_183.
:om_183 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal;
    rr:datatype xsd:integer.
:rules_000 void:exampleResource :map_design-mass-under-exceptional-payload_000.
:map_design-mass-under-exceptional-payload_000 rml:logicalSource :source_027.
:source_027 a rml:LogicalSource;
    rml:source :database_026;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.5.2.3')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_026 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_027 rml:referenceFormulation ql:CSV.
:map_design-mass-under-exceptional-payload_000 a rr:TriplesMap;
    rdfs:label "design-mass-under-exceptional-payload".
:s_027 a rr:SubjectMap.
:map_design-mass-under-exceptional-payload_000 rr:subjectMap :s_027.
:s_027 rr:template "http://data.europa.eu/949/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_026.
:gm_026 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_186 a rr:PredicateObjectMap.
:map_design-mass-under-exceptional-payload_000 rr:predicateObjectMap :pom_186.
:pm_186 a rr:PredicateMap.
:pom_186 rr:predicateMap :pm_186.
:pm_186 rr:constant era:designMassExceptionalPayload.
:pom_186 rr:objectMap :om_184.
:om_184 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal;
    rr:datatype xsd:integer.
:rules_000 void:exampleResource :map_static-axle-load-in-working-order_000.
:map_static-axle-load-in-working-order_000 rml:logicalSource :source_028.
:source_028 a rml:LogicalSource;
    rml:source :database_027;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.5.3.1')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_027 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_028 rml:referenceFormulation ql:CSV.
:map_static-axle-load-in-working-order_000 a rr:TriplesMap;
    rdfs:label "static-axle-load-in-working-order".
:s_028 a rr:SubjectMap.
:map_static-axle-load-in-working-order_000 rr:subjectMap :s_028.
:s_028 rr:template "http://data.europa.eu/949/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_027.
:gm_027 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_187 a rr:PredicateObjectMap.
:map_static-axle-load-in-working-order_000 rr:predicateObjectMap :pom_187.
:pm_187 a rr:PredicateMap.
:pom_187 rr:predicateMap :pm_187.
:pm_187 rr:constant era:staticAxleLoadWorkingOrder.
:pom_187 rr:objectMap :om_185.
:om_185 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal;
    rr:datatype xsd:double.
:rules_000 void:exampleResource :map_static-axle-load-under-normal-payload_000.
:map_static-axle-load-under-normal-payload_000 rml:logicalSource :source_029.
:source_029 a rml:LogicalSource;
    rml:source :database_028;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.5.3.2')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_028 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_029 rml:referenceFormulation ql:CSV.
:map_static-axle-load-under-normal-payload_000 a rr:TriplesMap;
    rdfs:label "static-axle-load-under-normal-payload".
:s_029 a rr:SubjectMap.
:map_static-axle-load-under-normal-payload_000 rr:subjectMap :s_029.
:s_029 rr:template "http://data.europa.eu/949/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_028.
:gm_028 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_188 a rr:PredicateObjectMap.
:map_static-axle-load-under-normal-payload_000 rr:predicateObjectMap :pom_188.
:pm_188 a rr:PredicateMap.
:pom_188 rr:predicateMap :pm_188.
:pm_188 rr:constant era:staticAxleLoadNormalPayload.
:pom_188 rr:objectMap :om_186.
:om_186 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal;
    rr:datatype xsd:double.
:rules_000 void:exampleResource :map_static-axle-load-under-exceptional-payload_000.
:map_static-axle-load-under-exceptional-payload_000 rml:logicalSource :source_030.
:source_030 a rml:LogicalSource;
    rml:source :database_029;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.5.3.3')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_029 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_030 rml:referenceFormulation ql:CSV.
:map_static-axle-load-under-exceptional-payload_000 a rr:TriplesMap;
    rdfs:label "static-axle-load-under-exceptional-payload".
:s_030 a rr:SubjectMap.
:map_static-axle-load-under-exceptional-payload_000 rr:subjectMap :s_030.
:s_030 rr:template "http://data.europa.eu/949/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_029.
:gm_029 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_189 a rr:PredicateObjectMap.
:map_static-axle-load-under-exceptional-payload_000 rr:predicateObjectMap :pom_189.
:pm_189 a rr:PredicateMap.
:pom_189 rr:predicateMap :pm_189.
:pm_189 rr:constant era:staticAxleLoadExceptionalPayload.
:pom_189 rr:objectMap :om_187.
:om_187 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal;
    rr:datatype xsd:double.
:rules_000 void:exampleResource :map_axle-spacing_000.
:map_axle-spacing_000 rml:logicalSource :source_031.
:source_031 a rml:LogicalSource;
    rml:source :database_030;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, RegistrationParameters.Value AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.5.3.4')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_030 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_031 rml:referenceFormulation ql:CSV.
:map_axle-spacing_000 a rr:TriplesMap;
    rdfs:label "axle-spacing".
:s_031 a rr:SubjectMap.
:map_axle-spacing_000 rr:subjectMap :s_031.
:s_031 rr:template "http://data.europa.eu/949/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_030.
:gm_030 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_190 a rr:PredicateObjectMap.
:map_axle-spacing_000 rr:predicateObjectMap :pom_190.
:pm_190 a rr:PredicateMap.
:pom_190 rr:predicateMap :pm_190.
:pm_190 rr:constant era:axleSpacing.
:pom_190 rr:objectMap :om_188.
:om_188 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal.
:rules_000 void:exampleResource :map_quasi-static-guiding-force_000.
:map_quasi-static-guiding-force_000 rml:logicalSource :source_032.
:source_032 a rml:LogicalSource;
    rml:source :database_031;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.5.4')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_031 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_032 rml:referenceFormulation ql:CSV.
:map_quasi-static-guiding-force_000 a rr:TriplesMap;
    rdfs:label "quasi-static-guiding-force".
:s_032 a rr:SubjectMap.
:map_quasi-static-guiding-force_000 rr:subjectMap :s_032.
:s_032 rr:template "http://era.europa.eu/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_031.
:gm_031 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_191 a rr:PredicateObjectMap.
:map_quasi-static-guiding-force_000 rr:predicateObjectMap :pom_191.
:pm_191 a rr:PredicateMap.
:pom_191 rr:predicateMap :pm_191.
:pm_191 rr:constant era:quasiStaticGuidingForce.
:pom_191 rr:objectMap :om_189.
:om_189 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal;
    rr:datatype xsd:double.
:rules_000 void:exampleResource :map_total-vehicle-mass_000.
:map_total-vehicle-mass_000 rml:logicalSource :source_033.
:source_033 a rml:LogicalSource;
    rml:source :database_032;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.5.5')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_032 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_033 rml:referenceFormulation ql:CSV.
:map_total-vehicle-mass_000 a rr:TriplesMap;
    rdfs:label "total-vehicle-mass".
:s_033 a rr:SubjectMap.
:map_total-vehicle-mass_000 rr:subjectMap :s_033.
:s_033 rr:template "http://era.europa.eu/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_032.
:gm_032 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_192 a rr:PredicateObjectMap.
:map_total-vehicle-mass_000 rr:predicateObjectMap :pom_192.
:pm_192 a rr:PredicateMap.
:pom_192 rr:predicateMap :pm_192.
:pm_192 rr:constant era:totalVehicleMass.
:pom_192 rr:objectMap :om_190.
:om_190 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal;
    rr:datatype xsd:integer.
:rules_000 void:exampleResource :map_mass-per-wheel_000.
:map_mass-per-wheel_000 rml:logicalSource :source_034.
:source_034 a rml:LogicalSource;
    rml:source :database_033;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.5.6')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_033 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_034 rml:referenceFormulation ql:CSV.
:map_mass-per-wheel_000 a rr:TriplesMap;
    rdfs:label "mass-per-wheel".
:s_034 a rr:SubjectMap.
:map_mass-per-wheel_000 rr:subjectMap :s_034.
:s_034 rr:template "http://era.europa.eu/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_033.
:gm_033 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_193 a rr:PredicateObjectMap.
:map_mass-per-wheel_000 rr:predicateObjectMap :pom_193.
:pm_193 a rr:PredicateMap.
:pom_193 rr:predicateMap :pm_193.
:pm_193 rr:constant era:massPerWheel.
:pom_193 rr:objectMap :om_191.
:om_191 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal;
    rr:datatype xsd:integer.
:rules_000 void:exampleResource :map_cant-defficiency_000.
:map_cant-defficiency_000 rml:logicalSource :source_035.
:source_035 a rml:LogicalSource;
    rml:source :database_034;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.6.1')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_034 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_035 rml:referenceFormulation ql:CSV.
:map_cant-defficiency_000 a rr:TriplesMap;
    rdfs:label "cant-defficiency".
:s_035 a rr:SubjectMap.
:map_cant-defficiency_000 rr:subjectMap :s_035.
:s_035 rr:template "http://era.europa.eu/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_034.
:gm_034 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_194 a rr:PredicateObjectMap.
:map_cant-defficiency_000 rr:predicateObjectMap :pom_194.
:pm_194 a rr:PredicateMap.
:pom_194 rr:predicateMap :pm_194.
:pm_194 rr:constant era:cantDefficiency.
:pom_194 rr:objectMap :om_192.
:om_192 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal;
    rr:datatype xsd:integer.
:rules_000 void:exampleResource :map_has-cant-defficiency-compensation_000.
:map_has-cant-defficiency-compensation_000 rml:logicalSource :source_036.
:source_036 a rml:LogicalSource;
    rml:source :database_035;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.6.2')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_035 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_036 rml:referenceFormulation ql:CSV.
:map_has-cant-defficiency-compensation_000 a rr:TriplesMap;
    rdfs:label "has-cant-defficiency-compensation".
:s_036 a rr:SubjectMap.
:map_has-cant-defficiency-compensation_000 rr:subjectMap :s_036.
:s_036 rr:template "http://era.europa.eu/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_035.
:gm_035 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_195 a rr:PredicateObjectMap.
:map_has-cant-defficiency-compensation_000 rr:predicateObjectMap :pom_195.
:pm_195 a rr:PredicateMap.
:pom_195 rr:predicateMap :pm_195.
:pm_195 rr:constant era:hasCantDefficiencyCompensation.
:pom_195 rr:objectMap :om_193.
:om_193 a fnml:FunctionTermMap;
    rr:termType rr:Literal;
    rr:datatype xsd:boolean;
    fnml:functionValue :fn_064.
:fn_064 rml:logicalSource :source_036;
    rr:predicateObjectMap :pomexec_064.
:pomexec_064 rr:predicateMap :pmexec_064.
:pmexec_064 rr:constant fno:executes.
:pomexec_064 rr:objectMap :omexec_064.
:omexec_064 rr:constant "https://w3id.org/imec/idlab/function#trueCondition";
    rr:termType rr:IRI.
:fn_064 rr:predicateObjectMap :pom_196.
:pom_196 a rr:PredicateObjectMap;
    rr:predicateMap :pm_196.
:pm_196 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#strBoolean>.
:pom_196 rr:objectMap :om_194.
:om_194 a rr:ObjectMap, fnml:FunctionTermMap;
    fnml:functionValue :fn_065.
:fn_065 rml:logicalSource :source_036;
    rr:predicateObjectMap :pomexec_065.
:pomexec_065 rr:predicateMap :pmexec_065.
:pmexec_065 rr:constant fno:executes.
:pomexec_065 rr:objectMap :omexec_065.
:omexec_065 rr:constant "http://example.com/idlab/function/equal";
    rr:termType rr:IRI.
:fn_065 rr:predicateObjectMap :pom_197.
:pom_197 a rr:PredicateObjectMap;
    rr:predicateMap :pm_197.
:pm_197 a rr:PredicateMap;
    rr:constant grel:valueParameter.
:pom_197 rr:objectMap :om_195.
:om_195 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal.
:fn_065 rr:predicateObjectMap :pom_198.
:pom_198 a rr:PredicateObjectMap;
    rr:predicateMap :pm_198.
:pm_198 a rr:PredicateMap;
    rr:constant grel:valueParameter2.
:pom_198 rr:objectMap :om_196.
:om_196 a rr:ObjectMap;
    rr:constant "True";
    rr:termType rr:Literal.
:fn_064 rr:predicateObjectMap :pom_199.
:pom_199 a rr:PredicateObjectMap;
    rr:predicateMap :pm_199.
:pm_199 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#str>.
:pom_199 rr:objectMap :om_197.
:om_197 a rr:ObjectMap;
    rr:constant "true";
    rr:termType rr:Literal.
:pom_200 a rr:PredicateObjectMap.
:map_has-cant-defficiency-compensation_000 rr:predicateObjectMap :pom_200.
:pm_200 a rr:PredicateMap.
:pom_200 rr:predicateMap :pm_200.
:pm_200 rr:constant era:hasCantDefficiencyCompensation.
:pom_200 rr:objectMap :om_198.
:om_198 a fnml:FunctionTermMap;
    rr:termType rr:Literal;
    rr:datatype xsd:boolean;
    fnml:functionValue :fn_066.
:fn_066 rml:logicalSource :source_036;
    rr:predicateObjectMap :pomexec_066.
:pomexec_066 rr:predicateMap :pmexec_066.
:pmexec_066 rr:constant fno:executes.
:pomexec_066 rr:objectMap :omexec_066.
:omexec_066 rr:constant "https://w3id.org/imec/idlab/function#trueCondition";
    rr:termType rr:IRI.
:fn_066 rr:predicateObjectMap :pom_201.
:pom_201 a rr:PredicateObjectMap;
    rr:predicateMap :pm_201.
:pm_201 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#strBoolean>.
:pom_201 rr:objectMap :om_199.
:om_199 a rr:ObjectMap, fnml:FunctionTermMap;
    fnml:functionValue :fn_067.
:fn_067 rml:logicalSource :source_036;
    rr:predicateObjectMap :pomexec_067.
:pomexec_067 rr:predicateMap :pmexec_067.
:pmexec_067 rr:constant fno:executes.
:pomexec_067 rr:objectMap :omexec_067.
:omexec_067 rr:constant "http://example.com/idlab/function/equal";
    rr:termType rr:IRI.
:fn_067 rr:predicateObjectMap :pom_202.
:pom_202 a rr:PredicateObjectMap;
    rr:predicateMap :pm_202.
:pm_202 a rr:PredicateMap;
    rr:constant grel:valueParameter.
:pom_202 rr:objectMap :om_200.
:om_200 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal.
:fn_067 rr:predicateObjectMap :pom_203.
:pom_203 a rr:PredicateObjectMap;
    rr:predicateMap :pm_203.
:pm_203 a rr:PredicateMap;
    rr:constant grel:valueParameter2.
:pom_203 rr:objectMap :om_201.
:om_201 a rr:ObjectMap;
    rr:constant "False";
    rr:termType rr:Literal.
:fn_066 rr:predicateObjectMap :pom_204.
:pom_204 a rr:PredicateObjectMap;
    rr:predicateMap :pm_204.
:pm_204 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#str>.
:pom_204 rr:objectMap :om_202.
:om_202 a rr:ObjectMap;
    rr:constant "false";
    rr:termType rr:Literal.
:rules_000 void:exampleResource :map_maximum-speed-and-cant-deficiency_000.
:map_maximum-speed-and-cant-deficiency_000 rml:logicalSource :source_037.
:source_037 a rml:LogicalSource;
    rml:source :database_036;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, RegistrationParameters.Value AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.6.4')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_036 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_037 rml:referenceFormulation ql:CSV.
:map_maximum-speed-and-cant-deficiency_000 a rr:TriplesMap;
    rdfs:label "maximum-speed-and-cant-deficiency".
:s_037 a rr:SubjectMap.
:map_maximum-speed-and-cant-deficiency_000 rr:subjectMap :s_037.
:s_037 rr:template "http://data.europa.eu/949/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_036.
:gm_036 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_205 a rr:PredicateObjectMap.
:map_maximum-speed-and-cant-deficiency_000 rr:predicateObjectMap :pom_205.
:pm_205 a rr:PredicateMap.
:pom_205 rr:predicateMap :pm_205.
:pm_205 rr:constant era:maximumSpeedAndCantDeficiency.
:pom_205 rr:objectMap :om_203.
:om_203 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal.
:rules_000 void:exampleResource :map_rail-inclination_000.
:map_rail-inclination_000 rml:logicalSource :source_038.
:source_038 a rml:LogicalSource;
    rml:source :database_037;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, (SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId) AS ParameterValue, RegistrationParameters.OtherValue, REPLACE((SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId), ' ', '_') AS ParameterURI, REPLACE(RegistrationParameters.OtherValue, ' ', '_') AS OtherURI FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.6.5')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_037 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_038 rml:referenceFormulation ql:CSV.
:map_rail-inclination_000 a rr:TriplesMap;
    rdfs:label "rail-inclination".
:s_038 a rr:SubjectMap.
:map_rail-inclination_000 rr:subjectMap :s_038.
:s_038 rr:template "http://data.europa.eu/949/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_037.
:gm_037 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_206 a rr:PredicateObjectMap.
:map_rail-inclination_000 rr:predicateObjectMap :pom_206.
:pm_206 a rr:PredicateMap.
:pom_206 rr:predicateMap :pm_206.
:pm_206 rr:constant era:railInclination.
:pom_206 rr:objectMap :om_204.
:om_204 a fnml:FunctionTermMap;
    rr:termType rr:IRI;
    fnml:functionValue :fn_068.
:fn_068 rml:logicalSource :source_038;
    rr:predicateObjectMap :pomexec_068.
:pomexec_068 rr:predicateMap :pmexec_068.
:pmexec_068 rr:constant fno:executes.
:pomexec_068 rr:objectMap :omexec_068.
:omexec_068 rr:constant "https://w3id.org/imec/idlab/function#trueCondition";
    rr:termType rr:IRI.
:fn_068 rr:predicateObjectMap :pom_207.
:pom_207 a rr:PredicateObjectMap;
    rr:predicateMap :pm_207.
:pm_207 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#strBoolean>.
:pom_207 rr:objectMap :om_205.
:om_205 a rr:ObjectMap, fnml:FunctionTermMap;
    fnml:functionValue :fn_069.
:fn_069 rml:logicalSource :source_038;
    rr:predicateObjectMap :pomexec_069.
:pomexec_069 rr:predicateMap :pmexec_069.
:pmexec_069 rr:constant fno:executes.
:pomexec_069 rr:objectMap :omexec_069.
:omexec_069 rr:constant "http://example.com/idlab/function/equal";
    rr:termType rr:IRI.
:fn_069 rr:predicateObjectMap :pom_208.
:pom_208 a rr:PredicateObjectMap;
    rr:predicateMap :pm_208.
:pm_208 a rr:PredicateMap;
    rr:constant grel:valueParameter.
:pom_208 rr:objectMap :om_206.
:om_206 a rr:ObjectMap;
    rml:reference "OtherURI";
    rr:termType rr:Literal.
:fn_069 rr:predicateObjectMap :pom_209.
:pom_209 a rr:PredicateObjectMap;
    rr:predicateMap :pm_209.
:pm_209 a rr:PredicateMap;
    rr:constant grel:valueParameter2.
:pom_209 rr:objectMap :om_207.
:om_207 a rr:ObjectMap;
    rr:constant "";
    rr:termType rr:Literal.
:fn_068 rr:predicateObjectMap :pom_210.
:pom_210 a rr:PredicateObjectMap;
    rr:predicateMap :pm_210.
:pm_210 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#str>.
:pom_210 rr:objectMap :om_208.
:om_208 a rr:ObjectMap;
    rr:template "http://data.europa.eu/949/concepts/rail-inclinations/{ParameterURI}";
    rr:termType rr:IRI.
:pom_211 a rr:PredicateObjectMap.
:map_rail-inclination_000 rr:predicateObjectMap :pom_211.
:pm_211 a rr:PredicateMap.
:pom_211 rr:predicateMap :pm_211.
:pm_211 rr:constant era:railInclination.
:pom_211 rr:objectMap :om_209.
:om_209 a fnml:FunctionTermMap;
    rr:termType rr:IRI;
    fnml:functionValue :fn_070.
:fn_070 rml:logicalSource :source_038;
    rr:predicateObjectMap :pomexec_070.
:pomexec_070 rr:predicateMap :pmexec_070.
:pmexec_070 rr:constant fno:executes.
:pomexec_070 rr:objectMap :omexec_070.
:omexec_070 rr:constant "https://w3id.org/imec/idlab/function#trueCondition";
    rr:termType rr:IRI.
:fn_070 rr:predicateObjectMap :pom_212.
:pom_212 a rr:PredicateObjectMap;
    rr:predicateMap :pm_212.
:pm_212 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#strBoolean>.
:pom_212 rr:objectMap :om_210.
:om_210 a rr:ObjectMap, fnml:FunctionTermMap;
    fnml:functionValue :fn_071.
:fn_071 rml:logicalSource :source_038;
    rr:predicateObjectMap :pomexec_071.
:pomexec_071 rr:predicateMap :pmexec_071.
:pmexec_071 rr:constant fno:executes.
:pomexec_071 rr:objectMap :omexec_071.
:omexec_071 rr:constant "http://example.com/idlab/function/notEqual";
    rr:termType rr:IRI.
:fn_071 rr:predicateObjectMap :pom_213.
:pom_213 a rr:PredicateObjectMap;
    rr:predicateMap :pm_213.
:pm_213 a rr:PredicateMap;
    rr:constant grel:valueParameter.
:pom_213 rr:objectMap :om_211.
:om_211 a rr:ObjectMap;
    rml:reference "OtherURI";
    rr:termType rr:Literal.
:fn_071 rr:predicateObjectMap :pom_214.
:pom_214 a rr:PredicateObjectMap;
    rr:predicateMap :pm_214.
:pm_214 a rr:PredicateMap;
    rr:constant grel:valueParameter2.
:pom_214 rr:objectMap :om_212.
:om_212 a rr:ObjectMap;
    rr:constant "";
    rr:termType rr:Literal.
:fn_070 rr:predicateObjectMap :pom_215.
:pom_215 a rr:PredicateObjectMap;
    rr:predicateMap :pm_215.
:pm_215 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#str>.
:pom_215 rr:objectMap :om_213.
:om_213 a rr:ObjectMap;
    rr:template "http://data.europa.eu/949/concepts/rail-inclinations/{OtherURI}";
    rr:termType rr:IRI.
:rules_000 void:exampleResource :map_maximum-average-deceleration_000.
:map_maximum-average-deceleration_000 rml:logicalSource :source_039.
:source_039 a rml:LogicalSource;
    rml:source :database_038;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.7.1')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_038 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_039 rml:referenceFormulation ql:CSV.
:map_maximum-average-deceleration_000 a rr:TriplesMap;
    rdfs:label "maximum-average-deceleration".
:s_039 a rr:SubjectMap.
:map_maximum-average-deceleration_000 rr:subjectMap :s_039.
:s_039 rr:template "http://era.europa.eu/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_038.
:gm_038 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_216 a rr:PredicateObjectMap.
:map_maximum-average-deceleration_000 rr:predicateObjectMap :pom_216.
:pm_216 a rr:PredicateMap.
:pom_216 rr:predicateMap :pm_216.
:pm_216 rr:constant era:maximumAverageDeceleration.
:pom_216 rr:objectMap :om_214.
:om_214 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal;
    rr:datatype xsd:double.
:rules_000 void:exampleResource :map_thermal-capacity-tsi-reference-case_000.
:map_thermal-capacity-tsi-reference-case_000 rml:logicalSource :source_040.
:source_040 a rml:LogicalSource;
    rml:source :database_039;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, REPLACE(CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)), ' ', '_') AS UriName FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.7.2.1.1')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_039 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_040 rml:referenceFormulation ql:CSV.
:map_thermal-capacity-tsi-reference-case_000 a rr:TriplesMap;
    rdfs:label "thermal-capacity-tsi-reference-case".
:s_040 a rr:SubjectMap.
:map_thermal-capacity-tsi-reference-case_000 rr:subjectMap :s_040.
:s_040 rr:template "http://data.europa.eu/949/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_039.
:gm_039 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_217 a rr:PredicateObjectMap.
:map_thermal-capacity-tsi-reference-case_000 rr:predicateObjectMap :pom_217.
:pm_217 a rr:PredicateMap.
:pom_217 rr:predicateMap :pm_217.
:pm_217 rr:constant era:thermalCapacityTSIReference.
:pom_217 rr:objectMap :om_215.
:om_215 a rr:ObjectMap;
    rr:template "http://data.europa.eu/949/concepts/thermal-capacity/{UriName}";
    rr:termType rr:IRI.
:rules_000 void:exampleResource :map_thermal-capacity-speed_000.
:map_thermal-capacity-speed_000 rml:logicalSource :source_041.
:source_041 a rml:LogicalSource;
    rml:source :database_040;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.7.2.1.2')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_040 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_041 rml:referenceFormulation ql:CSV.
:map_thermal-capacity-speed_000 a rr:TriplesMap;
    rdfs:label "thermal-capacity-speed".
:s_041 a rr:SubjectMap.
:map_thermal-capacity-speed_000 rr:subjectMap :s_041.
:s_041 rr:template "http://data.europa.eu/949/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_040.
:gm_040 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_218 a rr:PredicateObjectMap.
:map_thermal-capacity-speed_000 rr:predicateObjectMap :pom_218.
:pm_218 a rr:PredicateMap.
:pom_218 rr:predicateMap :pm_218.
:pm_218 rr:constant era:thermalCapacitySpeed.
:pom_218 rr:objectMap :om_216.
:om_216 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal;
    rr:datatype xsd:double.
:rules_000 void:exampleResource :map_thermal-capacity-gradient_000.
:map_thermal-capacity-gradient_000 rml:logicalSource :source_042.
:source_042 a rml:LogicalSource;
    rml:source :database_041;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.7.2.1.3')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_041 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_042 rml:referenceFormulation ql:CSV.
:map_thermal-capacity-gradient_000 a rr:TriplesMap;
    rdfs:label "thermal-capacity-gradient".
:s_042 a rr:SubjectMap.
:map_thermal-capacity-gradient_000 rr:subjectMap :s_042.
:s_042 rr:template "http://data.europa.eu/949/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_041.
:gm_041 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_219 a rr:PredicateObjectMap.
:map_thermal-capacity-gradient_000 rr:predicateObjectMap :pom_219.
:pm_219 a rr:PredicateMap.
:pom_219 rr:predicateMap :pm_219.
:pm_219 rr:constant era:thermalCapacityGradient.
:pom_219 rr:objectMap :om_217.
:om_217 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal;
    rr:datatype xsd:double.
:rules_000 void:exampleResource :map_thermal-capacity-distance_000.
:map_thermal-capacity-distance_000 rml:logicalSource :source_043.
:source_043 a rml:LogicalSource;
    rml:source :database_042;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.7.2.1.4')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_042 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_043 rml:referenceFormulation ql:CSV.
:map_thermal-capacity-distance_000 a rr:TriplesMap;
    rdfs:label "thermal-capacity-distance".
:s_043 a rr:SubjectMap.
:map_thermal-capacity-distance_000 rr:subjectMap :s_043.
:s_043 rr:template "http://data.europa.eu/949/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_042.
:gm_042 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_220 a rr:PredicateObjectMap.
:map_thermal-capacity-distance_000 rr:predicateObjectMap :pom_220.
:pm_220 a rr:PredicateMap.
:pom_220 rr:predicateMap :pm_220.
:pm_220 rr:constant era:thermalCapacityDistance.
:pom_220 rr:objectMap :om_218.
:om_218 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal;
    rr:datatype xsd:double.
:rules_000 void:exampleResource :map_thermal-capacity-time_000.
:map_thermal-capacity-time_000 rml:logicalSource :source_044.
:source_044 a rml:LogicalSource;
    rml:source :database_043;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.7.2.1.5')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_043 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_044 rml:referenceFormulation ql:CSV.
:map_thermal-capacity-time_000 a rr:TriplesMap;
    rdfs:label "thermal-capacity-time".
:s_044 a rr:SubjectMap.
:map_thermal-capacity-time_000 rr:subjectMap :s_044.
:s_044 rr:template "http://data.europa.eu/949/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_043.
:gm_043 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_221 a rr:PredicateObjectMap.
:map_thermal-capacity-time_000 rr:predicateObjectMap :pom_221.
:pm_221 a rr:PredicateMap.
:pom_221 rr:predicateMap :pm_221.
:pm_221 rr:constant era:thermalCapacityTime.
:pom_221 rr:objectMap :om_219.
:om_219 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal;
    rr:datatype xsd:integer.
:rules_000 void:exampleResource :map_maximum-brake-thermal-energy-capacity_000.
:map_maximum-brake-thermal-energy-capacity_000 rml:logicalSource :source_045.
:source_045 a rml:LogicalSource;
    rml:source :database_044;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.7.2.1.6')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_044 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_045 rml:referenceFormulation ql:CSV.
:map_maximum-brake-thermal-energy-capacity_000 a rr:TriplesMap;
    rdfs:label "maximum-brake-thermal-energy-capacity".
:s_045 a rr:SubjectMap.
:map_maximum-brake-thermal-energy-capacity_000 rr:subjectMap :s_045.
:s_045 rr:template "http://era.europa.eu/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_044.
:gm_044 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_222 a rr:PredicateObjectMap.
:map_maximum-brake-thermal-energy-capacity_000 rr:predicateObjectMap :pom_222.
:pm_222 a rr:PredicateMap.
:pom_222 rr:predicateMap :pm_222.
:pm_222 rr:constant era:maximumBrakeThermalEnergyCapacity.
:pom_222 rr:objectMap :om_220.
:om_220 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal;
    rr:datatype xsd:integer.
:rules_000 void:exampleResource :map_parking-brake-mandatory_000.
:map_parking-brake-mandatory_000 rml:logicalSource :source_046.
:source_046 a rml:LogicalSource;
    rml:source :database_045;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.7.3.1')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_045 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_046 rml:referenceFormulation ql:CSV.
:map_parking-brake-mandatory_000 a rr:TriplesMap;
    rdfs:label "parking-brake-mandatory".
:s_046 a rr:SubjectMap.
:map_parking-brake-mandatory_000 rr:subjectMap :s_046.
:s_046 rr:template "http://era.europa.eu/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_045.
:gm_045 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_223 a rr:PredicateObjectMap.
:map_parking-brake-mandatory_000 rr:predicateObjectMap :pom_223.
:pm_223 a rr:PredicateMap.
:pom_223 rr:predicateMap :pm_223.
:pm_223 rr:constant era:parkingBrakeMandatory.
:pom_223 rr:objectMap :om_221.
:om_221 a fnml:FunctionTermMap;
    rr:termType rr:Literal;
    rr:datatype xsd:boolean;
    fnml:functionValue :fn_072.
:fn_072 rml:logicalSource :source_046;
    rr:predicateObjectMap :pomexec_072.
:pomexec_072 rr:predicateMap :pmexec_072.
:pmexec_072 rr:constant fno:executes.
:pomexec_072 rr:objectMap :omexec_072.
:omexec_072 rr:constant "https://w3id.org/imec/idlab/function#trueCondition";
    rr:termType rr:IRI.
:fn_072 rr:predicateObjectMap :pom_224.
:pom_224 a rr:PredicateObjectMap;
    rr:predicateMap :pm_224.
:pm_224 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#strBoolean>.
:pom_224 rr:objectMap :om_222.
:om_222 a rr:ObjectMap, fnml:FunctionTermMap;
    fnml:functionValue :fn_073.
:fn_073 rml:logicalSource :source_046;
    rr:predicateObjectMap :pomexec_073.
:pomexec_073 rr:predicateMap :pmexec_073.
:pmexec_073 rr:constant fno:executes.
:pomexec_073 rr:objectMap :omexec_073.
:omexec_073 rr:constant "http://example.com/idlab/function/equal";
    rr:termType rr:IRI.
:fn_073 rr:predicateObjectMap :pom_225.
:pom_225 a rr:PredicateObjectMap;
    rr:predicateMap :pm_225.
:pm_225 a rr:PredicateMap;
    rr:constant grel:valueParameter.
:pom_225 rr:objectMap :om_223.
:om_223 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal.
:fn_073 rr:predicateObjectMap :pom_226.
:pom_226 a rr:PredicateObjectMap;
    rr:predicateMap :pm_226.
:pm_226 a rr:PredicateMap;
    rr:constant grel:valueParameter2.
:pom_226 rr:objectMap :om_224.
:om_224 a rr:ObjectMap;
    rr:constant "True";
    rr:termType rr:Literal.
:fn_072 rr:predicateObjectMap :pom_227.
:pom_227 a rr:PredicateObjectMap;
    rr:predicateMap :pm_227.
:pm_227 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#str>.
:pom_227 rr:objectMap :om_225.
:om_225 a rr:ObjectMap;
    rr:constant "true";
    rr:termType rr:Literal.
:pom_228 a rr:PredicateObjectMap.
:map_parking-brake-mandatory_000 rr:predicateObjectMap :pom_228.
:pm_228 a rr:PredicateMap.
:pom_228 rr:predicateMap :pm_228.
:pm_228 rr:constant era:parkingBrakeMandatory.
:pom_228 rr:objectMap :om_226.
:om_226 a fnml:FunctionTermMap;
    rr:termType rr:Literal;
    rr:datatype xsd:boolean;
    fnml:functionValue :fn_074.
:fn_074 rml:logicalSource :source_046;
    rr:predicateObjectMap :pomexec_074.
:pomexec_074 rr:predicateMap :pmexec_074.
:pmexec_074 rr:constant fno:executes.
:pomexec_074 rr:objectMap :omexec_074.
:omexec_074 rr:constant "https://w3id.org/imec/idlab/function#trueCondition";
    rr:termType rr:IRI.
:fn_074 rr:predicateObjectMap :pom_229.
:pom_229 a rr:PredicateObjectMap;
    rr:predicateMap :pm_229.
:pm_229 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#strBoolean>.
:pom_229 rr:objectMap :om_227.
:om_227 a rr:ObjectMap, fnml:FunctionTermMap;
    fnml:functionValue :fn_075.
:fn_075 rml:logicalSource :source_046;
    rr:predicateObjectMap :pomexec_075.
:pomexec_075 rr:predicateMap :pmexec_075.
:pmexec_075 rr:constant fno:executes.
:pomexec_075 rr:objectMap :omexec_075.
:omexec_075 rr:constant "http://example.com/idlab/function/equal";
    rr:termType rr:IRI.
:fn_075 rr:predicateObjectMap :pom_230.
:pom_230 a rr:PredicateObjectMap;
    rr:predicateMap :pm_230.
:pm_230 a rr:PredicateMap;
    rr:constant grel:valueParameter.
:pom_230 rr:objectMap :om_228.
:om_228 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal.
:fn_075 rr:predicateObjectMap :pom_231.
:pom_231 a rr:PredicateObjectMap;
    rr:predicateMap :pm_231.
:pm_231 a rr:PredicateMap;
    rr:constant grel:valueParameter2.
:pom_231 rr:objectMap :om_229.
:om_229 a rr:ObjectMap;
    rr:constant "False";
    rr:termType rr:Literal.
:fn_074 rr:predicateObjectMap :pom_232.
:pom_232 a rr:PredicateObjectMap;
    rr:predicateMap :pm_232.
:pm_232 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#str>.
:pom_232 rr:objectMap :om_230.
:om_230 a rr:ObjectMap;
    rr:constant "false";
    rr:termType rr:Literal.
:rules_000 void:exampleResource :map_parking-brake-type_000.
:map_parking-brake-type_000 rml:logicalSource :source_047.
:source_047 a rml:LogicalSource;
    rml:source :database_046;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, REPLACE(ReferenceListValues.[Name], ' ', '_') AS ParameterURI FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters, ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID = RegistrationParameters.ReferenceListValueId AND VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.7.3.2')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_046 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_047 rml:referenceFormulation ql:CSV.
:map_parking-brake-type_000 a rr:TriplesMap;
    rdfs:label "parking-brake-type".
:s_047 a rr:SubjectMap.
:map_parking-brake-type_000 rr:subjectMap :s_047.
:s_047 rr:template "http://era.europa.eu/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_046.
:gm_046 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_233 a rr:PredicateObjectMap.
:map_parking-brake-type_000 rr:predicateObjectMap :pom_233.
:pm_233 a rr:PredicateMap.
:pom_233 rr:predicateMap :pm_233.
:pm_233 rr:constant era:parkingBrakeType.
:pom_233 rr:objectMap :om_231.
:om_231 a rr:ObjectMap;
    rr:template "http://data.europa.eu/949/concepts/brake-parking-type/{ParameterURI})";
    rr:termType rr:IRI.
:rules_000 void:exampleResource :map_parking-brake-maximum-gradient_000.
:map_parking-brake-maximum-gradient_000 rml:logicalSource :source_048.
:source_048 a rml:LogicalSource;
    rml:source :database_047;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.7.3.3')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_047 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_048 rml:referenceFormulation ql:CSV.
:map_parking-brake-maximum-gradient_000 a rr:TriplesMap;
    rdfs:label "parking-brake-maximum-gradient".
:s_048 a rr:SubjectMap.
:map_parking-brake-maximum-gradient_000 rr:subjectMap :s_048.
:s_048 rr:template "http://data.europa.eu/949/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_047.
:gm_047 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_234 a rr:PredicateObjectMap.
:map_parking-brake-maximum-gradient_000 rr:predicateObjectMap :pom_234.
:pm_234 a rr:PredicateMap.
:pom_234 rr:predicateMap :pm_234.
:pm_234 rr:constant era:parkingBrakeMaximumGradient.
:pom_234 rr:objectMap :om_232.
:om_232 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal;
    rr:datatype xsd:double.
:rules_000 void:exampleResource :map_parking-brake_000.
:map_parking-brake_000 rml:logicalSource :source_049.
:source_049 a rml:LogicalSource;
    rml:source :database_048;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.7.3.4')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_048 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_049 rml:referenceFormulation ql:CSV.
:map_parking-brake_000 a rr:TriplesMap;
    rdfs:label "parking-brake".
:s_049 a rr:SubjectMap.
:map_parking-brake_000 rr:subjectMap :s_049.
:s_049 rr:template "http://era.europa.eu/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_048.
:gm_048 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_235 a rr:PredicateObjectMap.
:map_parking-brake_000 rr:predicateObjectMap :pom_235.
:pm_235 a rr:PredicateMap.
:pom_235 rr:predicateMap :pm_235.
:pm_235 rr:constant era:parkingBrake.
:pom_235 rr:objectMap :om_233.
:om_233 a fnml:FunctionTermMap;
    rr:termType rr:Literal;
    rr:datatype xsd:boolean;
    fnml:functionValue :fn_076.
:fn_076 rml:logicalSource :source_049;
    rr:predicateObjectMap :pomexec_076.
:pomexec_076 rr:predicateMap :pmexec_076.
:pmexec_076 rr:constant fno:executes.
:pomexec_076 rr:objectMap :omexec_076.
:omexec_076 rr:constant "https://w3id.org/imec/idlab/function#trueCondition";
    rr:termType rr:IRI.
:fn_076 rr:predicateObjectMap :pom_236.
:pom_236 a rr:PredicateObjectMap;
    rr:predicateMap :pm_236.
:pm_236 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#strBoolean>.
:pom_236 rr:objectMap :om_234.
:om_234 a rr:ObjectMap, fnml:FunctionTermMap;
    fnml:functionValue :fn_077.
:fn_077 rml:logicalSource :source_049;
    rr:predicateObjectMap :pomexec_077.
:pomexec_077 rr:predicateMap :pmexec_077.
:pmexec_077 rr:constant fno:executes.
:pomexec_077 rr:objectMap :omexec_077.
:omexec_077 rr:constant "http://example.com/idlab/function/equal";
    rr:termType rr:IRI.
:fn_077 rr:predicateObjectMap :pom_237.
:pom_237 a rr:PredicateObjectMap;
    rr:predicateMap :pm_237.
:pm_237 a rr:PredicateMap;
    rr:constant grel:valueParameter.
:pom_237 rr:objectMap :om_235.
:om_235 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal.
:fn_077 rr:predicateObjectMap :pom_238.
:pom_238 a rr:PredicateObjectMap;
    rr:predicateMap :pm_238.
:pm_238 a rr:PredicateMap;
    rr:constant grel:valueParameter2.
:pom_238 rr:objectMap :om_236.
:om_236 a rr:ObjectMap;
    rr:constant "True";
    rr:termType rr:Literal.
:fn_076 rr:predicateObjectMap :pom_239.
:pom_239 a rr:PredicateObjectMap;
    rr:predicateMap :pm_239.
:pm_239 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#str>.
:pom_239 rr:objectMap :om_237.
:om_237 a rr:ObjectMap;
    rr:constant "true";
    rr:termType rr:Literal.
:pom_240 a rr:PredicateObjectMap.
:map_parking-brake_000 rr:predicateObjectMap :pom_240.
:pm_240 a rr:PredicateMap.
:pom_240 rr:predicateMap :pm_240.
:pm_240 rr:constant era:parkingBrake.
:pom_240 rr:objectMap :om_238.
:om_238 a fnml:FunctionTermMap;
    rr:termType rr:Literal;
    rr:datatype xsd:boolean;
    fnml:functionValue :fn_078.
:fn_078 rml:logicalSource :source_049;
    rr:predicateObjectMap :pomexec_078.
:pomexec_078 rr:predicateMap :pmexec_078.
:pmexec_078 rr:constant fno:executes.
:pomexec_078 rr:objectMap :omexec_078.
:omexec_078 rr:constant "https://w3id.org/imec/idlab/function#trueCondition";
    rr:termType rr:IRI.
:fn_078 rr:predicateObjectMap :pom_241.
:pom_241 a rr:PredicateObjectMap;
    rr:predicateMap :pm_241.
:pm_241 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#strBoolean>.
:pom_241 rr:objectMap :om_239.
:om_239 a rr:ObjectMap, fnml:FunctionTermMap;
    fnml:functionValue :fn_079.
:fn_079 rml:logicalSource :source_049;
    rr:predicateObjectMap :pomexec_079.
:pomexec_079 rr:predicateMap :pmexec_079.
:pmexec_079 rr:constant fno:executes.
:pomexec_079 rr:objectMap :omexec_079.
:omexec_079 rr:constant "http://example.com/idlab/function/equal";
    rr:termType rr:IRI.
:fn_079 rr:predicateObjectMap :pom_242.
:pom_242 a rr:PredicateObjectMap;
    rr:predicateMap :pm_242.
:pm_242 a rr:PredicateMap;
    rr:constant grel:valueParameter.
:pom_242 rr:objectMap :om_240.
:om_240 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal.
:fn_079 rr:predicateObjectMap :pom_243.
:pom_243 a rr:PredicateObjectMap;
    rr:predicateMap :pm_243.
:pm_243 a rr:PredicateMap;
    rr:constant grel:valueParameter2.
:pom_243 rr:objectMap :om_241.
:om_241 a rr:ObjectMap;
    rr:constant "False";
    rr:termType rr:Literal.
:fn_078 rr:predicateObjectMap :pom_244.
:pom_244 a rr:PredicateObjectMap;
    rr:predicateMap :pm_244.
:pm_244 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#str>.
:pom_244 rr:objectMap :om_242.
:om_242 a rr:ObjectMap;
    rr:constant "false";
    rr:termType rr:Literal.
:rules_000 void:exampleResource :map_eddy-current-brake-fitted_000.
:map_eddy-current-brake-fitted_000 rml:logicalSource :source_050.
:source_050 a rml:LogicalSource;
    rml:source :database_049;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.7.4.1.1')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_049 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_050 rml:referenceFormulation ql:CSV.
:map_eddy-current-brake-fitted_000 a rr:TriplesMap;
    rdfs:label "eddy-current-brake-fitted".
:s_050 a rr:SubjectMap.
:map_eddy-current-brake-fitted_000 rr:subjectMap :s_050.
:s_050 rr:template "http://data.europa.eu/949/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_049.
:gm_049 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_245 a rr:PredicateObjectMap.
:map_eddy-current-brake-fitted_000 rr:predicateObjectMap :pom_245.
:pm_245 a rr:PredicateMap.
:pom_245 rr:predicateMap :pm_245.
:pm_245 rr:constant era:eddyCurrentBraking.
:pom_245 rr:objectMap :om_243.
:om_243 a fnml:FunctionTermMap;
    rr:termType rr:Literal;
    rr:datatype xsd:boolean;
    fnml:functionValue :fn_080.
:fn_080 rml:logicalSource :source_050;
    rr:predicateObjectMap :pomexec_080.
:pomexec_080 rr:predicateMap :pmexec_080.
:pmexec_080 rr:constant fno:executes.
:pomexec_080 rr:objectMap :omexec_080.
:omexec_080 rr:constant "https://w3id.org/imec/idlab/function#trueCondition";
    rr:termType rr:IRI.
:fn_080 rr:predicateObjectMap :pom_246.
:pom_246 a rr:PredicateObjectMap;
    rr:predicateMap :pm_246.
:pm_246 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#strBoolean>.
:pom_246 rr:objectMap :om_244.
:om_244 a rr:ObjectMap, fnml:FunctionTermMap;
    fnml:functionValue :fn_081.
:fn_081 rml:logicalSource :source_050;
    rr:predicateObjectMap :pomexec_081.
:pomexec_081 rr:predicateMap :pmexec_081.
:pmexec_081 rr:constant fno:executes.
:pomexec_081 rr:objectMap :omexec_081.
:omexec_081 rr:constant "http://example.com/idlab/function/equal";
    rr:termType rr:IRI.
:fn_081 rr:predicateObjectMap :pom_247.
:pom_247 a rr:PredicateObjectMap;
    rr:predicateMap :pm_247.
:pm_247 a rr:PredicateMap;
    rr:constant grel:valueParameter.
:pom_247 rr:objectMap :om_245.
:om_245 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal.
:fn_081 rr:predicateObjectMap :pom_248.
:pom_248 a rr:PredicateObjectMap;
    rr:predicateMap :pm_248.
:pm_248 a rr:PredicateMap;
    rr:constant grel:valueParameter2.
:pom_248 rr:objectMap :om_246.
:om_246 a rr:ObjectMap;
    rr:constant "True";
    rr:termType rr:Literal.
:fn_080 rr:predicateObjectMap :pom_249.
:pom_249 a rr:PredicateObjectMap;
    rr:predicateMap :pm_249.
:pm_249 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#str>.
:pom_249 rr:objectMap :om_247.
:om_247 a rr:ObjectMap;
    rr:constant "true";
    rr:termType rr:Literal.
:pom_250 a rr:PredicateObjectMap.
:map_eddy-current-brake-fitted_000 rr:predicateObjectMap :pom_250.
:pm_250 a rr:PredicateMap.
:pom_250 rr:predicateMap :pm_250.
:pm_250 rr:constant era:eddyCurrentBraking.
:pom_250 rr:objectMap :om_248.
:om_248 a fnml:FunctionTermMap;
    rr:termType rr:Literal;
    rr:datatype xsd:boolean;
    fnml:functionValue :fn_082.
:fn_082 rml:logicalSource :source_050;
    rr:predicateObjectMap :pomexec_082.
:pomexec_082 rr:predicateMap :pmexec_082.
:pmexec_082 rr:constant fno:executes.
:pomexec_082 rr:objectMap :omexec_082.
:omexec_082 rr:constant "https://w3id.org/imec/idlab/function#trueCondition";
    rr:termType rr:IRI.
:fn_082 rr:predicateObjectMap :pom_251.
:pom_251 a rr:PredicateObjectMap;
    rr:predicateMap :pm_251.
:pm_251 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#strBoolean>.
:pom_251 rr:objectMap :om_249.
:om_249 a rr:ObjectMap, fnml:FunctionTermMap;
    fnml:functionValue :fn_083.
:fn_083 rml:logicalSource :source_050;
    rr:predicateObjectMap :pomexec_083.
:pomexec_083 rr:predicateMap :pmexec_083.
:pmexec_083 rr:constant fno:executes.
:pomexec_083 rr:objectMap :omexec_083.
:omexec_083 rr:constant "http://example.com/idlab/function/equal";
    rr:termType rr:IRI.
:fn_083 rr:predicateObjectMap :pom_252.
:pom_252 a rr:PredicateObjectMap;
    rr:predicateMap :pm_252.
:pm_252 a rr:PredicateMap;
    rr:constant grel:valueParameter.
:pom_252 rr:objectMap :om_250.
:om_250 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal.
:fn_083 rr:predicateObjectMap :pom_253.
:pom_253 a rr:PredicateObjectMap;
    rr:predicateMap :pm_253.
:pm_253 a rr:PredicateMap;
    rr:constant grel:valueParameter2.
:pom_253 rr:objectMap :om_251.
:om_251 a rr:ObjectMap;
    rr:constant "False";
    rr:termType rr:Literal.
:fn_082 rr:predicateObjectMap :pom_254.
:pom_254 a rr:PredicateObjectMap;
    rr:predicateMap :pm_254.
:pm_254 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#str>.
:pom_254 rr:objectMap :om_252.
:om_252 a rr:ObjectMap;
    rr:constant "false";
    rr:termType rr:Literal.
:rules_000 void:exampleResource :map_eddy-current-brake-prevention_000.
:map_eddy-current-brake-prevention_000 rml:logicalSource :source_051.
:source_051 a rml:LogicalSource;
    rml:source :database_050;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.7.4.1.2')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_050 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_051 rml:referenceFormulation ql:CSV.
:map_eddy-current-brake-prevention_000 a rr:TriplesMap;
    rdfs:label "eddy-current-brake-prevention".
:s_051 a rr:SubjectMap.
:map_eddy-current-brake-prevention_000 rr:subjectMap :s_051.
:s_051 rr:template "http://data.europa.eu/949/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_050.
:gm_050 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_255 a rr:PredicateObjectMap.
:map_eddy-current-brake-prevention_000 rr:predicateObjectMap :pom_255.
:pm_255 a rr:PredicateMap.
:pom_255 rr:predicateMap :pm_255.
:pm_255 rr:constant era:eddyCurrentBrakePrevention.
:pom_255 rr:objectMap :om_253.
:om_253 a fnml:FunctionTermMap;
    rr:termType rr:Literal;
    rr:datatype xsd:boolean;
    fnml:functionValue :fn_084.
:fn_084 rml:logicalSource :source_051;
    rr:predicateObjectMap :pomexec_084.
:pomexec_084 rr:predicateMap :pmexec_084.
:pmexec_084 rr:constant fno:executes.
:pomexec_084 rr:objectMap :omexec_084.
:omexec_084 rr:constant "https://w3id.org/imec/idlab/function#trueCondition";
    rr:termType rr:IRI.
:fn_084 rr:predicateObjectMap :pom_256.
:pom_256 a rr:PredicateObjectMap;
    rr:predicateMap :pm_256.
:pm_256 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#strBoolean>.
:pom_256 rr:objectMap :om_254.
:om_254 a rr:ObjectMap, fnml:FunctionTermMap;
    fnml:functionValue :fn_085.
:fn_085 rml:logicalSource :source_051;
    rr:predicateObjectMap :pomexec_085.
:pomexec_085 rr:predicateMap :pmexec_085.
:pmexec_085 rr:constant fno:executes.
:pomexec_085 rr:objectMap :omexec_085.
:omexec_085 rr:constant "http://example.com/idlab/function/equal";
    rr:termType rr:IRI.
:fn_085 rr:predicateObjectMap :pom_257.
:pom_257 a rr:PredicateObjectMap;
    rr:predicateMap :pm_257.
:pm_257 a rr:PredicateMap;
    rr:constant grel:valueParameter.
:pom_257 rr:objectMap :om_255.
:om_255 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal.
:fn_085 rr:predicateObjectMap :pom_258.
:pom_258 a rr:PredicateObjectMap;
    rr:predicateMap :pm_258.
:pm_258 a rr:PredicateMap;
    rr:constant grel:valueParameter2.
:pom_258 rr:objectMap :om_256.
:om_256 a rr:ObjectMap;
    rr:constant "True";
    rr:termType rr:Literal.
:fn_084 rr:predicateObjectMap :pom_259.
:pom_259 a rr:PredicateObjectMap;
    rr:predicateMap :pm_259.
:pm_259 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#str>.
:pom_259 rr:objectMap :om_257.
:om_257 a rr:ObjectMap;
    rr:constant "true";
    rr:termType rr:Literal.
:pom_260 a rr:PredicateObjectMap.
:map_eddy-current-brake-prevention_000 rr:predicateObjectMap :pom_260.
:pm_260 a rr:PredicateMap.
:pom_260 rr:predicateMap :pm_260.
:pm_260 rr:constant era:eddyCurrentBrakePrevention.
:pom_260 rr:objectMap :om_258.
:om_258 a fnml:FunctionTermMap;
    rr:termType rr:Literal;
    rr:datatype xsd:boolean;
    fnml:functionValue :fn_086.
:fn_086 rml:logicalSource :source_051;
    rr:predicateObjectMap :pomexec_086.
:pomexec_086 rr:predicateMap :pmexec_086.
:pmexec_086 rr:constant fno:executes.
:pomexec_086 rr:objectMap :omexec_086.
:omexec_086 rr:constant "https://w3id.org/imec/idlab/function#trueCondition";
    rr:termType rr:IRI.
:fn_086 rr:predicateObjectMap :pom_261.
:pom_261 a rr:PredicateObjectMap;
    rr:predicateMap :pm_261.
:pm_261 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#strBoolean>.
:pom_261 rr:objectMap :om_259.
:om_259 a rr:ObjectMap, fnml:FunctionTermMap;
    fnml:functionValue :fn_087.
:fn_087 rml:logicalSource :source_051;
    rr:predicateObjectMap :pomexec_087.
:pomexec_087 rr:predicateMap :pmexec_087.
:pmexec_087 rr:constant fno:executes.
:pomexec_087 rr:objectMap :omexec_087.
:omexec_087 rr:constant "http://example.com/idlab/function/equal";
    rr:termType rr:IRI.
:fn_087 rr:predicateObjectMap :pom_262.
:pom_262 a rr:PredicateObjectMap;
    rr:predicateMap :pm_262.
:pm_262 a rr:PredicateMap;
    rr:constant grel:valueParameter.
:pom_262 rr:objectMap :om_260.
:om_260 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal.
:fn_087 rr:predicateObjectMap :pom_263.
:pom_263 a rr:PredicateObjectMap;
    rr:predicateMap :pm_263.
:pm_263 a rr:PredicateMap;
    rr:constant grel:valueParameter2.
:pom_263 rr:objectMap :om_261.
:om_261 a rr:ObjectMap;
    rr:constant "False";
    rr:termType rr:Literal.
:fn_086 rr:predicateObjectMap :pom_264.
:pom_264 a rr:PredicateObjectMap;
    rr:predicateMap :pm_264.
:pm_264 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#str>.
:pom_264 rr:objectMap :om_262.
:om_262 a rr:ObjectMap;
    rr:constant "false";
    rr:termType rr:Literal.
:rules_000 void:exampleResource :map_magnetic-brake-fitted_000.
:map_magnetic-brake-fitted_000 rml:logicalSource :source_052.
:source_052 a rml:LogicalSource;
    rml:source :database_051;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.7.4.2.1')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_051 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_052 rml:referenceFormulation ql:CSV.
:map_magnetic-brake-fitted_000 a rr:TriplesMap;
    rdfs:label "magnetic-brake-fitted".
:s_052 a rr:SubjectMap.
:map_magnetic-brake-fitted_000 rr:subjectMap :s_052.
:s_052 rr:template "http://data.europa.eu/949/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_051.
:gm_051 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_265 a rr:PredicateObjectMap.
:map_magnetic-brake-fitted_000 rr:predicateObjectMap :pom_265.
:pm_265 a rr:PredicateMap.
:pom_265 rr:predicateMap :pm_265.
:pm_265 rr:constant era:magneticBraking.
:pom_265 rr:objectMap :om_263.
:om_263 a fnml:FunctionTermMap;
    rr:termType rr:Literal;
    rr:datatype xsd:boolean;
    fnml:functionValue :fn_088.
:fn_088 rml:logicalSource :source_052;
    rr:predicateObjectMap :pomexec_088.
:pomexec_088 rr:predicateMap :pmexec_088.
:pmexec_088 rr:constant fno:executes.
:pomexec_088 rr:objectMap :omexec_088.
:omexec_088 rr:constant "https://w3id.org/imec/idlab/function#trueCondition";
    rr:termType rr:IRI.
:fn_088 rr:predicateObjectMap :pom_266.
:pom_266 a rr:PredicateObjectMap;
    rr:predicateMap :pm_266.
:pm_266 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#strBoolean>.
:pom_266 rr:objectMap :om_264.
:om_264 a rr:ObjectMap, fnml:FunctionTermMap;
    fnml:functionValue :fn_089.
:fn_089 rml:logicalSource :source_052;
    rr:predicateObjectMap :pomexec_089.
:pomexec_089 rr:predicateMap :pmexec_089.
:pmexec_089 rr:constant fno:executes.
:pomexec_089 rr:objectMap :omexec_089.
:omexec_089 rr:constant "http://example.com/idlab/function/equal";
    rr:termType rr:IRI.
:fn_089 rr:predicateObjectMap :pom_267.
:pom_267 a rr:PredicateObjectMap;
    rr:predicateMap :pm_267.
:pm_267 a rr:PredicateMap;
    rr:constant grel:valueParameter.
:pom_267 rr:objectMap :om_265.
:om_265 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal.
:fn_089 rr:predicateObjectMap :pom_268.
:pom_268 a rr:PredicateObjectMap;
    rr:predicateMap :pm_268.
:pm_268 a rr:PredicateMap;
    rr:constant grel:valueParameter2.
:pom_268 rr:objectMap :om_266.
:om_266 a rr:ObjectMap;
    rr:constant "True";
    rr:termType rr:Literal.
:fn_088 rr:predicateObjectMap :pom_269.
:pom_269 a rr:PredicateObjectMap;
    rr:predicateMap :pm_269.
:pm_269 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#str>.
:pom_269 rr:objectMap :om_267.
:om_267 a rr:ObjectMap;
    rr:constant "true";
    rr:termType rr:Literal.
:pom_270 a rr:PredicateObjectMap.
:map_magnetic-brake-fitted_000 rr:predicateObjectMap :pom_270.
:pm_270 a rr:PredicateMap.
:pom_270 rr:predicateMap :pm_270.
:pm_270 rr:constant era:magneticBraking.
:pom_270 rr:objectMap :om_268.
:om_268 a fnml:FunctionTermMap;
    rr:termType rr:Literal;
    rr:datatype xsd:boolean;
    fnml:functionValue :fn_090.
:fn_090 rml:logicalSource :source_052;
    rr:predicateObjectMap :pomexec_090.
:pomexec_090 rr:predicateMap :pmexec_090.
:pmexec_090 rr:constant fno:executes.
:pomexec_090 rr:objectMap :omexec_090.
:omexec_090 rr:constant "https://w3id.org/imec/idlab/function#trueCondition";
    rr:termType rr:IRI.
:fn_090 rr:predicateObjectMap :pom_271.
:pom_271 a rr:PredicateObjectMap;
    rr:predicateMap :pm_271.
:pm_271 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#strBoolean>.
:pom_271 rr:objectMap :om_269.
:om_269 a rr:ObjectMap, fnml:FunctionTermMap;
    fnml:functionValue :fn_091.
:fn_091 rml:logicalSource :source_052;
    rr:predicateObjectMap :pomexec_091.
:pomexec_091 rr:predicateMap :pmexec_091.
:pmexec_091 rr:constant fno:executes.
:pomexec_091 rr:objectMap :omexec_091.
:omexec_091 rr:constant "http://example.com/idlab/function/equal";
    rr:termType rr:IRI.
:fn_091 rr:predicateObjectMap :pom_272.
:pom_272 a rr:PredicateObjectMap;
    rr:predicateMap :pm_272.
:pm_272 a rr:PredicateMap;
    rr:constant grel:valueParameter.
:pom_272 rr:objectMap :om_270.
:om_270 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal.
:fn_091 rr:predicateObjectMap :pom_273.
:pom_273 a rr:PredicateObjectMap;
    rr:predicateMap :pm_273.
:pm_273 a rr:PredicateMap;
    rr:constant grel:valueParameter2.
:pom_273 rr:objectMap :om_271.
:om_271 a rr:ObjectMap;
    rr:constant "False";
    rr:termType rr:Literal.
:fn_090 rr:predicateObjectMap :pom_274.
:pom_274 a rr:PredicateObjectMap;
    rr:predicateMap :pm_274.
:pm_274 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#str>.
:pom_274 rr:objectMap :om_272.
:om_272 a rr:ObjectMap;
    rr:constant "false";
    rr:termType rr:Literal.
:rules_000 void:exampleResource :map_magnetic-brake-prevention_000.
:map_magnetic-brake-prevention_000 rml:logicalSource :source_053.
:source_053 a rml:LogicalSource;
    rml:source :database_052;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.7.4.2.2')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_052 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_053 rml:referenceFormulation ql:CSV.
:map_magnetic-brake-prevention_000 a rr:TriplesMap;
    rdfs:label "magnetic-brake-prevention".
:s_053 a rr:SubjectMap.
:map_magnetic-brake-prevention_000 rr:subjectMap :s_053.
:s_053 rr:template "http://data.europa.eu/949/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_052.
:gm_052 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_275 a rr:PredicateObjectMap.
:map_magnetic-brake-prevention_000 rr:predicateObjectMap :pom_275.
:pm_275 a rr:PredicateMap.
:pom_275 rr:predicateMap :pm_275.
:pm_275 rr:constant era:magneticBrakePrevention.
:pom_275 rr:objectMap :om_273.
:om_273 a fnml:FunctionTermMap;
    rr:termType rr:Literal;
    rr:datatype xsd:boolean;
    fnml:functionValue :fn_092.
:fn_092 rml:logicalSource :source_053;
    rr:predicateObjectMap :pomexec_092.
:pomexec_092 rr:predicateMap :pmexec_092.
:pmexec_092 rr:constant fno:executes.
:pomexec_092 rr:objectMap :omexec_092.
:omexec_092 rr:constant "https://w3id.org/imec/idlab/function#trueCondition";
    rr:termType rr:IRI.
:fn_092 rr:predicateObjectMap :pom_276.
:pom_276 a rr:PredicateObjectMap;
    rr:predicateMap :pm_276.
:pm_276 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#strBoolean>.
:pom_276 rr:objectMap :om_274.
:om_274 a rr:ObjectMap, fnml:FunctionTermMap;
    fnml:functionValue :fn_093.
:fn_093 rml:logicalSource :source_053;
    rr:predicateObjectMap :pomexec_093.
:pomexec_093 rr:predicateMap :pmexec_093.
:pmexec_093 rr:constant fno:executes.
:pomexec_093 rr:objectMap :omexec_093.
:omexec_093 rr:constant "http://example.com/idlab/function/equal";
    rr:termType rr:IRI.
:fn_093 rr:predicateObjectMap :pom_277.
:pom_277 a rr:PredicateObjectMap;
    rr:predicateMap :pm_277.
:pm_277 a rr:PredicateMap;
    rr:constant grel:valueParameter.
:pom_277 rr:objectMap :om_275.
:om_275 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal.
:fn_093 rr:predicateObjectMap :pom_278.
:pom_278 a rr:PredicateObjectMap;
    rr:predicateMap :pm_278.
:pm_278 a rr:PredicateMap;
    rr:constant grel:valueParameter2.
:pom_278 rr:objectMap :om_276.
:om_276 a rr:ObjectMap;
    rr:constant "True";
    rr:termType rr:Literal.
:fn_092 rr:predicateObjectMap :pom_279.
:pom_279 a rr:PredicateObjectMap;
    rr:predicateMap :pm_279.
:pm_279 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#str>.
:pom_279 rr:objectMap :om_277.
:om_277 a rr:ObjectMap;
    rr:constant "true";
    rr:termType rr:Literal.
:pom_280 a rr:PredicateObjectMap.
:map_magnetic-brake-prevention_000 rr:predicateObjectMap :pom_280.
:pm_280 a rr:PredicateMap.
:pom_280 rr:predicateMap :pm_280.
:pm_280 rr:constant era:magneticBrakePrevention.
:pom_280 rr:objectMap :om_278.
:om_278 a fnml:FunctionTermMap;
    rr:termType rr:Literal;
    rr:datatype xsd:boolean;
    fnml:functionValue :fn_094.
:fn_094 rml:logicalSource :source_053;
    rr:predicateObjectMap :pomexec_094.
:pomexec_094 rr:predicateMap :pmexec_094.
:pmexec_094 rr:constant fno:executes.
:pomexec_094 rr:objectMap :omexec_094.
:omexec_094 rr:constant "https://w3id.org/imec/idlab/function#trueCondition";
    rr:termType rr:IRI.
:fn_094 rr:predicateObjectMap :pom_281.
:pom_281 a rr:PredicateObjectMap;
    rr:predicateMap :pm_281.
:pm_281 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#strBoolean>.
:pom_281 rr:objectMap :om_279.
:om_279 a rr:ObjectMap, fnml:FunctionTermMap;
    fnml:functionValue :fn_095.
:fn_095 rml:logicalSource :source_053;
    rr:predicateObjectMap :pomexec_095.
:pomexec_095 rr:predicateMap :pmexec_095.
:pmexec_095 rr:constant fno:executes.
:pomexec_095 rr:objectMap :omexec_095.
:omexec_095 rr:constant "http://example.com/idlab/function/equal";
    rr:termType rr:IRI.
:fn_095 rr:predicateObjectMap :pom_282.
:pom_282 a rr:PredicateObjectMap;
    rr:predicateMap :pm_282.
:pm_282 a rr:PredicateMap;
    rr:constant grel:valueParameter.
:pom_282 rr:objectMap :om_280.
:om_280 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal.
:fn_095 rr:predicateObjectMap :pom_283.
:pom_283 a rr:PredicateObjectMap;
    rr:predicateMap :pm_283.
:pm_283 a rr:PredicateMap;
    rr:constant grel:valueParameter2.
:pom_283 rr:objectMap :om_281.
:om_281 a rr:ObjectMap;
    rr:constant "False";
    rr:termType rr:Literal.
:fn_094 rr:predicateObjectMap :pom_284.
:pom_284 a rr:PredicateObjectMap;
    rr:predicateMap :pm_284.
:pm_284 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#str>.
:pom_284 rr:objectMap :om_282.
:om_282 a rr:ObjectMap;
    rr:constant "false";
    rr:termType rr:Literal.
:rules_000 void:exampleResource :map_regenerative-brake-fitted_000.
:map_regenerative-brake-fitted_000 rml:logicalSource :source_054.
:source_054 a rml:LogicalSource;
    rml:source :database_053;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.7.4.3.1')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_053 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_054 rml:referenceFormulation ql:CSV.
:map_regenerative-brake-fitted_000 a rr:TriplesMap;
    rdfs:label "regenerative-brake-fitted".
:s_054 a rr:SubjectMap.
:map_regenerative-brake-fitted_000 rr:subjectMap :s_054.
:s_054 rr:template "http://data.europa.eu/949/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_053.
:gm_053 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_285 a rr:PredicateObjectMap.
:map_regenerative-brake-fitted_000 rr:predicateObjectMap :pom_285.
:pm_285 a rr:PredicateMap.
:pom_285 rr:predicateMap :pm_285.
:pm_285 rr:constant era:hasRegenerativeBrake.
:pom_285 rr:objectMap :om_283.
:om_283 a fnml:FunctionTermMap;
    rr:termType rr:Literal;
    rr:datatype xsd:boolean;
    fnml:functionValue :fn_096.
:fn_096 rml:logicalSource :source_054;
    rr:predicateObjectMap :pomexec_096.
:pomexec_096 rr:predicateMap :pmexec_096.
:pmexec_096 rr:constant fno:executes.
:pomexec_096 rr:objectMap :omexec_096.
:omexec_096 rr:constant "https://w3id.org/imec/idlab/function#trueCondition";
    rr:termType rr:IRI.
:fn_096 rr:predicateObjectMap :pom_286.
:pom_286 a rr:PredicateObjectMap;
    rr:predicateMap :pm_286.
:pm_286 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#strBoolean>.
:pom_286 rr:objectMap :om_284.
:om_284 a rr:ObjectMap, fnml:FunctionTermMap;
    fnml:functionValue :fn_097.
:fn_097 rml:logicalSource :source_054;
    rr:predicateObjectMap :pomexec_097.
:pomexec_097 rr:predicateMap :pmexec_097.
:pmexec_097 rr:constant fno:executes.
:pomexec_097 rr:objectMap :omexec_097.
:omexec_097 rr:constant "http://example.com/idlab/function/equal";
    rr:termType rr:IRI.
:fn_097 rr:predicateObjectMap :pom_287.
:pom_287 a rr:PredicateObjectMap;
    rr:predicateMap :pm_287.
:pm_287 a rr:PredicateMap;
    rr:constant grel:valueParameter.
:pom_287 rr:objectMap :om_285.
:om_285 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal.
:fn_097 rr:predicateObjectMap :pom_288.
:pom_288 a rr:PredicateObjectMap;
    rr:predicateMap :pm_288.
:pm_288 a rr:PredicateMap;
    rr:constant grel:valueParameter2.
:pom_288 rr:objectMap :om_286.
:om_286 a rr:ObjectMap;
    rr:constant "True";
    rr:termType rr:Literal.
:fn_096 rr:predicateObjectMap :pom_289.
:pom_289 a rr:PredicateObjectMap;
    rr:predicateMap :pm_289.
:pm_289 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#str>.
:pom_289 rr:objectMap :om_287.
:om_287 a rr:ObjectMap;
    rr:constant "true";
    rr:termType rr:Literal.
:pom_290 a rr:PredicateObjectMap.
:map_regenerative-brake-fitted_000 rr:predicateObjectMap :pom_290.
:pm_290 a rr:PredicateMap.
:pom_290 rr:predicateMap :pm_290.
:pm_290 rr:constant era:hasRegenerativeBrake.
:pom_290 rr:objectMap :om_288.
:om_288 a fnml:FunctionTermMap;
    rr:termType rr:Literal;
    rr:datatype xsd:boolean;
    fnml:functionValue :fn_098.
:fn_098 rml:logicalSource :source_054;
    rr:predicateObjectMap :pomexec_098.
:pomexec_098 rr:predicateMap :pmexec_098.
:pmexec_098 rr:constant fno:executes.
:pomexec_098 rr:objectMap :omexec_098.
:omexec_098 rr:constant "https://w3id.org/imec/idlab/function#trueCondition";
    rr:termType rr:IRI.
:fn_098 rr:predicateObjectMap :pom_291.
:pom_291 a rr:PredicateObjectMap;
    rr:predicateMap :pm_291.
:pm_291 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#strBoolean>.
:pom_291 rr:objectMap :om_289.
:om_289 a rr:ObjectMap, fnml:FunctionTermMap;
    fnml:functionValue :fn_099.
:fn_099 rml:logicalSource :source_054;
    rr:predicateObjectMap :pomexec_099.
:pomexec_099 rr:predicateMap :pmexec_099.
:pmexec_099 rr:constant fno:executes.
:pomexec_099 rr:objectMap :omexec_099.
:omexec_099 rr:constant "http://example.com/idlab/function/equal";
    rr:termType rr:IRI.
:fn_099 rr:predicateObjectMap :pom_292.
:pom_292 a rr:PredicateObjectMap;
    rr:predicateMap :pm_292.
:pm_292 a rr:PredicateMap;
    rr:constant grel:valueParameter.
:pom_292 rr:objectMap :om_290.
:om_290 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal.
:fn_099 rr:predicateObjectMap :pom_293.
:pom_293 a rr:PredicateObjectMap;
    rr:predicateMap :pm_293.
:pm_293 a rr:PredicateMap;
    rr:constant grel:valueParameter2.
:pom_293 rr:objectMap :om_291.
:om_291 a rr:ObjectMap;
    rr:constant "False";
    rr:termType rr:Literal.
:fn_098 rr:predicateObjectMap :pom_294.
:pom_294 a rr:PredicateObjectMap;
    rr:predicateMap :pm_294.
:pm_294 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#str>.
:pom_294 rr:objectMap :om_292.
:om_292 a rr:ObjectMap;
    rr:constant "false";
    rr:termType rr:Literal.
:rules_000 void:exampleResource :map_prevent-regenerative-break_000.
:map_prevent-regenerative-break_000 rml:logicalSource :source_055.
:source_055 a rml:LogicalSource;
    rml:source :database_054;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.7.4.3.2')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_054 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_055 rml:referenceFormulation ql:CSV.
:map_prevent-regenerative-break_000 a rr:TriplesMap;
    rdfs:label "prevent-regenerative-break".
:s_055 a rr:SubjectMap.
:map_prevent-regenerative-break_000 rr:subjectMap :s_055.
:s_055 rr:template "http://data.europa.eu/949/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_054.
:gm_054 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_295 a rr:PredicateObjectMap.
:map_prevent-regenerative-break_000 rr:predicateObjectMap :pom_295.
:pm_295 a rr:PredicateMap.
:pom_295 rr:predicateMap :pm_295.
:pm_295 rr:constant era:preventRegenerativeBrakeUse.
:pom_295 rr:objectMap :om_293.
:om_293 a fnml:FunctionTermMap;
    rr:termType rr:Literal;
    rr:datatype xsd:boolean;
    fnml:functionValue :fn_100.
:fn_100 rml:logicalSource :source_055;
    rr:predicateObjectMap :pomexec_100.
:pomexec_100 rr:predicateMap :pmexec_100.
:pmexec_100 rr:constant fno:executes.
:pomexec_100 rr:objectMap :omexec_100.
:omexec_100 rr:constant "https://w3id.org/imec/idlab/function#trueCondition";
    rr:termType rr:IRI.
:fn_100 rr:predicateObjectMap :pom_296.
:pom_296 a rr:PredicateObjectMap;
    rr:predicateMap :pm_296.
:pm_296 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#strBoolean>.
:pom_296 rr:objectMap :om_294.
:om_294 a rr:ObjectMap, fnml:FunctionTermMap;
    fnml:functionValue :fn_101.
:fn_101 rml:logicalSource :source_055;
    rr:predicateObjectMap :pomexec_101.
:pomexec_101 rr:predicateMap :pmexec_101.
:pmexec_101 rr:constant fno:executes.
:pomexec_101 rr:objectMap :omexec_101.
:omexec_101 rr:constant "http://example.com/idlab/function/equal";
    rr:termType rr:IRI.
:fn_101 rr:predicateObjectMap :pom_297.
:pom_297 a rr:PredicateObjectMap;
    rr:predicateMap :pm_297.
:pm_297 a rr:PredicateMap;
    rr:constant grel:valueParameter.
:pom_297 rr:objectMap :om_295.
:om_295 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal.
:fn_101 rr:predicateObjectMap :pom_298.
:pom_298 a rr:PredicateObjectMap;
    rr:predicateMap :pm_298.
:pm_298 a rr:PredicateMap;
    rr:constant grel:valueParameter2.
:pom_298 rr:objectMap :om_296.
:om_296 a rr:ObjectMap;
    rr:constant "True";
    rr:termType rr:Literal.
:fn_100 rr:predicateObjectMap :pom_299.
:pom_299 a rr:PredicateObjectMap;
    rr:predicateMap :pm_299.
:pm_299 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#str>.
:pom_299 rr:objectMap :om_297.
:om_297 a rr:ObjectMap;
    rr:constant "true";
    rr:termType rr:Literal.
:pom_300 a rr:PredicateObjectMap.
:map_prevent-regenerative-break_000 rr:predicateObjectMap :pom_300.
:pm_300 a rr:PredicateMap.
:pom_300 rr:predicateMap :pm_300.
:pm_300 rr:constant era:preventRegenerativeBrakeUse.
:pom_300 rr:objectMap :om_298.
:om_298 a fnml:FunctionTermMap;
    rr:termType rr:Literal;
    rr:datatype xsd:boolean;
    fnml:functionValue :fn_102.
:fn_102 rml:logicalSource :source_055;
    rr:predicateObjectMap :pomexec_102.
:pomexec_102 rr:predicateMap :pmexec_102.
:pmexec_102 rr:constant fno:executes.
:pomexec_102 rr:objectMap :omexec_102.
:omexec_102 rr:constant "https://w3id.org/imec/idlab/function#trueCondition";
    rr:termType rr:IRI.
:fn_102 rr:predicateObjectMap :pom_301.
:pom_301 a rr:PredicateObjectMap;
    rr:predicateMap :pm_301.
:pm_301 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#strBoolean>.
:pom_301 rr:objectMap :om_299.
:om_299 a rr:ObjectMap, fnml:FunctionTermMap;
    fnml:functionValue :fn_103.
:fn_103 rml:logicalSource :source_055;
    rr:predicateObjectMap :pomexec_103.
:pomexec_103 rr:predicateMap :pmexec_103.
:pmexec_103 rr:constant fno:executes.
:pomexec_103 rr:objectMap :omexec_103.
:omexec_103 rr:constant "http://example.com/idlab/function/equal";
    rr:termType rr:IRI.
:fn_103 rr:predicateObjectMap :pom_302.
:pom_302 a rr:PredicateObjectMap;
    rr:predicateMap :pm_302.
:pm_302 a rr:PredicateMap;
    rr:constant grel:valueParameter.
:pom_302 rr:objectMap :om_300.
:om_300 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal.
:fn_103 rr:predicateObjectMap :pom_303.
:pom_303 a rr:PredicateObjectMap;
    rr:predicateMap :pm_303.
:pm_303 a rr:PredicateMap;
    rr:constant grel:valueParameter2.
:pom_303 rr:objectMap :om_301.
:om_301 a rr:ObjectMap;
    rr:constant "False";
    rr:termType rr:Literal.
:fn_102 rr:predicateObjectMap :pom_304.
:pom_304 a rr:PredicateObjectMap;
    rr:predicateMap :pm_304.
:pm_304 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#str>.
:pom_304 rr:objectMap :om_302.
:om_302 a rr:ObjectMap;
    rr:constant "false";
    rr:termType rr:Literal.
:rules_000 void:exampleResource :map_emergency-braking_000.
:map_emergency-braking_000 rml:logicalSource :source_056.
:source_056 a rml:LogicalSource;
    rml:source :database_055;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, RegistrationParameters.Value AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.7.5')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_055 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_056 rml:referenceFormulation ql:CSV.
:map_emergency-braking_000 a rr:TriplesMap;
    rdfs:label "emergency-braking".
:s_056 a rr:SubjectMap.
:map_emergency-braking_000 rr:subjectMap :s_056.
:s_056 rr:template "http://data.europa.eu/949/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_055.
:gm_055 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_305 a rr:PredicateObjectMap.
:map_emergency-braking_000 rr:predicateObjectMap :pom_305.
:pm_305 a rr:PredicateMap.
:pom_305 rr:predicateMap :pm_305.
:pm_305 rr:constant era:emergencyBrake.
:pom_305 rr:objectMap :om_303.
:om_303 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal.
:rules_000 void:exampleResource :map_brake-weight-percentage_000.
:map_brake-weight-percentage_000 rml:logicalSource :source_057.
:source_057 a rml:LogicalSource;
    rml:source :database_056;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, RegistrationParameters.Value AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.7.6')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_056 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_057 rml:referenceFormulation ql:CSV.
:map_brake-weight-percentage_000 a rr:TriplesMap;
    rdfs:label "brake-weight-percentage".
:s_057 a rr:SubjectMap.
:map_brake-weight-percentage_000 rr:subjectMap :s_057.
:s_057 rr:template "http://data.europa.eu/949/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_056.
:gm_056 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_306 a rr:PredicateObjectMap.
:map_brake-weight-percentage_000 rr:predicateObjectMap :pom_306.
:pm_306 a rr:PredicateMap.
:pom_306 rr:predicateMap :pm_306.
:pm_306 rr:constant era:brakeWeightPercentage.
:pom_306 rr:objectMap :om_304.
:om_304 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal.
:rules_000 void:exampleResource :map_maximum-service-brake_000.
:map_maximum-service-brake_000 rml:logicalSource :source_058.
:source_058 a rml:LogicalSource;
    rml:source :database_057;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.7.7')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_057 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_058 rml:referenceFormulation ql:CSV.
:map_maximum-service-brake_000 a rr:TriplesMap;
    rdfs:label "maximum-service-brake".
:s_058 a rr:SubjectMap.
:map_maximum-service-brake_000 rr:subjectMap :s_058.
:s_058 rr:template "http://era.europa.eu/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_057.
:gm_057 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_307 a rr:PredicateObjectMap.
:map_maximum-service-brake_000 rr:predicateObjectMap :pom_307.
:pm_307 a rr:PredicateMap.
:pom_307 rr:predicateMap :pm_307.
:pm_307 rr:constant era:maximumServiceBrake.
:pom_307 rr:objectMap :om_305.
:om_305 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal.
:rules_000 void:exampleResource :map_wheel-slide-protection-system_000.
:map_wheel-slide-protection-system_000 rml:logicalSource :source_059.
:source_059 a rml:LogicalSource;
    rml:source :database_058;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.7.8')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_058 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_059 rml:referenceFormulation ql:CSV.
:map_wheel-slide-protection-system_000 a rr:TriplesMap;
    rdfs:label "wheel-slide-protection-system".
:s_059 a rr:SubjectMap.
:map_wheel-slide-protection-system_000 rr:subjectMap :s_059.
:s_059 rr:template "http://era.europa.eu/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_058.
:gm_058 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_308 a rr:PredicateObjectMap.
:map_wheel-slide-protection-system_000 rr:predicateObjectMap :pom_308.
:pm_308 a rr:PredicateMap.
:pom_308 rr:predicateMap :pm_308.
:pm_308 rr:constant era:hasWheelSlideProtectionSystem.
:pom_308 rr:objectMap :om_306.
:om_306 a fnml:FunctionTermMap;
    rr:termType rr:Literal;
    rr:datatype xsd:boolean;
    fnml:functionValue :fn_104.
:fn_104 rml:logicalSource :source_059;
    rr:predicateObjectMap :pomexec_104.
:pomexec_104 rr:predicateMap :pmexec_104.
:pmexec_104 rr:constant fno:executes.
:pomexec_104 rr:objectMap :omexec_104.
:omexec_104 rr:constant "https://w3id.org/imec/idlab/function#trueCondition";
    rr:termType rr:IRI.
:fn_104 rr:predicateObjectMap :pom_309.
:pom_309 a rr:PredicateObjectMap;
    rr:predicateMap :pm_309.
:pm_309 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#strBoolean>.
:pom_309 rr:objectMap :om_307.
:om_307 a rr:ObjectMap, fnml:FunctionTermMap;
    fnml:functionValue :fn_105.
:fn_105 rml:logicalSource :source_059;
    rr:predicateObjectMap :pomexec_105.
:pomexec_105 rr:predicateMap :pmexec_105.
:pmexec_105 rr:constant fno:executes.
:pomexec_105 rr:objectMap :omexec_105.
:omexec_105 rr:constant "http://example.com/idlab/function/equal";
    rr:termType rr:IRI.
:fn_105 rr:predicateObjectMap :pom_310.
:pom_310 a rr:PredicateObjectMap;
    rr:predicateMap :pm_310.
:pm_310 a rr:PredicateMap;
    rr:constant grel:valueParameter.
:pom_310 rr:objectMap :om_308.
:om_308 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal.
:fn_105 rr:predicateObjectMap :pom_311.
:pom_311 a rr:PredicateObjectMap;
    rr:predicateMap :pm_311.
:pm_311 a rr:PredicateMap;
    rr:constant grel:valueParameter2.
:pom_311 rr:objectMap :om_309.
:om_309 a rr:ObjectMap;
    rr:constant "True";
    rr:termType rr:Literal.
:fn_104 rr:predicateObjectMap :pom_312.
:pom_312 a rr:PredicateObjectMap;
    rr:predicateMap :pm_312.
:pm_312 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#str>.
:pom_312 rr:objectMap :om_310.
:om_310 a rr:ObjectMap;
    rr:constant "true";
    rr:termType rr:Literal.
:pom_313 a rr:PredicateObjectMap.
:map_wheel-slide-protection-system_000 rr:predicateObjectMap :pom_313.
:pm_313 a rr:PredicateMap.
:pom_313 rr:predicateMap :pm_313.
:pm_313 rr:constant era:hasWheelSlideProtectionSystem.
:pom_313 rr:objectMap :om_311.
:om_311 a fnml:FunctionTermMap;
    rr:termType rr:Literal;
    rr:datatype xsd:boolean;
    fnml:functionValue :fn_106.
:fn_106 rml:logicalSource :source_059;
    rr:predicateObjectMap :pomexec_106.
:pomexec_106 rr:predicateMap :pmexec_106.
:pmexec_106 rr:constant fno:executes.
:pomexec_106 rr:objectMap :omexec_106.
:omexec_106 rr:constant "https://w3id.org/imec/idlab/function#trueCondition";
    rr:termType rr:IRI.
:fn_106 rr:predicateObjectMap :pom_314.
:pom_314 a rr:PredicateObjectMap;
    rr:predicateMap :pm_314.
:pm_314 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#strBoolean>.
:pom_314 rr:objectMap :om_312.
:om_312 a rr:ObjectMap, fnml:FunctionTermMap;
    fnml:functionValue :fn_107.
:fn_107 rml:logicalSource :source_059;
    rr:predicateObjectMap :pomexec_107.
:pomexec_107 rr:predicateMap :pmexec_107.
:pmexec_107 rr:constant fno:executes.
:pomexec_107 rr:objectMap :omexec_107.
:omexec_107 rr:constant "http://example.com/idlab/function/equal";
    rr:termType rr:IRI.
:fn_107 rr:predicateObjectMap :pom_315.
:pom_315 a rr:PredicateObjectMap;
    rr:predicateMap :pm_315.
:pm_315 a rr:PredicateMap;
    rr:constant grel:valueParameter.
:pom_315 rr:objectMap :om_313.
:om_313 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal.
:fn_107 rr:predicateObjectMap :pom_316.
:pom_316 a rr:PredicateObjectMap;
    rr:predicateMap :pm_316.
:pm_316 a rr:PredicateMap;
    rr:constant grel:valueParameter2.
:pom_316 rr:objectMap :om_314.
:om_314 a rr:ObjectMap;
    rr:constant "False";
    rr:termType rr:Literal.
:fn_106 rr:predicateObjectMap :pom_317.
:pom_317 a rr:PredicateObjectMap;
    rr:predicateMap :pm_317.
:pm_317 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#str>.
:pom_317 rr:objectMap :om_315.
:om_315 a rr:ObjectMap;
    rr:constant "false";
    rr:termType rr:Literal.
:rules_000 void:exampleResource :map_vehicle-length_000.
:map_vehicle-length_000 rml:logicalSource :source_060.
:source_060 a rml:LogicalSource;
    rml:source :database_059;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.8.1')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_059 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_060 rml:referenceFormulation ql:CSV.
:map_vehicle-length_000 a rr:TriplesMap;
    rdfs:label "vehicle-length".
:s_060 a rr:SubjectMap.
:map_vehicle-length_000 rr:subjectMap :s_060.
:s_060 rr:template "http://data.europa.eu/949/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_059.
:gm_059 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_318 a rr:PredicateObjectMap.
:map_vehicle-length_000 rr:predicateObjectMap :pom_318.
:pm_318 a rr:PredicateMap.
:pom_318 rr:predicateMap :pm_318.
:pm_318 rr:constant era:length.
:pom_318 rr:objectMap :om_316.
:om_316 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal;
    rr:datatype xsd:double.
:rules_000 void:exampleResource :map_minimum-wheel-diameter_000.
:map_minimum-wheel-diameter_000 rml:logicalSource :source_061.
:source_061 a rml:LogicalSource;
    rml:source :database_060;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.8.2')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_060 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_061 rml:referenceFormulation ql:CSV.
:map_minimum-wheel-diameter_000 a rr:TriplesMap;
    rdfs:label "minimum-wheel-diameter".
:s_061 a rr:SubjectMap.
:map_minimum-wheel-diameter_000 rr:subjectMap :s_061.
:s_061 rr:template "http://data.europa.eu/949/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_060.
:gm_060 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_319 a rr:PredicateObjectMap.
:map_minimum-wheel-diameter_000 rr:predicateObjectMap :pom_319.
:pm_319 a rr:PredicateMap.
:pom_319 rr:predicateMap :pm_319.
:pm_319 rr:constant era:minimumWheelDiameter.
:pom_319 rr:objectMap :om_317.
:om_317 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal;
    rr:datatype xsd:integer.
:rules_000 void:exampleResource :map_shunting-restrictions_000.
:map_shunting-restrictions_000 rml:logicalSource :source_062.
:source_062 a rml:LogicalSource;
    rml:source :database_061;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.8.3')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_061 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_062 rml:referenceFormulation ql:CSV.
:map_shunting-restrictions_000 a rr:TriplesMap;
    rdfs:label "shunting-restrictions".
:s_062 a rr:SubjectMap.
:map_shunting-restrictions_000 rr:subjectMap :s_062.
:s_062 rr:template "http://data.europa.eu/949/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_061.
:gm_061 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_320 a rr:PredicateObjectMap.
:map_shunting-restrictions_000 rr:predicateObjectMap :pom_320.
:pm_320 a rr:PredicateMap.
:pom_320 rr:predicateMap :pm_320.
:pm_320 rr:constant era:hasShuntingRestrictions.
:pom_320 rr:objectMap :om_318.
:om_318 a fnml:FunctionTermMap;
    rr:termType rr:Literal;
    rr:datatype xsd:boolean;
    fnml:functionValue :fn_108.
:fn_108 rml:logicalSource :source_062;
    rr:predicateObjectMap :pomexec_108.
:pomexec_108 rr:predicateMap :pmexec_108.
:pmexec_108 rr:constant fno:executes.
:pomexec_108 rr:objectMap :omexec_108.
:omexec_108 rr:constant "https://w3id.org/imec/idlab/function#trueCondition";
    rr:termType rr:IRI.
:fn_108 rr:predicateObjectMap :pom_321.
:pom_321 a rr:PredicateObjectMap;
    rr:predicateMap :pm_321.
:pm_321 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#strBoolean>.
:pom_321 rr:objectMap :om_319.
:om_319 a rr:ObjectMap, fnml:FunctionTermMap;
    fnml:functionValue :fn_109.
:fn_109 rml:logicalSource :source_062;
    rr:predicateObjectMap :pomexec_109.
:pomexec_109 rr:predicateMap :pmexec_109.
:pmexec_109 rr:constant fno:executes.
:pomexec_109 rr:objectMap :omexec_109.
:omexec_109 rr:constant "http://example.com/idlab/function/equal";
    rr:termType rr:IRI.
:fn_109 rr:predicateObjectMap :pom_322.
:pom_322 a rr:PredicateObjectMap;
    rr:predicateMap :pm_322.
:pm_322 a rr:PredicateMap;
    rr:constant grel:valueParameter.
:pom_322 rr:objectMap :om_320.
:om_320 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal.
:fn_109 rr:predicateObjectMap :pom_323.
:pom_323 a rr:PredicateObjectMap;
    rr:predicateMap :pm_323.
:pm_323 a rr:PredicateMap;
    rr:constant grel:valueParameter2.
:pom_323 rr:objectMap :om_321.
:om_321 a rr:ObjectMap;
    rr:constant "True";
    rr:termType rr:Literal.
:fn_108 rr:predicateObjectMap :pom_324.
:pom_324 a rr:PredicateObjectMap;
    rr:predicateMap :pm_324.
:pm_324 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#str>.
:pom_324 rr:objectMap :om_322.
:om_322 a rr:ObjectMap;
    rr:constant "true";
    rr:termType rr:Literal.
:pom_325 a rr:PredicateObjectMap.
:map_shunting-restrictions_000 rr:predicateObjectMap :pom_325.
:pm_325 a rr:PredicateMap.
:pom_325 rr:predicateMap :pm_325.
:pm_325 rr:constant era:hasShuntingRestrictions.
:pom_325 rr:objectMap :om_323.
:om_323 a fnml:FunctionTermMap;
    rr:termType rr:Literal;
    rr:datatype xsd:boolean;
    fnml:functionValue :fn_110.
:fn_110 rml:logicalSource :source_062;
    rr:predicateObjectMap :pomexec_110.
:pomexec_110 rr:predicateMap :pmexec_110.
:pmexec_110 rr:constant fno:executes.
:pomexec_110 rr:objectMap :omexec_110.
:omexec_110 rr:constant "https://w3id.org/imec/idlab/function#trueCondition";
    rr:termType rr:IRI.
:fn_110 rr:predicateObjectMap :pom_326.
:pom_326 a rr:PredicateObjectMap;
    rr:predicateMap :pm_326.
:pm_326 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#strBoolean>.
:pom_326 rr:objectMap :om_324.
:om_324 a rr:ObjectMap, fnml:FunctionTermMap;
    fnml:functionValue :fn_111.
:fn_111 rml:logicalSource :source_062;
    rr:predicateObjectMap :pomexec_111.
:pomexec_111 rr:predicateMap :pmexec_111.
:pmexec_111 rr:constant fno:executes.
:pomexec_111 rr:objectMap :omexec_111.
:omexec_111 rr:constant "http://example.com/idlab/function/equal";
    rr:termType rr:IRI.
:fn_111 rr:predicateObjectMap :pom_327.
:pom_327 a rr:PredicateObjectMap;
    rr:predicateMap :pm_327.
:pm_327 a rr:PredicateMap;
    rr:constant grel:valueParameter.
:pom_327 rr:objectMap :om_325.
:om_325 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal.
:fn_111 rr:predicateObjectMap :pom_328.
:pom_328 a rr:PredicateObjectMap;
    rr:predicateMap :pm_328.
:pm_328 a rr:PredicateMap;
    rr:constant grel:valueParameter2.
:pom_328 rr:objectMap :om_326.
:om_326 a rr:ObjectMap;
    rr:constant "False";
    rr:termType rr:Literal.
:fn_110 rr:predicateObjectMap :pom_329.
:pom_329 a rr:PredicateObjectMap;
    rr:predicateMap :pm_329.
:pm_329 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#str>.
:pom_329 rr:objectMap :om_327.
:om_327 a rr:ObjectMap;
    rr:constant "false";
    rr:termType rr:Literal.
:rules_000 void:exampleResource :map_minimum-horizontal-curve-radius_000.
:map_minimum-horizontal-curve-radius_000 rml:logicalSource :source_063.
:source_063 a rml:LogicalSource;
    rml:source :database_062;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.8.4')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_062 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_063 rml:referenceFormulation ql:CSV.
:map_minimum-horizontal-curve-radius_000 a rr:TriplesMap;
    rdfs:label "minimum-horizontal-curve-radius".
:s_063 a rr:SubjectMap.
:map_minimum-horizontal-curve-radius_000 rr:subjectMap :s_063.
:s_063 rr:template "http://data.europa.eu/949/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_062.
:gm_062 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_330 a rr:PredicateObjectMap.
:map_minimum-horizontal-curve-radius_000 rr:predicateObjectMap :pom_330.
:pm_330 a rr:PredicateMap.
:pom_330 rr:predicateMap :pm_330.
:pm_330 rr:constant era:minimumHorizontalRadius.
:pom_330 rr:objectMap :om_328.
:om_328 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal;
    rr:datatype xsd:integer.
:rules_000 void:exampleResource :map_minimum-vertical-convex-radius_000.
:map_minimum-vertical-convex-radius_000 rml:logicalSource :source_064.
:source_064 a rml:LogicalSource;
    rml:source :database_063;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.8.5')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_063 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_064 rml:referenceFormulation ql:CSV.
:map_minimum-vertical-convex-radius_000 a rr:TriplesMap;
    rdfs:label "minimum-vertical-convex-radius".
:s_064 a rr:SubjectMap.
:map_minimum-vertical-convex-radius_000 rr:subjectMap :s_064.
:s_064 rr:template "http://data.europa.eu/949/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_063.
:gm_063 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_331 a rr:PredicateObjectMap.
:map_minimum-vertical-convex-radius_000 rr:predicateObjectMap :pom_331.
:pm_331 a rr:PredicateMap.
:pom_331 rr:predicateMap :pm_331.
:pm_331 rr:constant era:minimumConvexVerticalRadius.
:pom_331 rr:objectMap :om_329.
:om_329 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal;
    rr:datatype xsd:integer.
:rules_000 void:exampleResource :map_minimum-vertical-concave-radius_000.
:map_minimum-vertical-concave-radius_000 rml:logicalSource :source_065.
:source_065 a rml:LogicalSource;
    rml:source :database_064;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.8.6')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_064 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_065 rml:referenceFormulation ql:CSV.
:map_minimum-vertical-concave-radius_000 a rr:TriplesMap;
    rdfs:label "minimum-vertical-concave-radius".
:s_065 a rr:SubjectMap.
:map_minimum-vertical-concave-radius_000 rr:subjectMap :s_065.
:s_065 rr:template "http://data.europa.eu/949/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_064.
:gm_064 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_332 a rr:PredicateObjectMap.
:map_minimum-vertical-concave-radius_000 rr:predicateObjectMap :pom_332.
:pm_332 a rr:PredicateMap.
:pom_332 rr:predicateMap :pm_332.
:pm_332 rr:constant era:minimumConcaveVerticalRadius.
:pom_332 rr:objectMap :om_330.
:om_330 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal;
    rr:datatype xsd:integer.
:rules_000 void:exampleResource :map_loading-platform-height_000.
:map_loading-platform-height_000 rml:logicalSource :source_066.
:source_066 a rml:LogicalSource;
    rml:source :database_065;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.8.7')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_065 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_066 rml:referenceFormulation ql:CSV.
:map_loading-platform-height_000 a rr:TriplesMap;
    rdfs:label "loading-platform-height".
:s_066 a rr:SubjectMap.
:map_loading-platform-height_000 rr:subjectMap :s_066.
:s_066 rr:template "http://data.europa.eu/949/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_065.
:gm_065 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_333 a rr:PredicateObjectMap.
:map_loading-platform-height_000 rr:predicateObjectMap :pom_333.
:pm_333 a rr:PredicateMap.
:pom_333 rr:predicateMap :pm_333.
:pm_333 rr:constant era:loadingPlatformHeight.
:pom_333 rr:objectMap :om_331.
:om_331 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal;
    rr:datatype xsd:integer.
:rules_000 void:exampleResource :map_suited-for-ferry-transport_000.
:map_suited-for-ferry-transport_000 rml:logicalSource :source_067.
:source_067 a rml:LogicalSource;
    rml:source :database_066;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.8.8')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_066 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_067 rml:referenceFormulation ql:CSV.
:map_suited-for-ferry-transport_000 a rr:TriplesMap;
    rdfs:label "suited-for-ferry-transport".
:s_067 a rr:SubjectMap.
:map_suited-for-ferry-transport_000 rr:subjectMap :s_067.
:s_067 rr:template "http://data.europa.eu/949/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_066.
:gm_066 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_334 a rr:PredicateObjectMap.
:map_suited-for-ferry-transport_000 rr:predicateObjectMap :pom_334.
:pm_334 a rr:PredicateMap.
:pom_334 rr:predicateMap :pm_334.
:pm_334 rr:constant era:transportableOnFerry.
:pom_334 rr:objectMap :om_332.
:om_332 a fnml:FunctionTermMap;
    rr:termType rr:Literal;
    rr:datatype xsd:boolean;
    fnml:functionValue :fn_112.
:fn_112 rml:logicalSource :source_067;
    rr:predicateObjectMap :pomexec_112.
:pomexec_112 rr:predicateMap :pmexec_112.
:pmexec_112 rr:constant fno:executes.
:pomexec_112 rr:objectMap :omexec_112.
:omexec_112 rr:constant "https://w3id.org/imec/idlab/function#trueCondition";
    rr:termType rr:IRI.
:fn_112 rr:predicateObjectMap :pom_335.
:pom_335 a rr:PredicateObjectMap;
    rr:predicateMap :pm_335.
:pm_335 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#strBoolean>.
:pom_335 rr:objectMap :om_333.
:om_333 a rr:ObjectMap, fnml:FunctionTermMap;
    fnml:functionValue :fn_113.
:fn_113 rml:logicalSource :source_067;
    rr:predicateObjectMap :pomexec_113.
:pomexec_113 rr:predicateMap :pmexec_113.
:pmexec_113 rr:constant fno:executes.
:pomexec_113 rr:objectMap :omexec_113.
:omexec_113 rr:constant "http://example.com/idlab/function/equal";
    rr:termType rr:IRI.
:fn_113 rr:predicateObjectMap :pom_336.
:pom_336 a rr:PredicateObjectMap;
    rr:predicateMap :pm_336.
:pm_336 a rr:PredicateMap;
    rr:constant grel:valueParameter.
:pom_336 rr:objectMap :om_334.
:om_334 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal.
:fn_113 rr:predicateObjectMap :pom_337.
:pom_337 a rr:PredicateObjectMap;
    rr:predicateMap :pm_337.
:pm_337 a rr:PredicateMap;
    rr:constant grel:valueParameter2.
:pom_337 rr:objectMap :om_335.
:om_335 a rr:ObjectMap;
    rr:constant "True";
    rr:termType rr:Literal.
:fn_112 rr:predicateObjectMap :pom_338.
:pom_338 a rr:PredicateObjectMap;
    rr:predicateMap :pm_338.
:pm_338 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#str>.
:pom_338 rr:objectMap :om_336.
:om_336 a rr:ObjectMap;
    rr:constant "true";
    rr:termType rr:Literal.
:pom_339 a rr:PredicateObjectMap.
:map_suited-for-ferry-transport_000 rr:predicateObjectMap :pom_339.
:pm_339 a rr:PredicateMap.
:pom_339 rr:predicateMap :pm_339.
:pm_339 rr:constant era:transportableOnFerry.
:pom_339 rr:objectMap :om_337.
:om_337 a fnml:FunctionTermMap;
    rr:termType rr:Literal;
    rr:datatype xsd:boolean;
    fnml:functionValue :fn_114.
:fn_114 rml:logicalSource :source_067;
    rr:predicateObjectMap :pomexec_114.
:pomexec_114 rr:predicateMap :pmexec_114.
:pmexec_114 rr:constant fno:executes.
:pomexec_114 rr:objectMap :omexec_114.
:omexec_114 rr:constant "https://w3id.org/imec/idlab/function#trueCondition";
    rr:termType rr:IRI.
:fn_114 rr:predicateObjectMap :pom_340.
:pom_340 a rr:PredicateObjectMap;
    rr:predicateMap :pm_340.
:pm_340 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#strBoolean>.
:pom_340 rr:objectMap :om_338.
:om_338 a rr:ObjectMap, fnml:FunctionTermMap;
    fnml:functionValue :fn_115.
:fn_115 rml:logicalSource :source_067;
    rr:predicateObjectMap :pomexec_115.
:pomexec_115 rr:predicateMap :pmexec_115.
:pmexec_115 rr:constant fno:executes.
:pomexec_115 rr:objectMap :omexec_115.
:omexec_115 rr:constant "http://example.com/idlab/function/equal";
    rr:termType rr:IRI.
:fn_115 rr:predicateObjectMap :pom_341.
:pom_341 a rr:PredicateObjectMap;
    rr:predicateMap :pm_341.
:pm_341 a rr:PredicateMap;
    rr:constant grel:valueParameter.
:pom_341 rr:objectMap :om_339.
:om_339 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal.
:fn_115 rr:predicateObjectMap :pom_342.
:pom_342 a rr:PredicateObjectMap;
    rr:predicateMap :pm_342.
:pm_342 a rr:PredicateMap;
    rr:constant grel:valueParameter2.
:pom_342 rr:objectMap :om_340.
:om_340 a rr:ObjectMap;
    rr:constant "False";
    rr:termType rr:Literal.
:fn_114 rr:predicateObjectMap :pom_343.
:pom_343 a rr:PredicateObjectMap;
    rr:predicateMap :pm_343.
:pm_343 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#str>.
:pom_343 rr:objectMap :om_341.
:om_341 a rr:ObjectMap;
    rr:constant "false";
    rr:termType rr:Literal.
:rules_000 void:exampleResource :map_end-coupling-type_000.
:map_end-coupling-type_000 rml:logicalSource :source_068.
:source_068 a rml:LogicalSource;
    rml:source :database_067;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, REPLACE((SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId), ' ', '_') AS ParameterURI, REPLACE(RegistrationParameters.OtherValue, ' ', '_') AS OtherURI FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.9.1')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_067 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_068 rml:referenceFormulation ql:CSV.
:map_end-coupling-type_000 a rr:TriplesMap;
    rdfs:label "end-coupling-type".
:s_068 a rr:SubjectMap.
:map_end-coupling-type_000 rr:subjectMap :s_068.
:s_068 rr:template "http://era.europa.eu/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_067.
:gm_067 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_344 a rr:PredicateObjectMap.
:map_end-coupling-type_000 rr:predicateObjectMap :pom_344.
:pm_344 a rr:PredicateMap.
:pom_344 rr:predicateMap :pm_344.
:pm_344 rr:constant era:endCouplingType.
:pom_344 rr:objectMap :om_342.
:om_342 a fnml:FunctionTermMap;
    rr:termType rr:IRI;
    fnml:functionValue :fn_116.
:fn_116 rml:logicalSource :source_068;
    rr:predicateObjectMap :pomexec_116.
:pomexec_116 rr:predicateMap :pmexec_116.
:pmexec_116 rr:constant fno:executes.
:pomexec_116 rr:objectMap :omexec_116.
:omexec_116 rr:constant "https://w3id.org/imec/idlab/function#trueCondition";
    rr:termType rr:IRI.
:fn_116 rr:predicateObjectMap :pom_345.
:pom_345 a rr:PredicateObjectMap;
    rr:predicateMap :pm_345.
:pm_345 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#strBoolean>.
:pom_345 rr:objectMap :om_343.
:om_343 a rr:ObjectMap, fnml:FunctionTermMap;
    fnml:functionValue :fn_117.
:fn_117 rml:logicalSource :source_068;
    rr:predicateObjectMap :pomexec_117.
:pomexec_117 rr:predicateMap :pmexec_117.
:pmexec_117 rr:constant fno:executes.
:pomexec_117 rr:objectMap :omexec_117.
:omexec_117 rr:constant "http://example.com/idlab/function/equal";
    rr:termType rr:IRI.
:fn_117 rr:predicateObjectMap :pom_346.
:pom_346 a rr:PredicateObjectMap;
    rr:predicateMap :pm_346.
:pm_346 a rr:PredicateMap;
    rr:constant grel:valueParameter.
:pom_346 rr:objectMap :om_344.
:om_344 a rr:ObjectMap;
    rml:reference "OtherURI";
    rr:termType rr:Literal.
:fn_117 rr:predicateObjectMap :pom_347.
:pom_347 a rr:PredicateObjectMap;
    rr:predicateMap :pm_347.
:pm_347 a rr:PredicateMap;
    rr:constant grel:valueParameter2.
:pom_347 rr:objectMap :om_345.
:om_345 a rr:ObjectMap;
    rr:constant "";
    rr:termType rr:Literal.
:fn_116 rr:predicateObjectMap :pom_348.
:pom_348 a rr:PredicateObjectMap;
    rr:predicateMap :pm_348.
:pm_348 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#str>.
:pom_348 rr:objectMap :om_346.
:om_346 a rr:ObjectMap;
    rr:template "http://data.europa.eu/949/concepts/end-coupling-type/{ParameterURI}";
    rr:termType rr:IRI.
:pom_349 a rr:PredicateObjectMap.
:map_end-coupling-type_000 rr:predicateObjectMap :pom_349.
:pm_349 a rr:PredicateMap.
:pom_349 rr:predicateMap :pm_349.
:pm_349 rr:constant era:endCouplingType.
:pom_349 rr:objectMap :om_347.
:om_347 a fnml:FunctionTermMap;
    rr:termType rr:IRI;
    fnml:functionValue :fn_118.
:fn_118 rml:logicalSource :source_068;
    rr:predicateObjectMap :pomexec_118.
:pomexec_118 rr:predicateMap :pmexec_118.
:pmexec_118 rr:constant fno:executes.
:pomexec_118 rr:objectMap :omexec_118.
:omexec_118 rr:constant "https://w3id.org/imec/idlab/function#trueCondition";
    rr:termType rr:IRI.
:fn_118 rr:predicateObjectMap :pom_350.
:pom_350 a rr:PredicateObjectMap;
    rr:predicateMap :pm_350.
:pm_350 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#strBoolean>.
:pom_350 rr:objectMap :om_348.
:om_348 a rr:ObjectMap, fnml:FunctionTermMap;
    fnml:functionValue :fn_119.
:fn_119 rml:logicalSource :source_068;
    rr:predicateObjectMap :pomexec_119.
:pomexec_119 rr:predicateMap :pmexec_119.
:pmexec_119 rr:constant fno:executes.
:pomexec_119 rr:objectMap :omexec_119.
:omexec_119 rr:constant "http://example.com/idlab/function/notEqual";
    rr:termType rr:IRI.
:fn_119 rr:predicateObjectMap :pom_351.
:pom_351 a rr:PredicateObjectMap;
    rr:predicateMap :pm_351.
:pm_351 a rr:PredicateMap;
    rr:constant grel:valueParameter.
:pom_351 rr:objectMap :om_349.
:om_349 a rr:ObjectMap;
    rml:reference "OtherURI";
    rr:termType rr:Literal.
:fn_119 rr:predicateObjectMap :pom_352.
:pom_352 a rr:PredicateObjectMap;
    rr:predicateMap :pm_352.
:pm_352 a rr:PredicateMap;
    rr:constant grel:valueParameter2.
:pom_352 rr:objectMap :om_350.
:om_350 a rr:ObjectMap;
    rr:constant "";
    rr:termType rr:Literal.
:fn_118 rr:predicateObjectMap :pom_353.
:pom_353 a rr:PredicateObjectMap;
    rr:predicateMap :pm_353.
:pm_353 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#str>.
:pom_353 rr:objectMap :om_351.
:om_351 a rr:ObjectMap;
    rr:template "http://data.europa.eu/949/concepts/end-coupling-type/{OtherURI}";
    rr:termType rr:IRI.
:rules_000 void:exampleResource :map_axle-bearing-condition-monitoring_000.
:map_axle-bearing-condition-monitoring_000 rml:logicalSource :source_069.
:source_069 a rml:LogicalSource;
    rml:source :database_068;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, (SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId) AS ParameterValue, RegistrationParameters.OtherValue, REPLACE((SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId), ' ', '_') AS ParameterURI, REPLACE(RegistrationParameters.OtherValue, ' ', '_') AS OtherURI FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.9.2')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_068 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_069 rml:referenceFormulation ql:CSV.
:map_axle-bearing-condition-monitoring_000 a rr:TriplesMap;
    rdfs:label "axle-bearing-condition-monitoring".
:s_069 a rr:SubjectMap.
:map_axle-bearing-condition-monitoring_000 rr:subjectMap :s_069.
:s_069 rr:template "http://data.europa.eu/949/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_068.
:gm_068 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_354 a rr:PredicateObjectMap.
:map_axle-bearing-condition-monitoring_000 rr:predicateObjectMap :pom_354.
:pm_354 a rr:PredicateMap.
:pom_354 rr:predicateMap :pm_354.
:pm_354 rr:constant era:axleBearingConditionMonitoring.
:pom_354 rr:objectMap :om_352.
:om_352 a fnml:FunctionTermMap;
    rr:termType rr:IRI;
    fnml:functionValue :fn_120.
:fn_120 rml:logicalSource :source_069;
    rr:predicateObjectMap :pomexec_120.
:pomexec_120 rr:predicateMap :pmexec_120.
:pmexec_120 rr:constant fno:executes.
:pomexec_120 rr:objectMap :omexec_120.
:omexec_120 rr:constant "https://w3id.org/imec/idlab/function#trueCondition";
    rr:termType rr:IRI.
:fn_120 rr:predicateObjectMap :pom_355.
:pom_355 a rr:PredicateObjectMap;
    rr:predicateMap :pm_355.
:pm_355 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#strBoolean>.
:pom_355 rr:objectMap :om_353.
:om_353 a rr:ObjectMap, fnml:FunctionTermMap;
    fnml:functionValue :fn_121.
:fn_121 rml:logicalSource :source_069;
    rr:predicateObjectMap :pomexec_121.
:pomexec_121 rr:predicateMap :pmexec_121.
:pmexec_121 rr:constant fno:executes.
:pomexec_121 rr:objectMap :omexec_121.
:omexec_121 rr:constant "http://example.com/idlab/function/equal";
    rr:termType rr:IRI.
:fn_121 rr:predicateObjectMap :pom_356.
:pom_356 a rr:PredicateObjectMap;
    rr:predicateMap :pm_356.
:pm_356 a rr:PredicateMap;
    rr:constant grel:valueParameter.
:pom_356 rr:objectMap :om_354.
:om_354 a rr:ObjectMap;
    rml:reference "OtherURI";
    rr:termType rr:Literal.
:fn_121 rr:predicateObjectMap :pom_357.
:pom_357 a rr:PredicateObjectMap;
    rr:predicateMap :pm_357.
:pm_357 a rr:PredicateMap;
    rr:constant grel:valueParameter2.
:pom_357 rr:objectMap :om_355.
:om_355 a rr:ObjectMap;
    rr:constant "";
    rr:termType rr:Literal.
:fn_120 rr:predicateObjectMap :pom_358.
:pom_358 a rr:PredicateObjectMap;
    rr:predicateMap :pm_358.
:pm_358 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#str>.
:pom_358 rr:objectMap :om_356.
:om_356 a rr:ObjectMap;
    rr:template "http://data.europa.eu/949/concepts/axle-monitoring/{ParameterURI}";
    rr:termType rr:IRI.
:pom_359 a rr:PredicateObjectMap.
:map_axle-bearing-condition-monitoring_000 rr:predicateObjectMap :pom_359.
:pm_359 a rr:PredicateMap.
:pom_359 rr:predicateMap :pm_359.
:pm_359 rr:constant era:axleBearingConditionMonitoring.
:pom_359 rr:objectMap :om_357.
:om_357 a fnml:FunctionTermMap;
    rr:termType rr:IRI;
    fnml:functionValue :fn_122.
:fn_122 rml:logicalSource :source_069;
    rr:predicateObjectMap :pomexec_122.
:pomexec_122 rr:predicateMap :pmexec_122.
:pmexec_122 rr:constant fno:executes.
:pomexec_122 rr:objectMap :omexec_122.
:omexec_122 rr:constant "https://w3id.org/imec/idlab/function#trueCondition";
    rr:termType rr:IRI.
:fn_122 rr:predicateObjectMap :pom_360.
:pom_360 a rr:PredicateObjectMap;
    rr:predicateMap :pm_360.
:pm_360 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#strBoolean>.
:pom_360 rr:objectMap :om_358.
:om_358 a rr:ObjectMap, fnml:FunctionTermMap;
    fnml:functionValue :fn_123.
:fn_123 rml:logicalSource :source_069;
    rr:predicateObjectMap :pomexec_123.
:pomexec_123 rr:predicateMap :pmexec_123.
:pmexec_123 rr:constant fno:executes.
:pomexec_123 rr:objectMap :omexec_123.
:omexec_123 rr:constant "http://example.com/idlab/function/notEqual";
    rr:termType rr:IRI.
:fn_123 rr:predicateObjectMap :pom_361.
:pom_361 a rr:PredicateObjectMap;
    rr:predicateMap :pm_361.
:pm_361 a rr:PredicateMap;
    rr:constant grel:valueParameter.
:pom_361 rr:objectMap :om_359.
:om_359 a rr:ObjectMap;
    rml:reference "OtherURI";
    rr:termType rr:Literal.
:fn_123 rr:predicateObjectMap :pom_362.
:pom_362 a rr:PredicateObjectMap;
    rr:predicateMap :pm_362.
:pm_362 a rr:PredicateMap;
    rr:constant grel:valueParameter2.
:pom_362 rr:objectMap :om_360.
:om_360 a rr:ObjectMap;
    rr:constant "";
    rr:termType rr:Literal.
:fn_122 rr:predicateObjectMap :pom_363.
:pom_363 a rr:PredicateObjectMap;
    rr:predicateMap :pm_363.
:pm_363 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#str>.
:pom_363 rr:objectMap :om_361.
:om_361 a rr:ObjectMap;
    rr:template "http://data.europa.eu/949/concepts/axle-monitoring/{OtherURI}";
    rr:termType rr:IRI.
:rules_000 void:exampleResource :map_flange-lubrication-fitted_000.
:map_flange-lubrication-fitted_000 rml:logicalSource :source_070.
:source_070 a rml:LogicalSource;
    rml:source :database_069;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND RegistrationParameters.Value != '' AND (Parameters.Code IN ('4.9.3.1')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_069 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_070 rml:referenceFormulation ql:CSV.
:map_flange-lubrication-fitted_000 a rr:TriplesMap;
    rdfs:label "flange-lubrication-fitted".
:s_070 a rr:SubjectMap.
:map_flange-lubrication-fitted_000 rr:subjectMap :s_070.
:s_070 rr:template "http://era.europa.eu/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_069.
:gm_069 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_364 a rr:PredicateObjectMap.
:map_flange-lubrication-fitted_000 rr:predicateObjectMap :pom_364.
:pm_364 a rr:PredicateMap.
:pom_364 rr:predicateMap :pm_364.
:pm_364 rr:constant era:flangeLubricationFitted.
:pom_364 rr:objectMap :om_362.
:om_362 a fnml:FunctionTermMap;
    rr:termType rr:Literal;
    rr:datatype xsd:boolean;
    fnml:functionValue :fn_124.
:fn_124 rml:logicalSource :source_070;
    rr:predicateObjectMap :pomexec_124.
:pomexec_124 rr:predicateMap :pmexec_124.
:pmexec_124 rr:constant fno:executes.
:pomexec_124 rr:objectMap :omexec_124.
:omexec_124 rr:constant "https://w3id.org/imec/idlab/function#trueCondition";
    rr:termType rr:IRI.
:fn_124 rr:predicateObjectMap :pom_365.
:pom_365 a rr:PredicateObjectMap;
    rr:predicateMap :pm_365.
:pm_365 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#strBoolean>.
:pom_365 rr:objectMap :om_363.
:om_363 a rr:ObjectMap, fnml:FunctionTermMap;
    fnml:functionValue :fn_125.
:fn_125 rml:logicalSource :source_070;
    rr:predicateObjectMap :pomexec_125.
:pomexec_125 rr:predicateMap :pmexec_125.
:pmexec_125 rr:constant fno:executes.
:pomexec_125 rr:objectMap :omexec_125.
:omexec_125 rr:constant "http://example.com/idlab/function/equal";
    rr:termType rr:IRI.
:fn_125 rr:predicateObjectMap :pom_366.
:pom_366 a rr:PredicateObjectMap;
    rr:predicateMap :pm_366.
:pm_366 a rr:PredicateMap;
    rr:constant grel:valueParameter.
:pom_366 rr:objectMap :om_364.
:om_364 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal.
:fn_125 rr:predicateObjectMap :pom_367.
:pom_367 a rr:PredicateObjectMap;
    rr:predicateMap :pm_367.
:pm_367 a rr:PredicateMap;
    rr:constant grel:valueParameter2.
:pom_367 rr:objectMap :om_365.
:om_365 a rr:ObjectMap;
    rr:constant "True";
    rr:termType rr:Literal.
:fn_124 rr:predicateObjectMap :pom_368.
:pom_368 a rr:PredicateObjectMap;
    rr:predicateMap :pm_368.
:pm_368 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#str>.
:pom_368 rr:objectMap :om_366.
:om_366 a rr:ObjectMap;
    rr:constant "true";
    rr:termType rr:Literal.
:pom_369 a rr:PredicateObjectMap.
:map_flange-lubrication-fitted_000 rr:predicateObjectMap :pom_369.
:pm_369 a rr:PredicateMap.
:pom_369 rr:predicateMap :pm_369.
:pm_369 rr:constant era:flangeLubricationFitted.
:pom_369 rr:objectMap :om_367.
:om_367 a fnml:FunctionTermMap;
    rr:termType rr:Literal;
    rr:datatype xsd:boolean;
    fnml:functionValue :fn_126.
:fn_126 rml:logicalSource :source_070;
    rr:predicateObjectMap :pomexec_126.
:pomexec_126 rr:predicateMap :pmexec_126.
:pmexec_126 rr:constant fno:executes.
:pomexec_126 rr:objectMap :omexec_126.
:omexec_126 rr:constant "https://w3id.org/imec/idlab/function#trueCondition";
    rr:termType rr:IRI.
:fn_126 rr:predicateObjectMap :pom_370.
:pom_370 a rr:PredicateObjectMap;
    rr:predicateMap :pm_370.
:pm_370 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#strBoolean>.
:pom_370 rr:objectMap :om_368.
:om_368 a rr:ObjectMap, fnml:FunctionTermMap;
    fnml:functionValue :fn_127.
:fn_127 rml:logicalSource :source_070;
    rr:predicateObjectMap :pomexec_127.
:pomexec_127 rr:predicateMap :pmexec_127.
:pmexec_127 rr:constant fno:executes.
:pomexec_127 rr:objectMap :omexec_127.
:omexec_127 rr:constant "http://example.com/idlab/function/equal";
    rr:termType rr:IRI.
:fn_127 rr:predicateObjectMap :pom_371.
:pom_371 a rr:PredicateObjectMap;
    rr:predicateMap :pm_371.
:pm_371 a rr:PredicateMap;
    rr:constant grel:valueParameter.
:pom_371 rr:objectMap :om_369.
:om_369 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal.
:fn_127 rr:predicateObjectMap :pom_372.
:pom_372 a rr:PredicateObjectMap;
    rr:predicateMap :pm_372.
:pm_372 a rr:PredicateMap;
    rr:constant grel:valueParameter2.
:pom_372 rr:objectMap :om_370.
:om_370 a rr:ObjectMap;
    rr:constant "False";
    rr:termType rr:Literal.
:fn_126 rr:predicateObjectMap :pom_373.
:pom_373 a rr:PredicateObjectMap;
    rr:predicateMap :pm_373.
:pm_373 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#str>.
:pom_373 rr:objectMap :om_371.
:om_371 a rr:ObjectMap;
    rr:constant "false";
    rr:termType rr:Literal.
:rules_000 void:exampleResource :map_preventing-use-lubrication-device_000.
:map_preventing-use-lubrication-device_000 rml:logicalSource :source_071.
:source_071 a rml:LogicalSource;
    rml:source :database_070;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND RegistrationParameters.Value != '' AND (Parameters.Code IN ('4.9.3.2')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_070 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_071 rml:referenceFormulation ql:CSV.
:map_preventing-use-lubrication-device_000 a rr:TriplesMap;
    rdfs:label "preventing-use-lubrication-device".
:s_071 a rr:SubjectMap.
:map_preventing-use-lubrication-device_000 rr:subjectMap :s_071.
:s_071 rr:template "http://era.europa.eu/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_070.
:gm_070 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_374 a rr:PredicateObjectMap.
:map_preventing-use-lubrication-device_000 rr:predicateObjectMap :pom_374.
:pm_374 a rr:PredicateMap.
:pom_374 rr:predicateMap :pm_374.
:pm_374 rr:constant era:hasLubricationDevicePrevention.
:pom_374 rr:objectMap :om_372.
:om_372 a fnml:FunctionTermMap;
    rr:termType rr:Literal;
    rr:datatype xsd:boolean;
    fnml:functionValue :fn_128.
:fn_128 rml:logicalSource :source_071;
    rr:predicateObjectMap :pomexec_128.
:pomexec_128 rr:predicateMap :pmexec_128.
:pmexec_128 rr:constant fno:executes.
:pomexec_128 rr:objectMap :omexec_128.
:omexec_128 rr:constant "https://w3id.org/imec/idlab/function#trueCondition";
    rr:termType rr:IRI.
:fn_128 rr:predicateObjectMap :pom_375.
:pom_375 a rr:PredicateObjectMap;
    rr:predicateMap :pm_375.
:pm_375 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#strBoolean>.
:pom_375 rr:objectMap :om_373.
:om_373 a rr:ObjectMap, fnml:FunctionTermMap;
    fnml:functionValue :fn_129.
:fn_129 rml:logicalSource :source_071;
    rr:predicateObjectMap :pomexec_129.
:pomexec_129 rr:predicateMap :pmexec_129.
:pmexec_129 rr:constant fno:executes.
:pomexec_129 rr:objectMap :omexec_129.
:omexec_129 rr:constant "http://example.com/idlab/function/equal";
    rr:termType rr:IRI.
:fn_129 rr:predicateObjectMap :pom_376.
:pom_376 a rr:PredicateObjectMap;
    rr:predicateMap :pm_376.
:pm_376 a rr:PredicateMap;
    rr:constant grel:valueParameter.
:pom_376 rr:objectMap :om_374.
:om_374 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal.
:fn_129 rr:predicateObjectMap :pom_377.
:pom_377 a rr:PredicateObjectMap;
    rr:predicateMap :pm_377.
:pm_377 a rr:PredicateMap;
    rr:constant grel:valueParameter2.
:pom_377 rr:objectMap :om_375.
:om_375 a rr:ObjectMap;
    rr:constant "True";
    rr:termType rr:Literal.
:fn_128 rr:predicateObjectMap :pom_378.
:pom_378 a rr:PredicateObjectMap;
    rr:predicateMap :pm_378.
:pm_378 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#str>.
:pom_378 rr:objectMap :om_376.
:om_376 a rr:ObjectMap;
    rr:constant "true";
    rr:termType rr:Literal.
:pom_379 a rr:PredicateObjectMap.
:map_preventing-use-lubrication-device_000 rr:predicateObjectMap :pom_379.
:pm_379 a rr:PredicateMap.
:pom_379 rr:predicateMap :pm_379.
:pm_379 rr:constant era:hasLubricationDevicePrevention.
:pom_379 rr:objectMap :om_377.
:om_377 a fnml:FunctionTermMap;
    rr:termType rr:Literal;
    rr:datatype xsd:boolean;
    fnml:functionValue :fn_130.
:fn_130 rml:logicalSource :source_071;
    rr:predicateObjectMap :pomexec_130.
:pomexec_130 rr:predicateMap :pmexec_130.
:pmexec_130 rr:constant fno:executes.
:pomexec_130 rr:objectMap :omexec_130.
:omexec_130 rr:constant "https://w3id.org/imec/idlab/function#trueCondition";
    rr:termType rr:IRI.
:fn_130 rr:predicateObjectMap :pom_380.
:pom_380 a rr:PredicateObjectMap;
    rr:predicateMap :pm_380.
:pm_380 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#strBoolean>.
:pom_380 rr:objectMap :om_378.
:om_378 a rr:ObjectMap, fnml:FunctionTermMap;
    fnml:functionValue :fn_131.
:fn_131 rml:logicalSource :source_071;
    rr:predicateObjectMap :pomexec_131.
:pomexec_131 rr:predicateMap :pmexec_131.
:pmexec_131 rr:constant fno:executes.
:pomexec_131 rr:objectMap :omexec_131.
:omexec_131 rr:constant "http://example.com/idlab/function/equal";
    rr:termType rr:IRI.
:fn_131 rr:predicateObjectMap :pom_381.
:pom_381 a rr:PredicateObjectMap;
    rr:predicateMap :pm_381.
:pm_381 a rr:PredicateMap;
    rr:constant grel:valueParameter.
:pom_381 rr:objectMap :om_379.
:om_379 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal.
:fn_131 rr:predicateObjectMap :pom_382.
:pom_382 a rr:PredicateObjectMap;
    rr:predicateMap :pm_382.
:pm_382 a rr:PredicateMap;
    rr:constant grel:valueParameter2.
:pom_382 rr:objectMap :om_380.
:om_380 a rr:ObjectMap;
    rr:constant "False";
    rr:termType rr:Literal.
:fn_130 rr:predicateObjectMap :pom_383.
:pom_383 a rr:PredicateObjectMap;
    rr:predicateMap :pm_383.
:pm_383 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#str>.
:pom_383 rr:objectMap :om_381.
:om_381 a rr:ObjectMap;
    rr:constant "false";
    rr:termType rr:Literal.
:rules_000 void:exampleResource :map_energy-supply-system_000.
:map_energy-supply-system_000 rml:logicalSource :source_072.
:source_072 a rml:LogicalSource;
    rml:source :database_071;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, REPLACE((SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId), ' ', '_') AS ParameterURI, REPLACE(RegistrationParameters.OtherValue, ' ', '_') AS OtherURI FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.10.1')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_071 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_072 rml:referenceFormulation ql:CSV.
:map_energy-supply-system_000 a rr:TriplesMap;
    rdfs:label "energy-supply-system".
:s_072 a rr:SubjectMap.
:map_energy-supply-system_000 rr:subjectMap :s_072.
:s_072 rr:template "http://data.europa.eu/949/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_071.
:gm_071 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_384 a rr:PredicateObjectMap.
:map_energy-supply-system_000 rr:predicateObjectMap :pom_384.
:pm_384 a rr:PredicateMap.
:pom_384 rr:predicateMap :pm_384.
:pm_384 rr:constant era:energySupplySystem.
:pom_384 rr:objectMap :om_382.
:om_382 a fnml:FunctionTermMap;
    rr:termType rr:IRI;
    fnml:functionValue :fn_132.
:fn_132 rml:logicalSource :source_072;
    rr:predicateObjectMap :pomexec_132.
:pomexec_132 rr:predicateMap :pmexec_132.
:pmexec_132 rr:constant fno:executes.
:pomexec_132 rr:objectMap :omexec_132.
:omexec_132 rr:constant "https://w3id.org/imec/idlab/function#trueCondition";
    rr:termType rr:IRI.
:fn_132 rr:predicateObjectMap :pom_385.
:pom_385 a rr:PredicateObjectMap;
    rr:predicateMap :pm_385.
:pm_385 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#strBoolean>.
:pom_385 rr:objectMap :om_383.
:om_383 a rr:ObjectMap, fnml:FunctionTermMap;
    fnml:functionValue :fn_133.
:fn_133 rml:logicalSource :source_072;
    rr:predicateObjectMap :pomexec_133.
:pomexec_133 rr:predicateMap :pmexec_133.
:pmexec_133 rr:constant fno:executes.
:pomexec_133 rr:objectMap :omexec_133.
:omexec_133 rr:constant "http://example.com/idlab/function/equal";
    rr:termType rr:IRI.
:fn_133 rr:predicateObjectMap :pom_386.
:pom_386 a rr:PredicateObjectMap;
    rr:predicateMap :pm_386.
:pm_386 a rr:PredicateMap;
    rr:constant grel:valueParameter.
:pom_386 rr:objectMap :om_384.
:om_384 a rr:ObjectMap;
    rml:reference "OtherURI";
    rr:termType rr:Literal.
:fn_133 rr:predicateObjectMap :pom_387.
:pom_387 a rr:PredicateObjectMap;
    rr:predicateMap :pm_387.
:pm_387 a rr:PredicateMap;
    rr:constant grel:valueParameter2.
:pom_387 rr:objectMap :om_385.
:om_385 a rr:ObjectMap;
    rr:constant "";
    rr:termType rr:Literal.
:fn_132 rr:predicateObjectMap :pom_388.
:pom_388 a rr:PredicateObjectMap;
    rr:predicateMap :pm_388.
:pm_388 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#str>.
:pom_388 rr:objectMap :om_386.
:om_386 a rr:ObjectMap;
    rr:template "http://data.europa.eu/949/concepts/energy-supply-systems/{ParameterURI}";
    rr:termType rr:IRI.
:pom_389 a rr:PredicateObjectMap.
:map_energy-supply-system_000 rr:predicateObjectMap :pom_389.
:pm_389 a rr:PredicateMap.
:pom_389 rr:predicateMap :pm_389.
:pm_389 rr:constant era:energySupplySystem.
:pom_389 rr:objectMap :om_387.
:om_387 a fnml:FunctionTermMap;
    rr:termType rr:IRI;
    fnml:functionValue :fn_134.
:fn_134 rml:logicalSource :source_072;
    rr:predicateObjectMap :pomexec_134.
:pomexec_134 rr:predicateMap :pmexec_134.
:pmexec_134 rr:constant fno:executes.
:pomexec_134 rr:objectMap :omexec_134.
:omexec_134 rr:constant "https://w3id.org/imec/idlab/function#trueCondition";
    rr:termType rr:IRI.
:fn_134 rr:predicateObjectMap :pom_390.
:pom_390 a rr:PredicateObjectMap;
    rr:predicateMap :pm_390.
:pm_390 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#strBoolean>.
:pom_390 rr:objectMap :om_388.
:om_388 a rr:ObjectMap, fnml:FunctionTermMap;
    fnml:functionValue :fn_135.
:fn_135 rml:logicalSource :source_072;
    rr:predicateObjectMap :pomexec_135.
:pomexec_135 rr:predicateMap :pmexec_135.
:pmexec_135 rr:constant fno:executes.
:pomexec_135 rr:objectMap :omexec_135.
:omexec_135 rr:constant "http://example.com/idlab/function/notEqual";
    rr:termType rr:IRI.
:fn_135 rr:predicateObjectMap :pom_391.
:pom_391 a rr:PredicateObjectMap;
    rr:predicateMap :pm_391.
:pm_391 a rr:PredicateMap;
    rr:constant grel:valueParameter.
:pom_391 rr:objectMap :om_389.
:om_389 a rr:ObjectMap;
    rml:reference "OtherURI";
    rr:termType rr:Literal.
:fn_135 rr:predicateObjectMap :pom_392.
:pom_392 a rr:PredicateObjectMap;
    rr:predicateMap :pm_392.
:pm_392 a rr:PredicateMap;
    rr:constant grel:valueParameter2.
:pom_392 rr:objectMap :om_390.
:om_390 a rr:ObjectMap;
    rr:constant "";
    rr:termType rr:Literal.
:fn_134 rr:predicateObjectMap :pom_393.
:pom_393 a rr:PredicateObjectMap;
    rr:predicateMap :pm_393.
:pm_393 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#str>.
:pom_393 rr:objectMap :om_391.
:om_391 a rr:ObjectMap;
    rr:template "http://data.europa.eu/949/concepts/energy-supply-systems/{OtherURI}";
    rr:termType rr:IRI.
:rules_000 void:exampleResource :map_energy-supply-system-max-power_000.
:map_energy-supply-system-max-power_000 rml:logicalSource :source_073.
:source_073 a rml:LogicalSource;
    rml:source :database_072;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.10.2')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_072 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_073 rml:referenceFormulation ql:CSV.
:map_energy-supply-system-max-power_000 a rr:TriplesMap;
    rdfs:label "energy-supply-system-max-power".
:s_073 a rr:SubjectMap.
:map_energy-supply-system-max-power_000 rr:subjectMap :s_073.
:s_073 rr:template "http://data.europa.eu/949/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_072.
:gm_072 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_394 a rr:PredicateObjectMap.
:map_energy-supply-system-max-power_000 rr:predicateObjectMap :pom_394.
:pm_394 a rr:PredicateMap.
:pom_394 rr:predicateMap :pm_394.
:pm_394 rr:constant era:energySupplyMaxPower.
:pom_394 rr:objectMap :om_392.
:om_392 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal;
    rr:datatype xsd:double.
:rules_000 void:exampleResource :map_max-rated-current-catenary_000.
:map_max-rated-current-catenary_000 rml:logicalSource :source_074.
:source_074 a rml:LogicalSource;
    rml:source :database_073;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.10.3')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_073 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_074 rml:referenceFormulation ql:CSV.
:map_max-rated-current-catenary_000 a rr:TriplesMap;
    rdfs:label "max-rated-current-catenary".
:s_074 a rr:SubjectMap.
:map_max-rated-current-catenary_000 rr:subjectMap :s_074.
:s_074 rr:template "http://data.europa.eu/949/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_073.
:gm_073 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_395 a rr:PredicateObjectMap.
:map_max-rated-current-catenary_000 rr:predicateObjectMap :pom_395.
:pm_395 a rr:PredicateMap.
:pom_395 rr:predicateMap :pm_395.
:pm_395 rr:constant era:catenaryMaxRatedCurrent.
:pom_395 rr:objectMap :om_393.
:om_393 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal;
    rr:datatype xsd:double.
:rules_000 void:exampleResource :map_maximum-current-standstill_000.
:map_maximum-current-standstill_000 rml:logicalSource :source_075.
:source_075 a rml:LogicalSource;
    rml:source :database_074;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.10.4')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_074 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_075 rml:referenceFormulation ql:CSV.
:map_maximum-current-standstill_000 a rr:TriplesMap;
    rdfs:label "maximum-current-standstill".
:s_075 a rr:SubjectMap.
:map_maximum-current-standstill_000 rr:subjectMap :s_075.
:s_075 rr:template "http://data.europa.eu/949/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_074.
:gm_074 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_396 a rr:PredicateObjectMap.
:map_maximum-current-standstill_000 rr:predicateObjectMap :pom_396.
:pm_396 a rr:PredicateMap.
:pom_396 rr:predicateMap :pm_396.
:pm_396 rr:constant era:maxCurrentStandstillPantograph.
:pom_396 rr:objectMap :om_394.
:om_394 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal;
    rr:datatype xsd:double.
:rules_000 void:exampleResource :map_wire-contact-height_000.
:map_wire-contact-height_000 rml:logicalSource :source_076.
:source_076 a rml:LogicalSource;
    rml:source :database_075;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, MinimumHeight = CASE WHEN ISNUMERIC(SUBSTRING(CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)), 0, 8)) = 1 THEN CASE WHEN CAST(SUBSTRING(CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)), 0, 8) AS float) > 10 THEN CAST(SUBSTRING(CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)), 0, 8) AS float) / 1000 ELSE CAST(SUBSTRING(CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)), 0, 8) AS float) END ELSE NULL END, MaximumHeight = CASE WHEN ISNUMERIC(SUBSTRING(CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)), 14, 8)) = 1 THEN CASE WHEN CAST(SUBSTRING(CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)), 14, 8) AS float) > 10 THEN CAST(SUBSTRING(CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)), 14, 8) AS float) / 1000 ELSE CAST(SUBSTRING(CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)), 14, 8) AS float) END ELSE NULL END FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.10.5')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_075 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_076 rml:referenceFormulation ql:CSV.
:map_wire-contact-height_000 a rr:TriplesMap;
    rdfs:label "wire-contact-height".
:s_076 a rr:SubjectMap.
:map_wire-contact-height_000 rr:subjectMap :s_076.
:s_076 rr:template "http://data.europa.eu/949/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_075.
:gm_075 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_397 a rr:PredicateObjectMap.
:map_wire-contact-height_000 rr:predicateObjectMap :pom_397.
:pm_397 a rr:PredicateMap.
:pom_397 rr:predicateMap :pm_397.
:pm_397 rr:constant era:maximumContactWireHeight.
:pom_397 rr:objectMap :om_395.
:om_395 a fnml:FunctionTermMap;
    rr:termType rr:Literal;
    rr:datatype xsd:double;
    fnml:functionValue :fn_136.
:fn_136 rml:logicalSource :source_076;
    rr:predicateObjectMap :pomexec_136.
:pomexec_136 rr:predicateMap :pmexec_136.
:pmexec_136 rr:constant fno:executes.
:pomexec_136 rr:objectMap :omexec_136.
:omexec_136 rr:constant "https://w3id.org/imec/idlab/function#trueCondition";
    rr:termType rr:IRI.
:fn_136 rr:predicateObjectMap :pom_398.
:pom_398 a rr:PredicateObjectMap;
    rr:predicateMap :pm_398.
:pm_398 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#strBoolean>.
:pom_398 rr:objectMap :om_396.
:om_396 a rr:ObjectMap, fnml:FunctionTermMap;
    fnml:functionValue :fn_137.
:fn_137 rml:logicalSource :source_076;
    rr:predicateObjectMap :pomexec_137.
:pomexec_137 rr:predicateMap :pmexec_137.
:pmexec_137 rr:constant fno:executes.
:pomexec_137 rr:objectMap :omexec_137.
:omexec_137 rr:constant "http://example.com/idlab/function/notEqual";
    rr:termType rr:IRI.
:fn_137 rr:predicateObjectMap :pom_399.
:pom_399 a rr:PredicateObjectMap;
    rr:predicateMap :pm_399.
:pm_399 a rr:PredicateMap;
    rr:constant grel:valueParameter.
:pom_399 rr:objectMap :om_397.
:om_397 a rr:ObjectMap;
    rml:reference "MaximumHeight";
    rr:termType rr:Literal.
:fn_137 rr:predicateObjectMap :pom_400.
:pom_400 a rr:PredicateObjectMap;
    rr:predicateMap :pm_400.
:pm_400 a rr:PredicateMap;
    rr:constant grel:valueParameter2.
:pom_400 rr:objectMap :om_398.
:om_398 a rr:ObjectMap;
    rr:constant "";
    rr:termType rr:Literal.
:fn_136 rr:predicateObjectMap :pom_401.
:pom_401 a rr:PredicateObjectMap;
    rr:predicateMap :pm_401.
:pm_401 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#str>.
:pom_401 rr:objectMap :om_399.
:om_399 a rr:ObjectMap;
    rml:reference "MaximumHeight";
    rr:termType rr:Literal.
:pom_402 a rr:PredicateObjectMap.
:map_wire-contact-height_000 rr:predicateObjectMap :pom_402.
:pm_402 a rr:PredicateMap.
:pom_402 rr:predicateMap :pm_402.
:pm_402 rr:constant era:minimumContactWireHeight.
:pom_402 rr:objectMap :om_400.
:om_400 a fnml:FunctionTermMap;
    rr:termType rr:Literal;
    rr:datatype xsd:double;
    fnml:functionValue :fn_138.
:fn_138 rml:logicalSource :source_076;
    rr:predicateObjectMap :pomexec_138.
:pomexec_138 rr:predicateMap :pmexec_138.
:pmexec_138 rr:constant fno:executes.
:pomexec_138 rr:objectMap :omexec_138.
:omexec_138 rr:constant "https://w3id.org/imec/idlab/function#trueCondition";
    rr:termType rr:IRI.
:fn_138 rr:predicateObjectMap :pom_403.
:pom_403 a rr:PredicateObjectMap;
    rr:predicateMap :pm_403.
:pm_403 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#strBoolean>.
:pom_403 rr:objectMap :om_401.
:om_401 a rr:ObjectMap, fnml:FunctionTermMap;
    fnml:functionValue :fn_139.
:fn_139 rml:logicalSource :source_076;
    rr:predicateObjectMap :pomexec_139.
:pomexec_139 rr:predicateMap :pmexec_139.
:pmexec_139 rr:constant fno:executes.
:pomexec_139 rr:objectMap :omexec_139.
:omexec_139 rr:constant "http://example.com/idlab/function/notEqual";
    rr:termType rr:IRI.
:fn_139 rr:predicateObjectMap :pom_404.
:pom_404 a rr:PredicateObjectMap;
    rr:predicateMap :pm_404.
:pm_404 a rr:PredicateMap;
    rr:constant grel:valueParameter.
:pom_404 rr:objectMap :om_402.
:om_402 a rr:ObjectMap;
    rml:reference "MinimumHeight";
    rr:termType rr:Literal.
:fn_139 rr:predicateObjectMap :pom_405.
:pom_405 a rr:PredicateObjectMap;
    rr:predicateMap :pm_405.
:pm_405 a rr:PredicateMap;
    rr:constant grel:valueParameter2.
:pom_405 rr:objectMap :om_403.
:om_403 a rr:ObjectMap;
    rr:constant "";
    rr:termType rr:Literal.
:fn_138 rr:predicateObjectMap :pom_406.
:pom_406 a rr:PredicateObjectMap;
    rr:predicateMap :pm_406.
:pm_406 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#str>.
:pom_406 rr:objectMap :om_404.
:om_404 a rr:ObjectMap;
    rml:reference "MinimumHeight";
    rr:termType rr:Literal.
:rules_000 void:exampleResource :map_pantograph-head_000.
:map_pantograph-head_000 rml:logicalSource :source_077.
:source_077 a rml:LogicalSource;
    rml:source :database_076;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.10.6')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_076 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_077 rml:referenceFormulation ql:CSV.
:map_pantograph-head_000 a rr:TriplesMap;
    rdfs:label "pantograph-head".
:s_077 a rr:SubjectMap.
:map_pantograph-head_000 rr:subjectMap :s_077.
:s_077 rr:template "http://data.europa.eu/949/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_076.
:gm_076 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_407 a rr:PredicateObjectMap.
:map_pantograph-head_000 rr:predicateObjectMap :pom_407.
:pm_407 a rr:PredicateMap.
:pom_407 rr:predicateMap :pm_407.
:pm_407 rr:constant era:vehiclePantographHead.
:pom_407 rr:objectMap :om_405.
:om_405 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal.
:rules_000 void:exampleResource :map_pantograph-number_000.
:map_pantograph-number_000 rml:logicalSource :source_078.
:source_078 a rml:LogicalSource;
    rml:source :database_077;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.10.7')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_077 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_078 rml:referenceFormulation ql:CSV.
:map_pantograph-number_000 a rr:TriplesMap;
    rdfs:label "pantograph-number".
:s_078 a rr:SubjectMap.
:map_pantograph-number_000 rr:subjectMap :s_078.
:s_078 rr:template "http://data.europa.eu/949/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_077.
:gm_077 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_408 a rr:PredicateObjectMap.
:map_pantograph-number_000 rr:predicateObjectMap :pom_408.
:pm_408 a rr:PredicateMap.
:pom_408 rr:predicateMap :pm_408.
:pm_408 rr:constant era:numberOfPantographsInContactWithOCL.
:pom_408 rr:objectMap :om_406.
:om_406 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal;
    rr:datatype xsd:integer.
:rules_000 void:exampleResource :map_shortest-distance-between-pantograph_000.
:map_shortest-distance-between-pantograph_000 rml:logicalSource :source_079.
:source_079 a rml:LogicalSource;
    rml:source :database_078;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.10.8')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_078 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_079 rml:referenceFormulation ql:CSV.
:map_shortest-distance-between-pantograph_000 a rr:TriplesMap;
    rdfs:label "shortest-distance-between-pantograph".
:s_079 a rr:SubjectMap.
:map_shortest-distance-between-pantograph_000 rr:subjectMap :s_079.
:s_079 rr:template "http://data.europa.eu/949/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_078.
:gm_078 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_409 a rr:PredicateObjectMap.
:map_shortest-distance-between-pantograph_000 rr:predicateObjectMap :pom_409.
:pm_409 a rr:PredicateMap.
:pom_409 rr:predicateMap :pm_409.
:pm_409 rr:constant era:shortestDistanceBetweenPantographsInContactWithOCL.
:pom_409 rr:objectMap :om_407.
:om_407 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal.
:rules_000 void:exampleResource :map_ocl-type_000.
:map_ocl-type_000 rml:logicalSource :source_080.
:source_080 a rml:LogicalSource;
    rml:source :database_079;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.10.9')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_079 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_080 rml:referenceFormulation ql:CSV.
:map_ocl-type_000 a rr:TriplesMap;
    rdfs:label "ocl-type".
:s_080 a rr:SubjectMap.
:map_ocl-type_000 rr:subjectMap :s_080.
:s_080 rr:template "http://data.europa.eu/949/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_079.
:gm_079 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_410 a rr:PredicateObjectMap.
:map_ocl-type_000 rr:predicateObjectMap :pom_410.
:pm_410 a rr:PredicateMap.
:pom_410 rr:predicateMap :pm_410.
:pm_410 rr:constant era:oclType.
:pom_410 rr:objectMap :om_408.
:om_408 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal.
:rules_000 void:exampleResource :map_contact-strip-material_000.
:map_contact-strip-material_000 rml:logicalSource :source_081.
:source_081 a rml:LogicalSource;
    rml:source :database_080;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, REPLACE(LOWER((SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)), ' ', '_') AS ParameterURI, REPLACE(RegistrationParameters.OtherValue, ' ', '_') AS OtherURI FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.10.10')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_080 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_081 rml:referenceFormulation ql:CSV.
:map_contact-strip-material_000 a rr:TriplesMap;
    rdfs:label "contact-strip-material".
:s_081 a rr:SubjectMap.
:map_contact-strip-material_000 rr:subjectMap :s_081.
:s_081 rr:template "http://data.europa.eu/949/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_080.
:gm_080 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_411 a rr:PredicateObjectMap.
:map_contact-strip-material_000 rr:predicateObjectMap :pom_411.
:pm_411 a rr:PredicateMap.
:pom_411 rr:predicateMap :pm_411.
:pm_411 rr:constant era:contactStripMaterial.
:pom_411 rr:objectMap :om_409.
:om_409 a fnml:FunctionTermMap;
    rr:termType rr:IRI;
    fnml:functionValue :fn_140.
:fn_140 rml:logicalSource :source_081;
    rr:predicateObjectMap :pomexec_140.
:pomexec_140 rr:predicateMap :pmexec_140.
:pmexec_140 rr:constant fno:executes.
:pomexec_140 rr:objectMap :omexec_140.
:omexec_140 rr:constant "https://w3id.org/imec/idlab/function#trueCondition";
    rr:termType rr:IRI.
:fn_140 rr:predicateObjectMap :pom_412.
:pom_412 a rr:PredicateObjectMap;
    rr:predicateMap :pm_412.
:pm_412 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#strBoolean>.
:pom_412 rr:objectMap :om_410.
:om_410 a rr:ObjectMap, fnml:FunctionTermMap;
    fnml:functionValue :fn_141.
:fn_141 rml:logicalSource :source_081;
    rr:predicateObjectMap :pomexec_141.
:pomexec_141 rr:predicateMap :pmexec_141.
:pmexec_141 rr:constant fno:executes.
:pomexec_141 rr:objectMap :omexec_141.
:omexec_141 rr:constant "http://example.com/idlab/function/equal";
    rr:termType rr:IRI.
:fn_141 rr:predicateObjectMap :pom_413.
:pom_413 a rr:PredicateObjectMap;
    rr:predicateMap :pm_413.
:pm_413 a rr:PredicateMap;
    rr:constant grel:valueParameter.
:pom_413 rr:objectMap :om_411.
:om_411 a rr:ObjectMap;
    rml:reference "OtherURI";
    rr:termType rr:Literal.
:fn_141 rr:predicateObjectMap :pom_414.
:pom_414 a rr:PredicateObjectMap;
    rr:predicateMap :pm_414.
:pm_414 a rr:PredicateMap;
    rr:constant grel:valueParameter2.
:pom_414 rr:objectMap :om_412.
:om_412 a rr:ObjectMap;
    rr:constant "";
    rr:termType rr:Literal.
:fn_140 rr:predicateObjectMap :pom_415.
:pom_415 a rr:PredicateObjectMap;
    rr:predicateMap :pm_415.
:pm_415 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#str>.
:pom_415 rr:objectMap :om_413.
:om_413 a rr:ObjectMap;
    rr:template "http://data.europa.eu/949/concepts/contact-strip-materials/{ParameterURI}";
    rr:termType rr:IRI.
:pom_416 a rr:PredicateObjectMap.
:map_contact-strip-material_000 rr:predicateObjectMap :pom_416.
:pm_416 a rr:PredicateMap.
:pom_416 rr:predicateMap :pm_416.
:pm_416 rr:constant era:contactStripMaterial.
:pom_416 rr:objectMap :om_414.
:om_414 a fnml:FunctionTermMap;
    rr:termType rr:IRI;
    fnml:functionValue :fn_142.
:fn_142 rml:logicalSource :source_081;
    rr:predicateObjectMap :pomexec_142.
:pomexec_142 rr:predicateMap :pmexec_142.
:pmexec_142 rr:constant fno:executes.
:pomexec_142 rr:objectMap :omexec_142.
:omexec_142 rr:constant "https://w3id.org/imec/idlab/function#trueCondition";
    rr:termType rr:IRI.
:fn_142 rr:predicateObjectMap :pom_417.
:pom_417 a rr:PredicateObjectMap;
    rr:predicateMap :pm_417.
:pm_417 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#strBoolean>.
:pom_417 rr:objectMap :om_415.
:om_415 a rr:ObjectMap, fnml:FunctionTermMap;
    fnml:functionValue :fn_143.
:fn_143 rml:logicalSource :source_081;
    rr:predicateObjectMap :pomexec_143.
:pomexec_143 rr:predicateMap :pmexec_143.
:pmexec_143 rr:constant fno:executes.
:pomexec_143 rr:objectMap :omexec_143.
:omexec_143 rr:constant "http://example.com/idlab/function/notEqual";
    rr:termType rr:IRI.
:fn_143 rr:predicateObjectMap :pom_418.
:pom_418 a rr:PredicateObjectMap;
    rr:predicateMap :pm_418.
:pm_418 a rr:PredicateMap;
    rr:constant grel:valueParameter.
:pom_418 rr:objectMap :om_416.
:om_416 a rr:ObjectMap;
    rml:reference "OtherURI";
    rr:termType rr:Literal.
:fn_143 rr:predicateObjectMap :pom_419.
:pom_419 a rr:PredicateObjectMap;
    rr:predicateMap :pm_419.
:pm_419 a rr:PredicateMap;
    rr:constant grel:valueParameter2.
:pom_419 rr:objectMap :om_417.
:om_417 a rr:ObjectMap;
    rr:constant "";
    rr:termType rr:Literal.
:fn_142 rr:predicateObjectMap :pom_420.
:pom_420 a rr:PredicateObjectMap;
    rr:predicateMap :pm_420.
:pm_420 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#str>.
:pom_420 rr:objectMap :om_418.
:om_418 a rr:ObjectMap;
    rr:template "http://data.europa.eu/949/concepts/contact-strip-materials/{OtherURI}";
    rr:termType rr:IRI.
:rules_000 void:exampleResource :map_automatic-dropping-device-fitted_000.
:map_automatic-dropping-device-fitted_000 rml:logicalSource :source_082.
:source_082 a rml:LogicalSource;
    rml:source :database_081;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.10.11')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_081 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_082 rml:referenceFormulation ql:CSV.
:map_automatic-dropping-device-fitted_000 a rr:TriplesMap;
    rdfs:label "automatic-dropping-device-fitted".
:s_082 a rr:SubjectMap.
:map_automatic-dropping-device-fitted_000 rr:subjectMap :s_082.
:s_082 rr:template "http://data.europa.eu/949/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_081.
:gm_081 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_421 a rr:PredicateObjectMap.
:map_automatic-dropping-device-fitted_000 rr:predicateObjectMap :pom_421.
:pm_421 a rr:PredicateMap.
:pom_421 rr:predicateMap :pm_421.
:pm_421 rr:constant era:hasAutomaticDroppingDevice.
:pom_421 rr:objectMap :om_419.
:om_419 a fnml:FunctionTermMap;
    rr:termType rr:Literal;
    rr:datatype xsd:boolean;
    fnml:functionValue :fn_144.
:fn_144 rml:logicalSource :source_082;
    rr:predicateObjectMap :pomexec_144.
:pomexec_144 rr:predicateMap :pmexec_144.
:pmexec_144 rr:constant fno:executes.
:pomexec_144 rr:objectMap :omexec_144.
:omexec_144 rr:constant "https://w3id.org/imec/idlab/function#trueCondition";
    rr:termType rr:IRI.
:fn_144 rr:predicateObjectMap :pom_422.
:pom_422 a rr:PredicateObjectMap;
    rr:predicateMap :pm_422.
:pm_422 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#strBoolean>.
:pom_422 rr:objectMap :om_420.
:om_420 a rr:ObjectMap, fnml:FunctionTermMap;
    fnml:functionValue :fn_145.
:fn_145 rml:logicalSource :source_082;
    rr:predicateObjectMap :pomexec_145.
:pomexec_145 rr:predicateMap :pmexec_145.
:pmexec_145 rr:constant fno:executes.
:pomexec_145 rr:objectMap :omexec_145.
:omexec_145 rr:constant "http://example.com/idlab/function/equal";
    rr:termType rr:IRI.
:fn_145 rr:predicateObjectMap :pom_423.
:pom_423 a rr:PredicateObjectMap;
    rr:predicateMap :pm_423.
:pm_423 a rr:PredicateMap;
    rr:constant grel:valueParameter.
:pom_423 rr:objectMap :om_421.
:om_421 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal.
:fn_145 rr:predicateObjectMap :pom_424.
:pom_424 a rr:PredicateObjectMap;
    rr:predicateMap :pm_424.
:pm_424 a rr:PredicateMap;
    rr:constant grel:valueParameter2.
:pom_424 rr:objectMap :om_422.
:om_422 a rr:ObjectMap;
    rr:constant "True";
    rr:termType rr:Literal.
:fn_144 rr:predicateObjectMap :pom_425.
:pom_425 a rr:PredicateObjectMap;
    rr:predicateMap :pm_425.
:pm_425 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#str>.
:pom_425 rr:objectMap :om_423.
:om_423 a rr:ObjectMap;
    rr:constant "true";
    rr:termType rr:Literal.
:pom_426 a rr:PredicateObjectMap.
:map_automatic-dropping-device-fitted_000 rr:predicateObjectMap :pom_426.
:pm_426 a rr:PredicateMap.
:pom_426 rr:predicateMap :pm_426.
:pm_426 rr:constant era:hasAutomaticDroppingDevice.
:pom_426 rr:objectMap :om_424.
:om_424 a fnml:FunctionTermMap;
    rr:termType rr:Literal;
    rr:datatype xsd:boolean;
    fnml:functionValue :fn_146.
:fn_146 rml:logicalSource :source_082;
    rr:predicateObjectMap :pomexec_146.
:pomexec_146 rr:predicateMap :pmexec_146.
:pmexec_146 rr:constant fno:executes.
:pomexec_146 rr:objectMap :omexec_146.
:omexec_146 rr:constant "https://w3id.org/imec/idlab/function#trueCondition";
    rr:termType rr:IRI.
:fn_146 rr:predicateObjectMap :pom_427.
:pom_427 a rr:PredicateObjectMap;
    rr:predicateMap :pm_427.
:pm_427 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#strBoolean>.
:pom_427 rr:objectMap :om_425.
:om_425 a rr:ObjectMap, fnml:FunctionTermMap;
    fnml:functionValue :fn_147.
:fn_147 rml:logicalSource :source_082;
    rr:predicateObjectMap :pomexec_147.
:pomexec_147 rr:predicateMap :pmexec_147.
:pmexec_147 rr:constant fno:executes.
:pomexec_147 rr:objectMap :omexec_147.
:omexec_147 rr:constant "http://example.com/idlab/function/equal";
    rr:termType rr:IRI.
:fn_147 rr:predicateObjectMap :pom_428.
:pom_428 a rr:PredicateObjectMap;
    rr:predicateMap :pm_428.
:pm_428 a rr:PredicateMap;
    rr:constant grel:valueParameter.
:pom_428 rr:objectMap :om_426.
:om_426 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal.
:fn_147 rr:predicateObjectMap :pom_429.
:pom_429 a rr:PredicateObjectMap;
    rr:predicateMap :pm_429.
:pm_429 a rr:PredicateMap;
    rr:constant grel:valueParameter2.
:pom_429 rr:objectMap :om_427.
:om_427 a rr:ObjectMap;
    rr:constant "False";
    rr:termType rr:Literal.
:fn_146 rr:predicateObjectMap :pom_430.
:pom_430 a rr:PredicateObjectMap;
    rr:predicateMap :pm_430.
:pm_430 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#str>.
:pom_430 rr:objectMap :om_428.
:om_428 a rr:ObjectMap;
    rr:constant "false";
    rr:termType rr:Literal.
:rules_000 void:exampleResource :map_energy-meter-installed_000.
:map_energy-meter-installed_000 rml:logicalSource :source_083.
:source_083 a rml:LogicalSource;
    rml:source :database_082;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.10.11')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_082 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_083 rml:referenceFormulation ql:CSV.
:map_energy-meter-installed_000 a rr:TriplesMap;
    rdfs:label "energy-meter-installed".
:s_083 a rr:SubjectMap.
:map_energy-meter-installed_000 rr:subjectMap :s_083.
:s_083 rr:template "http://data.europa.eu/949/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_082.
:gm_082 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_431 a rr:PredicateObjectMap.
:map_energy-meter-installed_000 rr:predicateObjectMap :pom_431.
:pm_431 a rr:PredicateMap.
:pom_431 rr:predicateMap :pm_431.
:pm_431 rr:constant era:energyMeterInstalled.
:pom_431 rr:objectMap :om_429.
:om_429 a fnml:FunctionTermMap;
    rr:termType rr:Literal;
    rr:datatype xsd:boolean;
    fnml:functionValue :fn_148.
:fn_148 rml:logicalSource :source_083;
    rr:predicateObjectMap :pomexec_148.
:pomexec_148 rr:predicateMap :pmexec_148.
:pmexec_148 rr:constant fno:executes.
:pomexec_148 rr:objectMap :omexec_148.
:omexec_148 rr:constant "https://w3id.org/imec/idlab/function#trueCondition";
    rr:termType rr:IRI.
:fn_148 rr:predicateObjectMap :pom_432.
:pom_432 a rr:PredicateObjectMap;
    rr:predicateMap :pm_432.
:pm_432 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#strBoolean>.
:pom_432 rr:objectMap :om_430.
:om_430 a rr:ObjectMap, fnml:FunctionTermMap;
    fnml:functionValue :fn_149.
:fn_149 rml:logicalSource :source_083;
    rr:predicateObjectMap :pomexec_149.
:pomexec_149 rr:predicateMap :pmexec_149.
:pmexec_149 rr:constant fno:executes.
:pomexec_149 rr:objectMap :omexec_149.
:omexec_149 rr:constant "http://example.com/idlab/function/equal";
    rr:termType rr:IRI.
:fn_149 rr:predicateObjectMap :pom_433.
:pom_433 a rr:PredicateObjectMap;
    rr:predicateMap :pm_433.
:pm_433 a rr:PredicateMap;
    rr:constant grel:valueParameter.
:pom_433 rr:objectMap :om_431.
:om_431 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal.
:fn_149 rr:predicateObjectMap :pom_434.
:pom_434 a rr:PredicateObjectMap;
    rr:predicateMap :pm_434.
:pm_434 a rr:PredicateMap;
    rr:constant grel:valueParameter2.
:pom_434 rr:objectMap :om_432.
:om_432 a rr:ObjectMap;
    rr:constant "True";
    rr:termType rr:Literal.
:fn_148 rr:predicateObjectMap :pom_435.
:pom_435 a rr:PredicateObjectMap;
    rr:predicateMap :pm_435.
:pm_435 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#str>.
:pom_435 rr:objectMap :om_433.
:om_433 a rr:ObjectMap;
    rr:constant "true";
    rr:termType rr:Literal.
:pom_436 a rr:PredicateObjectMap.
:map_energy-meter-installed_000 rr:predicateObjectMap :pom_436.
:pm_436 a rr:PredicateMap.
:pom_436 rr:predicateMap :pm_436.
:pm_436 rr:constant era:energyMeterInstalled.
:pom_436 rr:objectMap :om_434.
:om_434 a fnml:FunctionTermMap;
    rr:termType rr:Literal;
    rr:datatype xsd:boolean;
    fnml:functionValue :fn_150.
:fn_150 rml:logicalSource :source_083;
    rr:predicateObjectMap :pomexec_150.
:pomexec_150 rr:predicateMap :pmexec_150.
:pmexec_150 rr:constant fno:executes.
:pomexec_150 rr:objectMap :omexec_150.
:omexec_150 rr:constant "https://w3id.org/imec/idlab/function#trueCondition";
    rr:termType rr:IRI.
:fn_150 rr:predicateObjectMap :pom_437.
:pom_437 a rr:PredicateObjectMap;
    rr:predicateMap :pm_437.
:pm_437 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#strBoolean>.
:pom_437 rr:objectMap :om_435.
:om_435 a rr:ObjectMap, fnml:FunctionTermMap;
    fnml:functionValue :fn_151.
:fn_151 rml:logicalSource :source_083;
    rr:predicateObjectMap :pomexec_151.
:pomexec_151 rr:predicateMap :pmexec_151.
:pmexec_151 rr:constant fno:executes.
:pomexec_151 rr:objectMap :omexec_151.
:omexec_151 rr:constant "http://example.com/idlab/function/equal";
    rr:termType rr:IRI.
:fn_151 rr:predicateObjectMap :pom_438.
:pom_438 a rr:PredicateObjectMap;
    rr:predicateMap :pm_438.
:pm_438 a rr:PredicateMap;
    rr:constant grel:valueParameter.
:pom_438 rr:objectMap :om_436.
:om_436 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal.
:fn_151 rr:predicateObjectMap :pom_439.
:pom_439 a rr:PredicateObjectMap;
    rr:predicateMap :pm_439.
:pm_439 a rr:PredicateMap;
    rr:constant grel:valueParameter2.
:pom_439 rr:objectMap :om_437.
:om_437 a rr:ObjectMap;
    rr:constant "False";
    rr:termType rr:Literal.
:fn_150 rr:predicateObjectMap :pom_440.
:pom_440 a rr:PredicateObjectMap;
    rr:predicateMap :pm_440.
:pm_440 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#str>.
:pom_440 rr:objectMap :om_438.
:om_438 a rr:ObjectMap;
    rr:constant "false";
    rr:termType rr:Literal.
:rules_000 void:exampleResource :map_current-limitation_000.
:map_current-limitation_000 rml:logicalSource :source_084.
:source_084 a rml:LogicalSource;
    rml:source :database_083;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.10.14')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_083 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_084 rml:referenceFormulation ql:CSV.
:map_current-limitation_000 a rr:TriplesMap;
    rdfs:label "current-limitation".
:s_084 a rr:SubjectMap.
:map_current-limitation_000 rr:subjectMap :s_084.
:s_084 rr:template "http://data.europa.eu/949/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_083.
:gm_083 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_441 a rr:PredicateObjectMap.
:map_current-limitation_000 rr:predicateObjectMap :pom_441.
:pm_441 a rr:PredicateMap.
:pom_441 rr:predicateMap :pm_441.
:pm_441 rr:constant era:hasCurrentLimitation.
:pom_441 rr:objectMap :om_439.
:om_439 a fnml:FunctionTermMap;
    rr:termType rr:Literal;
    rr:datatype xsd:boolean;
    fnml:functionValue :fn_152.
:fn_152 rml:logicalSource :source_084;
    rr:predicateObjectMap :pomexec_152.
:pomexec_152 rr:predicateMap :pmexec_152.
:pmexec_152 rr:constant fno:executes.
:pomexec_152 rr:objectMap :omexec_152.
:omexec_152 rr:constant "https://w3id.org/imec/idlab/function#trueCondition";
    rr:termType rr:IRI.
:fn_152 rr:predicateObjectMap :pom_442.
:pom_442 a rr:PredicateObjectMap;
    rr:predicateMap :pm_442.
:pm_442 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#strBoolean>.
:pom_442 rr:objectMap :om_440.
:om_440 a rr:ObjectMap, fnml:FunctionTermMap;
    fnml:functionValue :fn_153.
:fn_153 rml:logicalSource :source_084;
    rr:predicateObjectMap :pomexec_153.
:pomexec_153 rr:predicateMap :pmexec_153.
:pmexec_153 rr:constant fno:executes.
:pomexec_153 rr:objectMap :omexec_153.
:omexec_153 rr:constant "http://example.com/idlab/function/equal";
    rr:termType rr:IRI.
:fn_153 rr:predicateObjectMap :pom_443.
:pom_443 a rr:PredicateObjectMap;
    rr:predicateMap :pm_443.
:pm_443 a rr:PredicateMap;
    rr:constant grel:valueParameter.
:pom_443 rr:objectMap :om_441.
:om_441 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal.
:fn_153 rr:predicateObjectMap :pom_444.
:pom_444 a rr:PredicateObjectMap;
    rr:predicateMap :pm_444.
:pm_444 a rr:PredicateMap;
    rr:constant grel:valueParameter2.
:pom_444 rr:objectMap :om_442.
:om_442 a rr:ObjectMap;
    rr:constant "True";
    rr:termType rr:Literal.
:fn_152 rr:predicateObjectMap :pom_445.
:pom_445 a rr:PredicateObjectMap;
    rr:predicateMap :pm_445.
:pm_445 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#str>.
:pom_445 rr:objectMap :om_443.
:om_443 a rr:ObjectMap;
    rr:constant "true";
    rr:termType rr:Literal.
:pom_446 a rr:PredicateObjectMap.
:map_current-limitation_000 rr:predicateObjectMap :pom_446.
:pm_446 a rr:PredicateMap.
:pom_446 rr:predicateMap :pm_446.
:pm_446 rr:constant era:hasCurrentLimitation.
:pom_446 rr:objectMap :om_444.
:om_444 a fnml:FunctionTermMap;
    rr:termType rr:Literal;
    rr:datatype xsd:boolean;
    fnml:functionValue :fn_154.
:fn_154 rml:logicalSource :source_084;
    rr:predicateObjectMap :pomexec_154.
:pomexec_154 rr:predicateMap :pmexec_154.
:pmexec_154 rr:constant fno:executes.
:pomexec_154 rr:objectMap :omexec_154.
:omexec_154 rr:constant "https://w3id.org/imec/idlab/function#trueCondition";
    rr:termType rr:IRI.
:fn_154 rr:predicateObjectMap :pom_447.
:pom_447 a rr:PredicateObjectMap;
    rr:predicateMap :pm_447.
:pm_447 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#strBoolean>.
:pom_447 rr:objectMap :om_445.
:om_445 a rr:ObjectMap, fnml:FunctionTermMap;
    fnml:functionValue :fn_155.
:fn_155 rml:logicalSource :source_084;
    rr:predicateObjectMap :pomexec_155.
:pomexec_155 rr:predicateMap :pmexec_155.
:pmexec_155 rr:constant fno:executes.
:pomexec_155 rr:objectMap :omexec_155.
:omexec_155 rr:constant "http://example.com/idlab/function/equal";
    rr:termType rr:IRI.
:fn_155 rr:predicateObjectMap :pom_448.
:pom_448 a rr:PredicateObjectMap;
    rr:predicateMap :pm_448.
:pm_448 a rr:PredicateMap;
    rr:constant grel:valueParameter.
:pom_448 rr:objectMap :om_446.
:om_446 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal.
:fn_155 rr:predicateObjectMap :pom_449.
:pom_449 a rr:PredicateObjectMap;
    rr:predicateMap :pm_449.
:pm_449 a rr:PredicateMap;
    rr:constant grel:valueParameter2.
:pom_449 rr:objectMap :om_447.
:om_447 a rr:ObjectMap;
    rr:constant "False";
    rr:termType rr:Literal.
:fn_154 rr:predicateObjectMap :pom_450.
:pom_450 a rr:PredicateObjectMap;
    rr:predicateMap :pm_450.
:pm_450 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#str>.
:pom_450 rr:objectMap :om_448.
:om_448 a rr:ObjectMap;
    rr:constant "false";
    rr:termType rr:Literal.
:rules_000 void:exampleResource :map_contact-force_000.
:map_contact-force_000 rml:logicalSource :source_085.
:source_085 a rml:LogicalSource;
    rml:source :database_084;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.10.15')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_084 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_085 rml:referenceFormulation ql:CSV.
:map_contact-force_000 a rr:TriplesMap;
    rdfs:label "contact-force".
:s_085 a rr:SubjectMap.
:map_contact-force_000 rr:subjectMap :s_085.
:s_085 rr:template "http://data.europa.eu/949/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_084.
:gm_084 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_451 a rr:PredicateObjectMap.
:map_contact-force_000 rr:predicateObjectMap :pom_451.
:pm_451 a rr:PredicateMap.
:pom_451 rr:predicateMap :pm_451.
:pm_451 rr:constant era:vehicleContactForce.
:pom_451 rr:objectMap :om_449.
:om_449 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal;
    rr:datatype xsd:integer.
:rules_000 void:exampleResource :map_pass-by-noise-level_000.
:map_pass-by-noise-level_000 rml:logicalSource :source_086.
:source_086 a rml:LogicalSource;
    rml:source :database_085;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.11.1')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_085 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_086 rml:referenceFormulation ql:CSV.
:map_pass-by-noise-level_000 a rr:TriplesMap;
    rdfs:label "pass-by-noise-level".
:s_086 a rr:SubjectMap.
:map_pass-by-noise-level_000 rr:subjectMap :s_086.
:s_086 rr:template "http://data.europa.eu/949/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_085.
:gm_085 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_452 a rr:PredicateObjectMap.
:map_pass-by-noise-level_000 rr:predicateObjectMap :pom_452.
:pm_452 a rr:PredicateMap.
:pom_452 rr:predicateMap :pm_452.
:pm_452 rr:constant era:passByNoiseLevel.
:pom_452 rr:objectMap :om_450.
:om_450 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal;
    rr:datatype xsd:double.
:rules_000 void:exampleResource :map_reference-pass-by-noise-level_000.
:map_reference-pass-by-noise-level_000 rml:logicalSource :source_087.
:source_087 a rml:LogicalSource;
    rml:source :database_086;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.11.2')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_086 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_087 rml:referenceFormulation ql:CSV.
:map_reference-pass-by-noise-level_000 a rr:TriplesMap;
    rdfs:label "reference-pass-by-noise-level".
:s_087 a rr:SubjectMap.
:map_reference-pass-by-noise-level_000 rr:subjectMap :s_087.
:s_087 rr:template "http://data.europa.eu/949/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_086.
:gm_086 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_453 a rr:PredicateObjectMap.
:map_reference-pass-by-noise-level_000 rr:predicateObjectMap :pom_453.
:pm_453 a rr:PredicateMap.
:pom_453 rr:predicateMap :pm_453.
:pm_453 rr:constant era:referencePassByNoiseLevel.
:pom_453 rr:objectMap :om_451.
:om_451 a fnml:FunctionTermMap;
    rr:termType rr:Literal;
    rr:datatype xsd:boolean;
    fnml:functionValue :fn_156.
:fn_156 rml:logicalSource :source_087;
    rr:predicateObjectMap :pomexec_156.
:pomexec_156 rr:predicateMap :pmexec_156.
:pmexec_156 rr:constant fno:executes.
:pomexec_156 rr:objectMap :omexec_156.
:omexec_156 rr:constant "https://w3id.org/imec/idlab/function#trueCondition";
    rr:termType rr:IRI.
:fn_156 rr:predicateObjectMap :pom_454.
:pom_454 a rr:PredicateObjectMap;
    rr:predicateMap :pm_454.
:pm_454 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#strBoolean>.
:pom_454 rr:objectMap :om_452.
:om_452 a rr:ObjectMap, fnml:FunctionTermMap;
    fnml:functionValue :fn_157.
:fn_157 rml:logicalSource :source_087;
    rr:predicateObjectMap :pomexec_157.
:pomexec_157 rr:predicateMap :pmexec_157.
:pmexec_157 rr:constant fno:executes.
:pomexec_157 rr:objectMap :omexec_157.
:omexec_157 rr:constant "http://example.com/idlab/function/equal";
    rr:termType rr:IRI.
:fn_157 rr:predicateObjectMap :pom_455.
:pom_455 a rr:PredicateObjectMap;
    rr:predicateMap :pm_455.
:pm_455 a rr:PredicateMap;
    rr:constant grel:valueParameter.
:pom_455 rr:objectMap :om_453.
:om_453 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal.
:fn_157 rr:predicateObjectMap :pom_456.
:pom_456 a rr:PredicateObjectMap;
    rr:predicateMap :pm_456.
:pm_456 a rr:PredicateMap;
    rr:constant grel:valueParameter2.
:pom_456 rr:objectMap :om_454.
:om_454 a rr:ObjectMap;
    rr:constant "True";
    rr:termType rr:Literal.
:fn_156 rr:predicateObjectMap :pom_457.
:pom_457 a rr:PredicateObjectMap;
    rr:predicateMap :pm_457.
:pm_457 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#str>.
:pom_457 rr:objectMap :om_455.
:om_455 a rr:ObjectMap;
    rr:constant "true";
    rr:termType rr:Literal.
:pom_458 a rr:PredicateObjectMap.
:map_reference-pass-by-noise-level_000 rr:predicateObjectMap :pom_458.
:pm_458 a rr:PredicateMap.
:pom_458 rr:predicateMap :pm_458.
:pm_458 rr:constant era:referencePassByNoiseLevel.
:pom_458 rr:objectMap :om_456.
:om_456 a fnml:FunctionTermMap;
    rr:termType rr:Literal;
    rr:datatype xsd:boolean;
    fnml:functionValue :fn_158.
:fn_158 rml:logicalSource :source_087;
    rr:predicateObjectMap :pomexec_158.
:pomexec_158 rr:predicateMap :pmexec_158.
:pmexec_158 rr:constant fno:executes.
:pomexec_158 rr:objectMap :omexec_158.
:omexec_158 rr:constant "https://w3id.org/imec/idlab/function#trueCondition";
    rr:termType rr:IRI.
:fn_158 rr:predicateObjectMap :pom_459.
:pom_459 a rr:PredicateObjectMap;
    rr:predicateMap :pm_459.
:pm_459 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#strBoolean>.
:pom_459 rr:objectMap :om_457.
:om_457 a rr:ObjectMap, fnml:FunctionTermMap;
    fnml:functionValue :fn_159.
:fn_159 rml:logicalSource :source_087;
    rr:predicateObjectMap :pomexec_159.
:pomexec_159 rr:predicateMap :pmexec_159.
:pmexec_159 rr:constant fno:executes.
:pomexec_159 rr:objectMap :omexec_159.
:omexec_159 rr:constant "http://example.com/idlab/function/equal";
    rr:termType rr:IRI.
:fn_159 rr:predicateObjectMap :pom_460.
:pom_460 a rr:PredicateObjectMap;
    rr:predicateMap :pm_460.
:pm_460 a rr:PredicateMap;
    rr:constant grel:valueParameter.
:pom_460 rr:objectMap :om_458.
:om_458 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal.
:fn_159 rr:predicateObjectMap :pom_461.
:pom_461 a rr:PredicateObjectMap;
    rr:predicateMap :pm_461.
:pm_461 a rr:PredicateMap;
    rr:constant grel:valueParameter2.
:pom_461 rr:objectMap :om_459.
:om_459 a rr:ObjectMap;
    rr:constant "False";
    rr:termType rr:Literal.
:fn_158 rr:predicateObjectMap :pom_462.
:pom_462 a rr:PredicateObjectMap;
    rr:predicateMap :pm_462.
:pm_462 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#str>.
:pom_462 rr:objectMap :om_460.
:om_460 a rr:ObjectMap;
    rr:constant "false";
    rr:termType rr:Literal.
:rules_000 void:exampleResource :map_stationary-noise-level_000.
:map_stationary-noise-level_000 rml:logicalSource :source_088.
:source_088 a rml:LogicalSource;
    rml:source :database_087;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.11.3')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_087 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_088 rml:referenceFormulation ql:CSV.
:map_stationary-noise-level_000 a rr:TriplesMap;
    rdfs:label "stationary-noise-level".
:s_088 a rr:SubjectMap.
:map_stationary-noise-level_000 rr:subjectMap :s_088.
:s_088 rr:template "http://data.europa.eu/949/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_087.
:gm_087 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_463 a rr:PredicateObjectMap.
:map_stationary-noise-level_000 rr:predicateObjectMap :pom_463.
:pm_463 a rr:PredicateMap.
:pom_463 rr:predicateMap :pm_463.
:pm_463 rr:constant era:stationaryNoiseLevel.
:pom_463 rr:objectMap :om_461.
:om_461 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal;
    rr:datatype xsd:double.
:rules_000 void:exampleResource :map_starting-noise-level_000.
:map_starting-noise-level_000 rml:logicalSource :source_089.
:source_089 a rml:LogicalSource;
    rml:source :database_088;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.11.4')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_088 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_089 rml:referenceFormulation ql:CSV.
:map_starting-noise-level_000 a rr:TriplesMap;
    rdfs:label "starting-noise-level".
:s_089 a rr:SubjectMap.
:map_starting-noise-level_000 rr:subjectMap :s_089.
:s_089 rr:template "http://data.europa.eu/949/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_088.
:gm_088 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_464 a rr:PredicateObjectMap.
:map_starting-noise-level_000 rr:predicateObjectMap :pom_464.
:pm_464 a rr:PredicateMap.
:pom_464 rr:predicateMap :pm_464.
:pm_464 rr:constant era:startingNoiseLevel.
:pom_464 rr:objectMap :om_462.
:om_462 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal;
    rr:datatype xsd:double.
:rules_000 void:exampleResource :map_fixed-seats_000.
:map_fixed-seats_000 rml:logicalSource :source_090.
:source_090 a rml:LogicalSource;
    rml:source :database_089;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.12.1.1')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_089 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_090 rml:referenceFormulation ql:CSV.
:map_fixed-seats_000 a rr:TriplesMap;
    rdfs:label "fixed-seats".
:s_090 a rr:SubjectMap.
:map_fixed-seats_000 rr:subjectMap :s_090.
:s_090 rr:template "http://data.europa.eu/949/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_089.
:gm_089 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_465 a rr:PredicateObjectMap.
:map_fixed-seats_000 rr:predicateObjectMap :pom_465.
:pm_465 a rr:PredicateMap.
:pom_465 rr:predicateMap :pm_465.
:pm_465 rr:constant era:fixedSeats.
:pom_465 rr:objectMap :om_463.
:om_463 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal.
:rules_000 void:exampleResource :map_number-of-toilets_000.
:map_number-of-toilets_000 rml:logicalSource :source_091.
:source_091 a rml:LogicalSource;
    rml:source :database_090;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.12.1.2')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_090 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_091 rml:referenceFormulation ql:CSV.
:map_number-of-toilets_000 a rr:TriplesMap;
    rdfs:label "number-of-toilets".
:s_091 a rr:SubjectMap.
:map_number-of-toilets_000 rr:subjectMap :s_091.
:s_091 rr:template "http://data.europa.eu/949/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_090.
:gm_090 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_466 a rr:PredicateObjectMap.
:map_number-of-toilets_000 rr:predicateObjectMap :pom_466.
:pm_466 a rr:PredicateMap.
:pom_466 rr:predicateMap :pm_466.
:pm_466 rr:constant era:numberOfToilets.
:pom_466 rr:objectMap :om_464.
:om_464 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal;
    rr:datatype xsd:integer.
:rules_000 void:exampleResource :map_sleeping-places_000.
:map_sleeping-places_000 rml:logicalSource :source_092.
:source_092 a rml:LogicalSource;
    rml:source :database_091;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.12.1.3')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_091 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_092 rml:referenceFormulation ql:CSV.
:map_sleeping-places_000 a rr:TriplesMap;
    rdfs:label "sleeping-places".
:s_092 a rr:SubjectMap.
:map_sleeping-places_000 rr:subjectMap :s_092.
:s_092 rr:template "http://data.europa.eu/949/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_091.
:gm_091 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_467 a rr:PredicateObjectMap.
:map_sleeping-places_000 rr:predicateObjectMap :pom_467.
:pm_467 a rr:PredicateMap.
:pom_467 rr:predicateMap :pm_467.
:pm_467 rr:constant era:sleepingPlaces.
:pom_467 rr:objectMap :om_465.
:om_465 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal.
:rules_000 void:exampleResource :map_priority-seats_000.
:map_priority-seats_000 rml:logicalSource :source_093.
:source_093 a rml:LogicalSource;
    rml:source :database_092;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.12.2.1')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_092 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_093 rml:referenceFormulation ql:CSV.
:map_priority-seats_000 a rr:TriplesMap;
    rdfs:label "priority-seats".
:s_093 a rr:SubjectMap.
:map_priority-seats_000 rr:subjectMap :s_093.
:s_093 rr:template "http://data.europa.eu/949/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_092.
:gm_092 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_468 a rr:PredicateObjectMap.
:map_priority-seats_000 rr:predicateObjectMap :pom_468.
:pm_468 a rr:PredicateMap.
:pom_468 rr:predicateMap :pm_468.
:pm_468 rr:constant era:prioritySeats.
:pom_468 rr:objectMap :om_466.
:om_466 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal.
:rules_000 void:exampleResource :map_wheelchair-spaces_000.
:map_wheelchair-spaces_000 rml:logicalSource :source_094.
:source_094 a rml:LogicalSource;
    rml:source :database_093;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.12.2.2')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_093 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_094 rml:referenceFormulation ql:CSV.
:map_wheelchair-spaces_000 a rr:TriplesMap;
    rdfs:label "wheelchair-spaces".
:s_094 a rr:SubjectMap.
:map_wheelchair-spaces_000 rr:subjectMap :s_094.
:s_094 rr:template "http://data.europa.eu/949/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_093.
:gm_093 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_469 a rr:PredicateObjectMap.
:map_wheelchair-spaces_000 rr:predicateObjectMap :pom_469.
:pm_469 a rr:PredicateMap.
:pom_469 rr:predicateMap :pm_469.
:pm_469 rr:constant era:wheelchairSpaces.
:pom_469 rr:objectMap :om_467.
:om_467 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal.
:rules_000 void:exampleResource :map_prm-accessible-toilets_000.
:map_prm-accessible-toilets_000 rml:logicalSource :source_095.
:source_095 a rml:LogicalSource;
    rml:source :database_094;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.12.2.3')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_094 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_095 rml:referenceFormulation ql:CSV.
:map_prm-accessible-toilets_000 a rr:TriplesMap;
    rdfs:label "prm-accessible-toilets".
:s_095 a rr:SubjectMap.
:map_prm-accessible-toilets_000 rr:subjectMap :s_095.
:s_095 rr:template "http://data.europa.eu/949/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_094.
:gm_094 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_470 a rr:PredicateObjectMap.
:map_prm-accessible-toilets_000 rr:predicateObjectMap :pom_470.
:pm_470 a rr:PredicateMap.
:pom_470 rr:predicateMap :pm_470.
:pm_470 rr:constant era:prmAccessibleToilets.
:pom_470 rr:objectMap :om_468.
:om_468 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal;
    rr:datatype xsd:integer.
:rules_000 void:exampleResource :map_wheelchair-sleeping-places_000.
:map_wheelchair-sleeping-places_000 rml:logicalSource :source_096.
:source_096 a rml:LogicalSource;
    rml:source :database_095;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.12.2.4')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_095 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_096 rml:referenceFormulation ql:CSV.
:map_wheelchair-sleeping-places_000 a rr:TriplesMap;
    rdfs:label "wheelchair-sleeping-places".
:s_096 a rr:SubjectMap.
:map_wheelchair-sleeping-places_000 rr:subjectMap :s_096.
:s_096 rr:template "http://data.europa.eu/949/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_095.
:gm_095 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_471 a rr:PredicateObjectMap.
:map_wheelchair-sleeping-places_000 rr:predicateObjectMap :pom_471.
:pm_471 a rr:PredicateMap.
:pom_471 rr:predicateMap :pm_471.
:pm_471 rr:constant era:wheelchairSleepingPlaces.
:pom_471 rr:objectMap :om_469.
:om_469 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal.
:rules_000 void:exampleResource :map_platform-height_000.
:map_platform-height_000 rml:logicalSource :source_097.
:source_097 a rml:LogicalSource;
    rml:source :database_096;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, SUBSTRING(LTRIM(RTRIM(((SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)))), 1, 3) AS ParameterValue, REPLACE(RegistrationParameters.OtherValue, ' ', '_') AS OtherURI FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.12.3.1')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_096 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_097 rml:referenceFormulation ql:CSV.
:map_platform-height_000 a rr:TriplesMap;
    rdfs:label "platform-height".
:s_097 a rr:SubjectMap.
:map_platform-height_000 rr:subjectMap :s_097.
:s_097 rr:template "http://data.europa.eu/949/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_096.
:gm_096 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_472 a rr:PredicateObjectMap.
:map_platform-height_000 rr:predicateObjectMap :pom_472.
:pm_472 a rr:PredicateMap.
:pom_472 rr:predicateMap :pm_472.
:pm_472 rr:constant era:supportedPlatformHeight.
:pom_472 rr:objectMap :om_470.
:om_470 a fnml:FunctionTermMap;
    rr:termType rr:IRI;
    fnml:functionValue :fn_160.
:fn_160 rml:logicalSource :source_097;
    rr:predicateObjectMap :pomexec_160.
:pomexec_160 rr:predicateMap :pmexec_160.
:pmexec_160 rr:constant fno:executes.
:pomexec_160 rr:objectMap :omexec_160.
:omexec_160 rr:constant "https://w3id.org/imec/idlab/function#trueCondition";
    rr:termType rr:IRI.
:fn_160 rr:predicateObjectMap :pom_473.
:pom_473 a rr:PredicateObjectMap;
    rr:predicateMap :pm_473.
:pm_473 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#strBoolean>.
:pom_473 rr:objectMap :om_471.
:om_471 a rr:ObjectMap, fnml:FunctionTermMap;
    fnml:functionValue :fn_161.
:fn_161 rml:logicalSource :source_097;
    rr:predicateObjectMap :pomexec_161.
:pomexec_161 rr:predicateMap :pmexec_161.
:pmexec_161 rr:constant fno:executes.
:pomexec_161 rr:objectMap :omexec_161.
:omexec_161 rr:constant "http://example.com/idlab/function/equal";
    rr:termType rr:IRI.
:fn_161 rr:predicateObjectMap :pom_474.
:pom_474 a rr:PredicateObjectMap;
    rr:predicateMap :pm_474.
:pm_474 a rr:PredicateMap;
    rr:constant grel:valueParameter.
:pom_474 rr:objectMap :om_472.
:om_472 a rr:ObjectMap;
    rml:reference "OtherURI";
    rr:termType rr:Literal.
:fn_161 rr:predicateObjectMap :pom_475.
:pom_475 a rr:PredicateObjectMap;
    rr:predicateMap :pm_475.
:pm_475 a rr:PredicateMap;
    rr:constant grel:valueParameter2.
:pom_475 rr:objectMap :om_473.
:om_473 a rr:ObjectMap;
    rr:constant "";
    rr:termType rr:Literal.
:fn_160 rr:predicateObjectMap :pom_476.
:pom_476 a rr:PredicateObjectMap;
    rr:predicateMap :pm_476.
:pm_476 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#str>.
:pom_476 rr:objectMap :om_474.
:om_474 a rr:ObjectMap;
    rr:template "http://data.europa.eu/949/concepts/platform-heights/{ParameterValue}";
    rr:termType rr:IRI.
:pom_477 a rr:PredicateObjectMap.
:map_platform-height_000 rr:predicateObjectMap :pom_477.
:pm_477 a rr:PredicateMap.
:pom_477 rr:predicateMap :pm_477.
:pm_477 rr:constant era:supportedPlatformHeight.
:pom_477 rr:objectMap :om_475.
:om_475 a fnml:FunctionTermMap;
    rr:termType rr:IRI;
    fnml:functionValue :fn_162.
:fn_162 rml:logicalSource :source_097;
    rr:predicateObjectMap :pomexec_162.
:pomexec_162 rr:predicateMap :pmexec_162.
:pmexec_162 rr:constant fno:executes.
:pomexec_162 rr:objectMap :omexec_162.
:omexec_162 rr:constant "https://w3id.org/imec/idlab/function#trueCondition";
    rr:termType rr:IRI.
:fn_162 rr:predicateObjectMap :pom_478.
:pom_478 a rr:PredicateObjectMap;
    rr:predicateMap :pm_478.
:pm_478 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#strBoolean>.
:pom_478 rr:objectMap :om_476.
:om_476 a rr:ObjectMap, fnml:FunctionTermMap;
    fnml:functionValue :fn_163.
:fn_163 rml:logicalSource :source_097;
    rr:predicateObjectMap :pomexec_163.
:pomexec_163 rr:predicateMap :pmexec_163.
:pmexec_163 rr:constant fno:executes.
:pomexec_163 rr:objectMap :omexec_163.
:omexec_163 rr:constant "http://example.com/idlab/function/notEqual";
    rr:termType rr:IRI.
:fn_163 rr:predicateObjectMap :pom_479.
:pom_479 a rr:PredicateObjectMap;
    rr:predicateMap :pm_479.
:pm_479 a rr:PredicateMap;
    rr:constant grel:valueParameter.
:pom_479 rr:objectMap :om_477.
:om_477 a rr:ObjectMap;
    rml:reference "OtherURI";
    rr:termType rr:Literal.
:fn_163 rr:predicateObjectMap :pom_480.
:pom_480 a rr:PredicateObjectMap;
    rr:predicateMap :pm_480.
:pm_480 a rr:PredicateMap;
    rr:constant grel:valueParameter2.
:pom_480 rr:objectMap :om_478.
:om_478 a rr:ObjectMap;
    rr:constant "";
    rr:termType rr:Literal.
:fn_162 rr:predicateObjectMap :pom_481.
:pom_481 a rr:PredicateObjectMap;
    rr:predicateMap :pm_481.
:pm_481 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#str>.
:pom_481 rr:objectMap :om_479.
:om_479 a rr:ObjectMap;
    rr:template "http://data.europa.eu/949/concepts/platform-heights/{OtherURI}";
    rr:termType rr:IRI.
:rules_000 void:exampleResource :map_boarding-aids_000.
:map_boarding-aids_000 rml:logicalSource :source_098.
:source_098 a rml:LogicalSource;
    rml:source :database_097;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.12.3.2')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_097 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_098 rml:referenceFormulation ql:CSV.
:map_boarding-aids_000 a rr:TriplesMap;
    rdfs:label "boarding-aids".
:s_098 a rr:SubjectMap.
:map_boarding-aids_000 rr:subjectMap :s_098.
:s_098 rr:template "http://data.europa.eu/949/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_097.
:gm_097 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_482 a rr:PredicateObjectMap.
:map_boarding-aids_000 rr:predicateObjectMap :pom_482.
:pm_482 a rr:PredicateMap.
:pom_482 rr:predicateMap :pm_482.
:pm_482 rr:constant era:boardingAids.
:pom_482 rr:objectMap :om_480.
:om_480 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal.
:rules_000 void:exampleResource :map_portable-boarding-aids_000.
:map_portable-boarding-aids_000 rml:logicalSource :source_099.
:source_099 a rml:LogicalSource;
    rml:source :database_098;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.12.3.3')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_098 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_099 rml:referenceFormulation ql:CSV.
:map_portable-boarding-aids_000 a rr:TriplesMap;
    rdfs:label "portable-boarding-aids".
:s_099 a rr:SubjectMap.
:map_portable-boarding-aids_000 rr:subjectMap :s_099.
:s_099 rr:template "http://data.europa.eu/949/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_098.
:gm_098 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_483 a rr:PredicateObjectMap.
:map_portable-boarding-aids_000 rr:predicateObjectMap :pom_483.
:pm_483 a rr:PredicateMap.
:pom_483 rr:predicateMap :pm_483.
:pm_483 rr:constant era:portableBoardingAids.
:pom_483 rr:objectMap :om_481.
:om_481 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal.
:rules_000 void:exampleResource :map_etcs-equipment-on-board-level_000.
:map_etcs-equipment-on-board-level_000 rml:logicalSource :source_100.
:source_100 a rml:LogicalSource;
    rml:source :database_099;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, REPLACE((SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId), ' ', '_') AS ParameterURI FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.13.1.1')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_099 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_100 rml:referenceFormulation ql:CSV.
:map_etcs-equipment-on-board-level_000 a rr:TriplesMap;
    rdfs:label "etcs-equipment-on-board-level".
:s_100 a rr:SubjectMap.
:map_etcs-equipment-on-board-level_000 rr:subjectMap :s_100.
:s_100 rr:template "http://era.europa.eu/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_099.
:gm_099 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_484 a rr:PredicateObjectMap.
:map_etcs-equipment-on-board-level_000 rr:predicateObjectMap :pom_484.
:pm_484 a rr:PredicateMap.
:pom_484 rr:predicateMap :pm_484.
:pm_484 rr:constant era:etcsEquipmentOnBoardLevel.
:pom_484 rr:objectMap :om_482.
:om_482 a rr:ObjectMap;
    rr:template "http://data.europa.eu/949/concepts/etcs-equipment-on-board-level/{ParameterURI}";
    rr:termType rr:IRI.
:rules_000 void:exampleResource :map_etcs-baseline_000.
:map_etcs-baseline_000 rml:logicalSource :source_101.
:source_101 a rml:LogicalSource;
    rml:source :database_100;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, (SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.13.1.2')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_100 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_101 rml:referenceFormulation ql:CSV.
:map_etcs-baseline_000 a rr:TriplesMap;
    rdfs:label "etcs-baseline".
:s_101 a rr:SubjectMap.
:map_etcs-baseline_000 rr:subjectMap :s_101.
:s_101 rr:template "http://era.europa.eu/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_100.
:gm_100 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_485 a rr:PredicateObjectMap.
:map_etcs-baseline_000 rr:predicateObjectMap :pom_485.
:pm_485 a rr:PredicateMap.
:pom_485 rr:predicateMap :pm_485.
:pm_485 rr:constant era:etcsBaseline.
:pom_485 rr:objectMap :om_483.
:om_483 a rr:ObjectMap;
    rr:template "http://data.europa.eu/949/concepts/etcs-baselines/{ParameterValue}";
    rr:termType rr:IRI.
:rules_000 void:exampleResource :map_etcs-reception-infill_000.
:map_etcs-reception-infill_000 rml:logicalSource :source_102.
:source_102 a rml:LogicalSource;
    rml:source :database_101;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, (SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.13.1.3')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_101 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_102 rml:referenceFormulation ql:CSV.
:map_etcs-reception-infill_000 a rr:TriplesMap;
    rdfs:label "etcs-reception-infill".
:s_102 a rr:SubjectMap.
:map_etcs-reception-infill_000 rr:subjectMap :s_102.
:s_102 rr:template "http://era.europa.eu/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_101.
:gm_101 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_486 a rr:PredicateObjectMap.
:map_etcs-reception-infill_000 rr:predicateObjectMap :pom_486.
:pm_486 a rr:PredicateMap.
:pom_486 rr:predicateMap :pm_486.
:pm_486 rr:constant era:etcsInfill.
:pom_486 rr:objectMap :om_484.
:om_484 a rr:ObjectMap;
    rr:template "http://data.europa.eu/949/concepts/etcs-infills/{ParameterValue}";
    rr:termType rr:IRI.
:rules_000 void:exampleResource :map_etcs-national-applications_000.
:map_etcs-national-applications_000 rml:logicalSource :source_103.
:source_103 a rml:LogicalSource;
    rml:source :database_102;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, (SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.13.1.4')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_102 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_103 rml:referenceFormulation ql:CSV.
:map_etcs-national-applications_000 a rr:TriplesMap;
    rdfs:label "etcs-national-applications".
:s_103 a rr:SubjectMap.
:map_etcs-national-applications_000 rr:subjectMap :s_103.
:s_103 rr:template "http://era.europa.eu/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_102.
:gm_102 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_487 a rr:PredicateObjectMap.
:map_etcs-national-applications_000 rr:predicateObjectMap :pom_487.
:pm_487 a rr:PredicateMap.
:pom_487 rr:predicateMap :pm_487.
:pm_487 rr:constant era:etcsNationalApplications.
:pom_487 rr:objectMap :om_485.
:om_485 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal.
:rules_000 void:exampleResource :map_protection-legacy-system_000.
:map_protection-legacy-system_000 rml:logicalSource :source_104.
:source_104 a rml:LogicalSource;
    rml:source :database_103;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, REPLACE((SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId), ' ', '_') AS ParameterURI, REPLACE(RegistrationParameters.OtherValue, ' ', '_') AS OtherURI FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.13.1.5')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_103 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_104 rml:referenceFormulation ql:CSV.
:map_protection-legacy-system_000 a rr:TriplesMap;
    rdfs:label "protection-legacy-system".
:s_104 a rr:SubjectMap.
:map_protection-legacy-system_000 rr:subjectMap :s_104.
:s_104 rr:template "http://data.europa.eu/949/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_103.
:gm_103 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_488 a rr:PredicateObjectMap.
:map_protection-legacy-system_000 rr:predicateObjectMap :pom_488.
:pm_488 a rr:PredicateMap.
:pom_488 rr:predicateMap :pm_488.
:pm_488 rr:constant era:protectionLegacySystem.
:pom_488 rr:objectMap :om_486.
:om_486 a fnml:FunctionTermMap;
    rr:termType rr:IRI;
    fnml:functionValue :fn_164.
:fn_164 rml:logicalSource :source_104;
    rr:predicateObjectMap :pomexec_164.
:pomexec_164 rr:predicateMap :pmexec_164.
:pmexec_164 rr:constant fno:executes.
:pomexec_164 rr:objectMap :omexec_164.
:omexec_164 rr:constant "https://w3id.org/imec/idlab/function#trueCondition";
    rr:termType rr:IRI.
:fn_164 rr:predicateObjectMap :pom_489.
:pom_489 a rr:PredicateObjectMap;
    rr:predicateMap :pm_489.
:pm_489 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#strBoolean>.
:pom_489 rr:objectMap :om_487.
:om_487 a rr:ObjectMap, fnml:FunctionTermMap;
    fnml:functionValue :fn_165.
:fn_165 rml:logicalSource :source_104;
    rr:predicateObjectMap :pomexec_165.
:pomexec_165 rr:predicateMap :pmexec_165.
:pmexec_165 rr:constant fno:executes.
:pomexec_165 rr:objectMap :omexec_165.
:omexec_165 rr:constant "http://example.com/idlab/function/equal";
    rr:termType rr:IRI.
:fn_165 rr:predicateObjectMap :pom_490.
:pom_490 a rr:PredicateObjectMap;
    rr:predicateMap :pm_490.
:pm_490 a rr:PredicateMap;
    rr:constant grel:valueParameter.
:pom_490 rr:objectMap :om_488.
:om_488 a rr:ObjectMap;
    rml:reference "OtherURI";
    rr:termType rr:Literal.
:fn_165 rr:predicateObjectMap :pom_491.
:pom_491 a rr:PredicateObjectMap;
    rr:predicateMap :pm_491.
:pm_491 a rr:PredicateMap;
    rr:constant grel:valueParameter2.
:pom_491 rr:objectMap :om_489.
:om_489 a rr:ObjectMap;
    rr:constant "";
    rr:termType rr:Literal.
:fn_164 rr:predicateObjectMap :pom_492.
:pom_492 a rr:PredicateObjectMap;
    rr:predicateMap :pm_492.
:pm_492 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#str>.
:pom_492 rr:objectMap :om_490.
:om_490 a rr:ObjectMap;
    rr:template "http://data.europa.eu/949/concepts/train-protection-legacy-systems/{ParameterURI}";
    rr:termType rr:IRI.
:pom_493 a rr:PredicateObjectMap.
:map_protection-legacy-system_000 rr:predicateObjectMap :pom_493.
:pm_493 a rr:PredicateMap.
:pom_493 rr:predicateMap :pm_493.
:pm_493 rr:constant era:protectionLegacySystem.
:pom_493 rr:objectMap :om_491.
:om_491 a fnml:FunctionTermMap;
    rr:termType rr:IRI;
    fnml:functionValue :fn_166.
:fn_166 rml:logicalSource :source_104;
    rr:predicateObjectMap :pomexec_166.
:pomexec_166 rr:predicateMap :pmexec_166.
:pmexec_166 rr:constant fno:executes.
:pomexec_166 rr:objectMap :omexec_166.
:omexec_166 rr:constant "https://w3id.org/imec/idlab/function#trueCondition";
    rr:termType rr:IRI.
:fn_166 rr:predicateObjectMap :pom_494.
:pom_494 a rr:PredicateObjectMap;
    rr:predicateMap :pm_494.
:pm_494 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#strBoolean>.
:pom_494 rr:objectMap :om_492.
:om_492 a rr:ObjectMap, fnml:FunctionTermMap;
    fnml:functionValue :fn_167.
:fn_167 rml:logicalSource :source_104;
    rr:predicateObjectMap :pomexec_167.
:pomexec_167 rr:predicateMap :pmexec_167.
:pmexec_167 rr:constant fno:executes.
:pomexec_167 rr:objectMap :omexec_167.
:omexec_167 rr:constant "http://example.com/idlab/function/notEqual";
    rr:termType rr:IRI.
:fn_167 rr:predicateObjectMap :pom_495.
:pom_495 a rr:PredicateObjectMap;
    rr:predicateMap :pm_495.
:pm_495 a rr:PredicateMap;
    rr:constant grel:valueParameter.
:pom_495 rr:objectMap :om_493.
:om_493 a rr:ObjectMap;
    rml:reference "OtherURI";
    rr:termType rr:Literal.
:fn_167 rr:predicateObjectMap :pom_496.
:pom_496 a rr:PredicateObjectMap;
    rr:predicateMap :pm_496.
:pm_496 a rr:PredicateMap;
    rr:constant grel:valueParameter2.
:pom_496 rr:objectMap :om_494.
:om_494 a rr:ObjectMap;
    rr:constant "";
    rr:termType rr:Literal.
:fn_166 rr:predicateObjectMap :pom_497.
:pom_497 a rr:PredicateObjectMap;
    rr:predicateMap :pm_497.
:pm_497 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#str>.
:pom_497 rr:objectMap :om_495.
:om_495 a rr:ObjectMap;
    rr:template "http://data.europa.eu/949/concepts/train-protection-legacy-systems/{OtherURI}";
    rr:termType rr:IRI.
:rules_000 void:exampleResource :map_train-control-switch-over-special-conditions_000.
:map_train-control-switch-over-special-conditions_000 rml:logicalSource :source_105.
:source_105 a rml:LogicalSource;
    rml:source :database_104;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.13.1.6')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_104 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_105 rml:referenceFormulation ql:CSV.
:map_train-control-switch-over-special-conditions_000 a rr:TriplesMap;
    rdfs:label "train-control-switch-over-special-conditions".
:s_105 a rr:SubjectMap.
:map_train-control-switch-over-special-conditions_000 rr:subjectMap :s_105.
:s_105 rr:template "http://era.europa.eu/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_104.
:gm_104 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_498 a rr:PredicateObjectMap.
:map_train-control-switch-over-special-conditions_000 rr:predicateObjectMap :pom_498.
:pm_498 a rr:PredicateMap.
:pom_498 rr:predicateMap :pm_498.
:pm_498 rr:constant era:trainControlSwitchOverSpecialConditions.
:pom_498 rr:objectMap :om_496.
:om_496 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal.
:rules_000 void:exampleResource :map_etcs-on-board-implementation_000.
:map_etcs-on-board-implementation_000 rml:logicalSource :source_106.
:source_106 a rml:LogicalSource;
    rml:source :database_105;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.13.1.7')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_105 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_106 rml:referenceFormulation ql:CSV.
:map_etcs-on-board-implementation_000 a rr:TriplesMap;
    rdfs:label "etcs-on-board-implementation".
:s_106 a rr:SubjectMap.
:map_etcs-on-board-implementation_000 rr:subjectMap :s_106.
:s_106 rr:template "http://era.europa.eu/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_105.
:gm_105 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_499 a rr:PredicateObjectMap.
:map_etcs-on-board-implementation_000 rr:predicateObjectMap :pom_499.
:pm_499 a rr:PredicateMap.
:pom_499 rr:predicateMap :pm_499.
:pm_499 rr:constant era:etcsOnBoardImplementation.
:pom_499 rr:objectMap :om_497.
:om_497 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal.
:rules_000 void:exampleResource :map_etcs-compatible_000.
:map_etcs-compatible_000 rml:logicalSource :source_107.
:source_107 a rml:LogicalSource;
    rml:source :database_106;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, REPLACE((SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId), ' ', '_') AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.13.1.8')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_106 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_107 rml:referenceFormulation ql:CSV.
:map_etcs-compatible_000 a rr:TriplesMap;
    rdfs:label "etcs-compatible".
:s_107 a rr:SubjectMap.
:map_etcs-compatible_000 rr:subjectMap :s_107.
:s_107 rr:template "http://data.europa.eu/949/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_106.
:gm_106 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_500 a rr:PredicateObjectMap.
:map_etcs-compatible_000 rr:predicateObjectMap :pom_500.
:pm_500 a rr:PredicateMap.
:pom_500 rr:predicateMap :pm_500.
:pm_500 rr:constant era:etcsSystemCompatibility.
:pom_500 rr:objectMap :om_498.
:om_498 a rr:ObjectMap;
    rr:template "http://data.europa.eu/949/concepts/etcs-system-compatibilities/{ParameterValue}";
    rr:termType rr:IRI.
:rules_000 void:exampleResource :map_train-integrity_000.
:map_train-integrity_000 rml:logicalSource :source_108.
:source_108 a rml:LogicalSource;
    rml:source :database_107;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.13.1.9')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_107 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_108 rml:referenceFormulation ql:CSV.
:map_train-integrity_000 a rr:TriplesMap;
    rdfs:label "train-integrity".
:s_108 a rr:SubjectMap.
:map_train-integrity_000 rr:subjectMap :s_108.
:s_108 rr:template "http://data.europa.eu/949/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_107.
:gm_107 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_501 a rr:PredicateObjectMap.
:map_train-integrity_000 rr:predicateObjectMap :pom_501.
:pm_501 a rr:PredicateMap.
:pom_501 rr:predicateMap :pm_501.
:pm_501 rr:constant era:hasTrainIntegrityConfirmation.
:pom_501 rr:objectMap :om_499.
:om_499 a fnml:FunctionTermMap;
    rr:termType rr:Literal;
    rr:datatype xsd:boolean;
    fnml:functionValue :fn_168.
:fn_168 rml:logicalSource :source_108;
    rr:predicateObjectMap :pomexec_168.
:pomexec_168 rr:predicateMap :pmexec_168.
:pmexec_168 rr:constant fno:executes.
:pomexec_168 rr:objectMap :omexec_168.
:omexec_168 rr:constant "https://w3id.org/imec/idlab/function#trueCondition";
    rr:termType rr:IRI.
:fn_168 rr:predicateObjectMap :pom_502.
:pom_502 a rr:PredicateObjectMap;
    rr:predicateMap :pm_502.
:pm_502 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#strBoolean>.
:pom_502 rr:objectMap :om_500.
:om_500 a rr:ObjectMap, fnml:FunctionTermMap;
    fnml:functionValue :fn_169.
:fn_169 rml:logicalSource :source_108;
    rr:predicateObjectMap :pomexec_169.
:pomexec_169 rr:predicateMap :pmexec_169.
:pmexec_169 rr:constant fno:executes.
:pomexec_169 rr:objectMap :omexec_169.
:omexec_169 rr:constant "http://example.com/idlab/function/equal";
    rr:termType rr:IRI.
:fn_169 rr:predicateObjectMap :pom_503.
:pom_503 a rr:PredicateObjectMap;
    rr:predicateMap :pm_503.
:pm_503 a rr:PredicateMap;
    rr:constant grel:valueParameter.
:pom_503 rr:objectMap :om_501.
:om_501 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal.
:fn_169 rr:predicateObjectMap :pom_504.
:pom_504 a rr:PredicateObjectMap;
    rr:predicateMap :pm_504.
:pm_504 a rr:PredicateMap;
    rr:constant grel:valueParameter2.
:pom_504 rr:objectMap :om_502.
:om_502 a rr:ObjectMap;
    rr:constant "True";
    rr:termType rr:Literal.
:fn_168 rr:predicateObjectMap :pom_505.
:pom_505 a rr:PredicateObjectMap;
    rr:predicateMap :pm_505.
:pm_505 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#str>.
:pom_505 rr:objectMap :om_503.
:om_503 a rr:ObjectMap;
    rr:constant "true";
    rr:termType rr:Literal.
:pom_506 a rr:PredicateObjectMap.
:map_train-integrity_000 rr:predicateObjectMap :pom_506.
:pm_506 a rr:PredicateMap.
:pom_506 rr:predicateMap :pm_506.
:pm_506 rr:constant era:hasTrainIntegrityConfirmation.
:pom_506 rr:objectMap :om_504.
:om_504 a fnml:FunctionTermMap;
    rr:termType rr:Literal;
    rr:datatype xsd:boolean;
    fnml:functionValue :fn_170.
:fn_170 rml:logicalSource :source_108;
    rr:predicateObjectMap :pomexec_170.
:pomexec_170 rr:predicateMap :pmexec_170.
:pmexec_170 rr:constant fno:executes.
:pomexec_170 rr:objectMap :omexec_170.
:omexec_170 rr:constant "https://w3id.org/imec/idlab/function#trueCondition";
    rr:termType rr:IRI.
:fn_170 rr:predicateObjectMap :pom_507.
:pom_507 a rr:PredicateObjectMap;
    rr:predicateMap :pm_507.
:pm_507 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#strBoolean>.
:pom_507 rr:objectMap :om_505.
:om_505 a rr:ObjectMap, fnml:FunctionTermMap;
    fnml:functionValue :fn_171.
:fn_171 rml:logicalSource :source_108;
    rr:predicateObjectMap :pomexec_171.
:pomexec_171 rr:predicateMap :pmexec_171.
:pmexec_171 rr:constant fno:executes.
:pomexec_171 rr:objectMap :omexec_171.
:omexec_171 rr:constant "http://example.com/idlab/function/equal";
    rr:termType rr:IRI.
:fn_171 rr:predicateObjectMap :pom_508.
:pom_508 a rr:PredicateObjectMap;
    rr:predicateMap :pm_508.
:pm_508 a rr:PredicateMap;
    rr:constant grel:valueParameter.
:pom_508 rr:objectMap :om_506.
:om_506 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal.
:fn_171 rr:predicateObjectMap :pom_509.
:pom_509 a rr:PredicateObjectMap;
    rr:predicateMap :pm_509.
:pm_509 a rr:PredicateMap;
    rr:constant grel:valueParameter2.
:pom_509 rr:objectMap :om_507.
:om_507 a rr:ObjectMap;
    rr:constant "False";
    rr:termType rr:Literal.
:fn_170 rr:predicateObjectMap :pom_510.
:pom_510 a rr:PredicateObjectMap;
    rr:predicateMap :pm_510.
:pm_510 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#str>.
:pom_510 rr:objectMap :om_508.
:om_508 a rr:ObjectMap;
    rr:constant "false";
    rr:termType rr:Literal.
:rules_000 void:exampleResource :map_gsm-r-equipment-version_000.
:map_gsm-r-equipment-version_000 rml:logicalSource :source_109.
:source_109 a rml:LogicalSource;
    rml:source :database_108;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, REPLACE((SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId), ' ', '_') AS ParameterURI FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.13.2.1')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_108 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_109 rml:referenceFormulation ql:CSV.
:map_gsm-r-equipment-version_000 a rr:TriplesMap;
    rdfs:label "gsm-r-equipment-version".
:s_109 a rr:SubjectMap.
:map_gsm-r-equipment-version_000 rr:subjectMap :s_109.
:s_109 rr:template "http://era.europa.eu/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_108.
:gm_108 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_511 a rr:PredicateObjectMap.
:map_gsm-r-equipment-version_000 rr:predicateObjectMap :pom_511.
:pm_511 a rr:PredicateMap.
:pom_511 rr:predicateMap :pm_511.
:pm_511 rr:constant era:gsmRVersion.
:pom_511 rr:objectMap :om_509.
:om_509 a rr:ObjectMap;
    rr:template "http://data.europa.eu/949/concepts/gsm-r-equipment-version/{ParameterURI}";
    rr:termType rr:IRI.
:rules_000 void:exampleResource :map_gsm-r-sets-driving-cab_000.
:map_gsm-r-sets-driving-cab_000 rml:logicalSource :source_110.
:source_110 a rml:LogicalSource;
    rml:source :database_109;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, (SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.13.2.2')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_109 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_110 rml:referenceFormulation ql:CSV.
:map_gsm-r-sets-driving-cab_000 a rr:TriplesMap;
    rdfs:label "gsm-r-sets-driving-cab".
:s_110 a rr:SubjectMap.
:map_gsm-r-sets-driving-cab_000 rr:subjectMap :s_110.
:s_110 rr:template "http://era.europa.eu/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_109.
:gm_109 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_512 a rr:PredicateObjectMap.
:map_gsm-r-sets-driving-cab_000 rr:predicateObjectMap :pom_512.
:pm_512 a rr:PredicateMap.
:pom_512 rr:predicateMap :pm_512.
:pm_512 rr:constant era:gsmRSetsInDrivingCab.
:pom_512 rr:objectMap :om_510.
:om_510 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal;
    rr:datatype xsd:integer.
:rules_000 void:exampleResource :map_radio-legacy-system_000.
:map_radio-legacy-system_000 rml:logicalSource :source_111.
:source_111 a rml:LogicalSource;
    rml:source :database_110;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, REPLACE((SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId), ' ', '_') AS ParameterURI, REPLACE(RegistrationParameters.OtherValue, ' ', '_') AS OtherURI FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.13.2.3')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_110 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_111 rml:referenceFormulation ql:CSV.
:map_radio-legacy-system_000 a rr:TriplesMap;
    rdfs:label "radio-legacy-system".
:s_111 a rr:SubjectMap.
:map_radio-legacy-system_000 rr:subjectMap :s_111.
:s_111 rr:template "http://data.europa.eu/949/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_110.
:gm_110 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_513 a rr:PredicateObjectMap.
:map_radio-legacy-system_000 rr:predicateObjectMap :pom_513.
:pm_513 a rr:PredicateMap.
:pom_513 rr:predicateMap :pm_513.
:pm_513 rr:constant era:legacyRadioSystem.
:pom_513 rr:objectMap :om_511.
:om_511 a fnml:FunctionTermMap;
    rr:termType rr:IRI;
    fnml:functionValue :fn_172.
:fn_172 rml:logicalSource :source_111;
    rr:predicateObjectMap :pomexec_172.
:pomexec_172 rr:predicateMap :pmexec_172.
:pmexec_172 rr:constant fno:executes.
:pomexec_172 rr:objectMap :omexec_172.
:omexec_172 rr:constant "https://w3id.org/imec/idlab/function#trueCondition";
    rr:termType rr:IRI.
:fn_172 rr:predicateObjectMap :pom_514.
:pom_514 a rr:PredicateObjectMap;
    rr:predicateMap :pm_514.
:pm_514 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#strBoolean>.
:pom_514 rr:objectMap :om_512.
:om_512 a rr:ObjectMap, fnml:FunctionTermMap;
    fnml:functionValue :fn_173.
:fn_173 rml:logicalSource :source_111;
    rr:predicateObjectMap :pomexec_173.
:pomexec_173 rr:predicateMap :pmexec_173.
:pmexec_173 rr:constant fno:executes.
:pomexec_173 rr:objectMap :omexec_173.
:omexec_173 rr:constant "http://example.com/idlab/function/equal";
    rr:termType rr:IRI.
:fn_173 rr:predicateObjectMap :pom_515.
:pom_515 a rr:PredicateObjectMap;
    rr:predicateMap :pm_515.
:pm_515 a rr:PredicateMap;
    rr:constant grel:valueParameter.
:pom_515 rr:objectMap :om_513.
:om_513 a rr:ObjectMap;
    rml:reference "OtherURI";
    rr:termType rr:Literal.
:fn_173 rr:predicateObjectMap :pom_516.
:pom_516 a rr:PredicateObjectMap;
    rr:predicateMap :pm_516.
:pm_516 a rr:PredicateMap;
    rr:constant grel:valueParameter2.
:pom_516 rr:objectMap :om_514.
:om_514 a rr:ObjectMap;
    rr:constant "";
    rr:termType rr:Literal.
:fn_172 rr:predicateObjectMap :pom_517.
:pom_517 a rr:PredicateObjectMap;
    rr:predicateMap :pm_517.
:pm_517 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#str>.
:pom_517 rr:objectMap :om_515.
:om_515 a rr:ObjectMap;
    rr:template "http://data.europa.eu/949/concepts/train-protection-legacy-systems/{ParameterURI}";
    rr:termType rr:IRI.
:pom_518 a rr:PredicateObjectMap.
:map_radio-legacy-system_000 rr:predicateObjectMap :pom_518.
:pm_518 a rr:PredicateMap.
:pom_518 rr:predicateMap :pm_518.
:pm_518 rr:constant era:legacyRadioSystem.
:pom_518 rr:objectMap :om_516.
:om_516 a fnml:FunctionTermMap;
    rr:termType rr:IRI;
    fnml:functionValue :fn_174.
:fn_174 rml:logicalSource :source_111;
    rr:predicateObjectMap :pomexec_174.
:pomexec_174 rr:predicateMap :pmexec_174.
:pmexec_174 rr:constant fno:executes.
:pomexec_174 rr:objectMap :omexec_174.
:omexec_174 rr:constant "https://w3id.org/imec/idlab/function#trueCondition";
    rr:termType rr:IRI.
:fn_174 rr:predicateObjectMap :pom_519.
:pom_519 a rr:PredicateObjectMap;
    rr:predicateMap :pm_519.
:pm_519 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#strBoolean>.
:pom_519 rr:objectMap :om_517.
:om_517 a rr:ObjectMap, fnml:FunctionTermMap;
    fnml:functionValue :fn_175.
:fn_175 rml:logicalSource :source_111;
    rr:predicateObjectMap :pomexec_175.
:pomexec_175 rr:predicateMap :pmexec_175.
:pmexec_175 rr:constant fno:executes.
:pomexec_175 rr:objectMap :omexec_175.
:omexec_175 rr:constant "http://example.com/idlab/function/notEqual";
    rr:termType rr:IRI.
:fn_175 rr:predicateObjectMap :pom_520.
:pom_520 a rr:PredicateObjectMap;
    rr:predicateMap :pm_520.
:pm_520 a rr:PredicateMap;
    rr:constant grel:valueParameter.
:pom_520 rr:objectMap :om_518.
:om_518 a rr:ObjectMap;
    rml:reference "OtherURI";
    rr:termType rr:Literal.
:fn_175 rr:predicateObjectMap :pom_521.
:pom_521 a rr:PredicateObjectMap;
    rr:predicateMap :pm_521.
:pm_521 a rr:PredicateMap;
    rr:constant grel:valueParameter2.
:pom_521 rr:objectMap :om_519.
:om_519 a rr:ObjectMap;
    rr:constant "";
    rr:termType rr:Literal.
:fn_174 rr:predicateObjectMap :pom_522.
:pom_522 a rr:PredicateObjectMap;
    rr:predicateMap :pm_522.
:pm_522 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#str>.
:pom_522 rr:objectMap :om_520.
:om_520 a rr:ObjectMap;
    rr:template "http://data.europa.eu/949/concepts/train-protection-legacy-systems/{OtherURI}";
    rr:termType rr:IRI.
:rules_000 void:exampleResource :map_radio-switch-over-special-conditions_000.
:map_radio-switch-over-special-conditions_000 rml:logicalSource :source_112.
:source_112 a rml:LogicalSource;
    rml:source :database_111;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.13.2.4')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_111 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_112 rml:referenceFormulation ql:CSV.
:map_radio-switch-over-special-conditions_000 a rr:TriplesMap;
    rdfs:label "radio-switch-over-special-conditions".
:s_112 a rr:SubjectMap.
:map_radio-switch-over-special-conditions_000 rr:subjectMap :s_112.
:s_112 rr:template "http://era.europa.eu/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_111.
:gm_111 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_523 a rr:PredicateObjectMap.
:map_radio-switch-over-special-conditions_000 rr:predicateObjectMap :pom_523.
:pm_523 a rr:PredicateMap.
:pom_523 rr:predicateMap :pm_523.
:pm_523 rr:constant era:radioSwitchOverSpecialConditions.
:pom_523 rr:objectMap :om_521.
:om_521 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal.
:rules_000 void:exampleResource :map_voice-radio-compatible_000.
:map_voice-radio-compatible_000 rml:logicalSource :source_113.
:source_113 a rml:LogicalSource;
    rml:source :database_112;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, REPLACE((SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId), ' ', '_') AS ParameterURI FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.13.2.5')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_112 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_113 rml:referenceFormulation ql:CSV.
:map_voice-radio-compatible_000 a rr:TriplesMap;
    rdfs:label "voice-radio-compatible".
:s_113 a rr:SubjectMap.
:map_voice-radio-compatible_000 rr:subjectMap :s_113.
:s_113 rr:template "http://data.europa.eu/949/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_112.
:gm_112 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_524 a rr:PredicateObjectMap.
:map_voice-radio-compatible_000 rr:predicateObjectMap :pom_524.
:pm_524 a rr:PredicateMap.
:pom_524 rr:predicateMap :pm_524.
:pm_524 rr:constant era:voiceRadioCompatible.
:pom_524 rr:objectMap :om_522.
:om_522 a rr:ObjectMap;
    rr:template "http://data.europa.eu/949/concepts/radio-system-compatibilities/{ParameterURI}";
    rr:termType rr:IRI.
:rules_000 void:exampleResource :map_voice-operational-communication-implementation_000.
:map_voice-operational-communication-implementation_000 rml:logicalSource :source_114.
:source_114 a rml:LogicalSource;
    rml:source :database_113;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.13.2.6')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_113 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_114 rml:referenceFormulation ql:CSV.
:map_voice-operational-communication-implementation_000 a rr:TriplesMap;
    rdfs:label "voice-operational-communication-implementation".
:s_114 a rr:SubjectMap.
:map_voice-operational-communication-implementation_000 rr:subjectMap :s_114.
:s_114 rr:template "http://era.europa.eu/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_113.
:gm_113 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_525 a rr:PredicateObjectMap.
:map_voice-operational-communication-implementation_000 rr:predicateObjectMap :pom_525.
:pm_525 a rr:PredicateMap.
:pom_525 rr:predicateMap :pm_525.
:pm_525 rr:constant era:voiceOperationalCommImpl.
:pom_525 rr:objectMap :om_523.
:om_523 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal.
:rules_000 void:exampleResource :map_gsm-r-radio-data-communication_000.
:map_gsm-r-radio-data-communication_000 rml:logicalSource :source_115.
:source_115 a rml:LogicalSource;
    rml:source :database_114;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, REPLACE((SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId), ' ', '_') AS ParameterURI FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.13.2.7')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_114 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_115 rml:referenceFormulation ql:CSV.
:map_gsm-r-radio-data-communication_000 a rr:TriplesMap;
    rdfs:label "gsm-r-radio-data-communication".
:s_115 a rr:SubjectMap.
:map_gsm-r-radio-data-communication_000 rr:subjectMap :s_115.
:s_115 rr:template "http://era.europa.eu/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_114.
:gm_114 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_526 a rr:PredicateObjectMap.
:map_gsm-r-radio-data-communication_000 rr:predicateObjectMap :pom_526.
:pm_526 a rr:PredicateMap.
:pom_526 rr:predicateMap :pm_526.
:pm_526 rr:constant era:gsmRRadioDataCommunication.
:pom_526 rr:objectMap :om_524.
:om_524 a rr:ObjectMap;
    rr:template "http://data.europa.eu/949/concepts/gsm-r-radio-data-communication/{ParameterURI}";
    rr:termType rr:IRI.
:rules_000 void:exampleResource :map_data-radio-compatible_000.
:map_data-radio-compatible_000 rml:logicalSource :source_116.
:source_116 a rml:LogicalSource;
    rml:source :database_115;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, REPLACE((SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId), ' ', '_') AS ParameterURI FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.13.2.8')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_115 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_116 rml:referenceFormulation ql:CSV.
:map_data-radio-compatible_000 a rr:TriplesMap;
    rdfs:label "data-radio-compatible".
:s_116 a rr:SubjectMap.
:map_data-radio-compatible_000 rr:subjectMap :s_116.
:s_116 rr:template "http://data.europa.eu/949/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_115.
:gm_115 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_527 a rr:PredicateObjectMap.
:map_data-radio-compatible_000 rr:predicateObjectMap :pom_527.
:pm_527 a rr:PredicateMap.
:pom_527 rr:predicateMap :pm_527.
:pm_527 rr:constant era:dataRadioCompatible.
:pom_527 rr:objectMap :om_525.
:om_525 a rr:ObjectMap;
    rr:template "http://data.europa.eu/949/concepts/radio-system-compatibilities/{ParameterURI}";
    rr:termType rr:IRI.
:rules_000 void:exampleResource :map_data-communication-aplication-etcs-impl_000.
:map_data-communication-aplication-etcs-impl_000 rml:logicalSource :source_117.
:source_117 a rml:LogicalSource;
    rml:source :database_116;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.13.2.9')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_116 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_117 rml:referenceFormulation ql:CSV.
:map_data-communication-aplication-etcs-impl_000 a rr:TriplesMap;
    rdfs:label "data-communication-aplication-etcs-impl".
:s_117 a rr:SubjectMap.
:map_data-communication-aplication-etcs-impl_000 rr:subjectMap :s_117.
:s_117 rr:template "http://era.europa.eu/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_116.
:gm_116 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_528 a rr:PredicateObjectMap.
:map_data-communication-aplication-etcs-impl_000 rr:predicateObjectMap :pom_528.
:pm_528 a rr:PredicateMap.
:pom_528 rr:predicateMap :pm_528.
:pm_528 rr:constant era:etcsDataCommApp.
:pom_528 rr:objectMap :om_526.
:om_526 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal.
:rules_000 void:exampleResource :map_voice-gsm-r-home-network_000.
:map_voice-gsm-r-home-network_000 rml:logicalSource :source_118.
:source_118 a rml:LogicalSource;
    rml:source :database_117;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, REPLACE((SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId), ' ', '_') AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.13.2.10')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_117 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_118 rml:referenceFormulation ql:CSV.
:map_voice-gsm-r-home-network_000 a rr:TriplesMap;
    rdfs:label "voice-gsm-r-home-network".
:s_118 a rr:SubjectMap.
:map_voice-gsm-r-home-network_000 rr:subjectMap :s_118.
:s_118 rr:template "http://data.europa.eu/949/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_117.
:gm_117 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_529 a rr:PredicateObjectMap.
:map_voice-gsm-r-home-network_000 rr:predicateObjectMap :pom_529.
:pm_529 a rr:PredicateMap.
:pom_529 rr:predicateMap :pm_529.
:pm_529 rr:constant era:voiceGSMRNetwork.
:pom_529 rr:objectMap :om_527.
:om_527 a rr:ObjectMap;
    rr:template "http://data.europa.eu/949/concepts/gsmr-networks/{ParameterValue}";
    rr:termType rr:IRI.
:rules_000 void:exampleResource :map_data-gsm-r-home-network_000.
:map_data-gsm-r-home-network_000 rml:logicalSource :source_119.
:source_119 a rml:LogicalSource;
    rml:source :database_118;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, REPLACE((SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId), ' ', '_') AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.13.2.11')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_118 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_119 rml:referenceFormulation ql:CSV.
:map_data-gsm-r-home-network_000 a rr:TriplesMap;
    rdfs:label "data-gsm-r-home-network".
:s_119 a rr:SubjectMap.
:map_data-gsm-r-home-network_000 rr:subjectMap :s_119.
:s_119 rr:template "http://data.europa.eu/949/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_118.
:gm_118 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_530 a rr:PredicateObjectMap.
:map_data-gsm-r-home-network_000 rr:predicateObjectMap :pom_530.
:pm_530 a rr:PredicateMap.
:pom_530 rr:predicateMap :pm_530.
:pm_530 rr:constant era:dataGSMRNetwork.
:pom_530 rr:objectMap :om_528.
:om_528 a rr:ObjectMap;
    rr:template "http://data.europa.eu/949/concepts/gsmr-networks/{ParameterValue}";
    rr:termType rr:IRI.
:rules_000 void:exampleResource :map_group-555-support_000.
:map_group-555-support_000 rml:logicalSource :source_120.
:source_120 a rml:LogicalSource;
    rml:source :database_119;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.13.2.12')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_119 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_120 rml:referenceFormulation ql:CSV.
:map_group-555-support_000 a rr:TriplesMap;
    rdfs:label "group-555-support".
:s_120 a rr:SubjectMap.
:map_group-555-support_000 rr:subjectMap :s_120.
:s_120 rr:template "http://data.europa.eu/949/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_119.
:gm_119 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_531 a rr:PredicateObjectMap.
:map_group-555-support_000 rr:predicateObjectMap :pom_531.
:pm_531 a rr:PredicateMap.
:pom_531 rr:predicateMap :pm_531.
:pm_531 rr:constant era:usesGroup555.
:pom_531 rr:objectMap :om_529.
:om_529 a fnml:FunctionTermMap;
    rr:termType rr:Literal;
    rr:datatype xsd:boolean;
    fnml:functionValue :fn_176.
:fn_176 rml:logicalSource :source_120;
    rr:predicateObjectMap :pomexec_176.
:pomexec_176 rr:predicateMap :pmexec_176.
:pmexec_176 rr:constant fno:executes.
:pomexec_176 rr:objectMap :omexec_176.
:omexec_176 rr:constant "https://w3id.org/imec/idlab/function#trueCondition";
    rr:termType rr:IRI.
:fn_176 rr:predicateObjectMap :pom_532.
:pom_532 a rr:PredicateObjectMap;
    rr:predicateMap :pm_532.
:pm_532 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#strBoolean>.
:pom_532 rr:objectMap :om_530.
:om_530 a rr:ObjectMap, fnml:FunctionTermMap;
    fnml:functionValue :fn_177.
:fn_177 rml:logicalSource :source_120;
    rr:predicateObjectMap :pomexec_177.
:pomexec_177 rr:predicateMap :pmexec_177.
:pmexec_177 rr:constant fno:executes.
:pomexec_177 rr:objectMap :omexec_177.
:omexec_177 rr:constant "http://example.com/idlab/function/equal";
    rr:termType rr:IRI.
:fn_177 rr:predicateObjectMap :pom_533.
:pom_533 a rr:PredicateObjectMap;
    rr:predicateMap :pm_533.
:pm_533 a rr:PredicateMap;
    rr:constant grel:valueParameter.
:pom_533 rr:objectMap :om_531.
:om_531 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal.
:fn_177 rr:predicateObjectMap :pom_534.
:pom_534 a rr:PredicateObjectMap;
    rr:predicateMap :pm_534.
:pm_534 a rr:PredicateMap;
    rr:constant grel:valueParameter2.
:pom_534 rr:objectMap :om_532.
:om_532 a rr:ObjectMap;
    rr:constant "True";
    rr:termType rr:Literal.
:fn_176 rr:predicateObjectMap :pom_535.
:pom_535 a rr:PredicateObjectMap;
    rr:predicateMap :pm_535.
:pm_535 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#str>.
:pom_535 rr:objectMap :om_533.
:om_533 a rr:ObjectMap;
    rr:constant "true";
    rr:termType rr:Literal.
:pom_536 a rr:PredicateObjectMap.
:map_group-555-support_000 rr:predicateObjectMap :pom_536.
:pm_536 a rr:PredicateMap.
:pom_536 rr:predicateMap :pm_536.
:pm_536 rr:constant era:usesGroup555.
:pom_536 rr:objectMap :om_534.
:om_534 a fnml:FunctionTermMap;
    rr:termType rr:Literal;
    rr:datatype xsd:boolean;
    fnml:functionValue :fn_178.
:fn_178 rml:logicalSource :source_120;
    rr:predicateObjectMap :pomexec_178.
:pomexec_178 rr:predicateMap :pmexec_178.
:pmexec_178 rr:constant fno:executes.
:pomexec_178 rr:objectMap :omexec_178.
:omexec_178 rr:constant "https://w3id.org/imec/idlab/function#trueCondition";
    rr:termType rr:IRI.
:fn_178 rr:predicateObjectMap :pom_537.
:pom_537 a rr:PredicateObjectMap;
    rr:predicateMap :pm_537.
:pm_537 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#strBoolean>.
:pom_537 rr:objectMap :om_535.
:om_535 a rr:ObjectMap, fnml:FunctionTermMap;
    fnml:functionValue :fn_179.
:fn_179 rml:logicalSource :source_120;
    rr:predicateObjectMap :pomexec_179.
:pomexec_179 rr:predicateMap :pmexec_179.
:pmexec_179 rr:constant fno:executes.
:pomexec_179 rr:objectMap :omexec_179.
:omexec_179 rr:constant "http://example.com/idlab/function/equal";
    rr:termType rr:IRI.
:fn_179 rr:predicateObjectMap :pom_538.
:pom_538 a rr:PredicateObjectMap;
    rr:predicateMap :pm_538.
:pm_538 a rr:PredicateMap;
    rr:constant grel:valueParameter.
:pom_538 rr:objectMap :om_536.
:om_536 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal.
:fn_179 rr:predicateObjectMap :pom_539.
:pom_539 a rr:PredicateObjectMap;
    rr:predicateMap :pm_539.
:pm_539 a rr:PredicateMap;
    rr:constant grel:valueParameter2.
:pom_539 rr:objectMap :om_537.
:om_537 a rr:ObjectMap;
    rr:constant "False";
    rr:termType rr:Literal.
:fn_178 rr:predicateObjectMap :pom_540.
:pom_540 a rr:PredicateObjectMap;
    rr:predicateMap :pm_540.
:pm_540 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#str>.
:pom_540 rr:objectMap :om_538.
:om_538 a rr:ObjectMap;
    rr:constant "false";
    rr:termType rr:Literal.
:rules_000 void:exampleResource :map_train-detection-system-type_000.
:map_train-detection-system-type_000 rml:logicalSource :source_121.
:source_121 a rml:LogicalSource;
    rml:source :database_120;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, REPLACE(LOWER(CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId))), ' ', '') AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.14.1'));";
    rr:sqlVersion rr:SQL2008.
:database_120 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_121 rml:referenceFormulation ql:CSV.
:map_train-detection-system-type_000 a rr:TriplesMap;
    rdfs:label "train-detection-system-type".
:s_121 a rr:SubjectMap.
:map_train-detection-system-type_000 rr:subjectMap :s_121.
:s_121 rr:template "http://data.europa.eu/949/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_120.
:gm_120 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_541 a rr:PredicateObjectMap.
:map_train-detection-system-type_000 rr:predicateObjectMap :pom_541.
:pm_541 a rr:PredicateMap.
:pom_541 rr:predicateMap :pm_541.
:pm_541 rr:constant era:trainDetectionSystemType.
:pom_541 rr:objectMap :om_539.
:om_539 a fnml:FunctionTermMap;
    rr:termType rr:IRI;
    fnml:functionValue :fn_180.
:fn_180 rml:logicalSource :source_121;
    rr:predicateObjectMap :pomexec_180.
:pomexec_180 rr:predicateMap :pmexec_180.
:pmexec_180 rr:constant fno:executes.
:pomexec_180 rr:objectMap :omexec_180.
:omexec_180 rr:constant "https://w3id.org/imec/idlab/function#trueCondition";
    rr:termType rr:IRI.
:fn_180 rr:predicateObjectMap :pom_542.
:pom_542 a rr:PredicateObjectMap;
    rr:predicateMap :pm_542.
:pm_542 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#strBoolean>.
:pom_542 rr:objectMap :om_540.
:om_540 a rr:ObjectMap, fnml:FunctionTermMap;
    fnml:functionValue :fn_181.
:fn_181 rml:logicalSource :source_121;
    rr:predicateObjectMap :pomexec_181.
:pomexec_181 rr:predicateMap :pmexec_181.
:pmexec_181 rr:constant fno:executes.
:pomexec_181 rr:objectMap :omexec_181.
:omexec_181 rr:constant "http://example.com/idlab/function/equal";
    rr:termType rr:IRI.
:fn_181 rr:predicateObjectMap :pom_543.
:pom_543 a rr:PredicateObjectMap;
    rr:predicateMap :pm_543.
:pm_543 a rr:PredicateMap;
    rr:constant grel:valueParameter.
:pom_543 rr:objectMap :om_541.
:om_541 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal.
:fn_181 rr:predicateObjectMap :pom_544.
:pom_544 a rr:PredicateObjectMap;
    rr:predicateMap :pm_544.
:pm_544 a rr:PredicateMap;
    rr:constant grel:valueParameter2.
:pom_544 rr:objectMap :om_542.
:om_542 a rr:ObjectMap;
    rr:constant "trackcircuits";
    rr:termType rr:Literal.
:fn_180 rr:predicateObjectMap :pom_545.
:pom_545 a rr:PredicateObjectMap;
    rr:predicateMap :pm_545.
:pm_545 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#str>.
:pom_545 rr:objectMap :om_543.
:om_543 a rr:ObjectMap;
    rr:constant "http://data.europa.eu/949/concepts/train-detection/track_circuit";
    rr:termType rr:IRI.
:pom_546 a rr:PredicateObjectMap.
:map_train-detection-system-type_000 rr:predicateObjectMap :pom_546.
:pm_546 a rr:PredicateMap.
:pom_546 rr:predicateMap :pm_546.
:pm_546 rr:constant era:trainDetectionSystemType.
:pom_546 rr:objectMap :om_544.
:om_544 a fnml:FunctionTermMap;
    rr:termType rr:IRI;
    fnml:functionValue :fn_182.
:fn_182 rml:logicalSource :source_121;
    rr:predicateObjectMap :pomexec_182.
:pomexec_182 rr:predicateMap :pmexec_182.
:pmexec_182 rr:constant fno:executes.
:pomexec_182 rr:objectMap :omexec_182.
:omexec_182 rr:constant "https://w3id.org/imec/idlab/function#trueCondition";
    rr:termType rr:IRI.
:fn_182 rr:predicateObjectMap :pom_547.
:pom_547 a rr:PredicateObjectMap;
    rr:predicateMap :pm_547.
:pm_547 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#strBoolean>.
:pom_547 rr:objectMap :om_545.
:om_545 a rr:ObjectMap, fnml:FunctionTermMap;
    fnml:functionValue :fn_183.
:fn_183 rml:logicalSource :source_121;
    rr:predicateObjectMap :pomexec_183.
:pomexec_183 rr:predicateMap :pmexec_183.
:pmexec_183 rr:constant fno:executes.
:pomexec_183 rr:objectMap :omexec_183.
:omexec_183 rr:constant "http://example.com/idlab/function/equal";
    rr:termType rr:IRI.
:fn_183 rr:predicateObjectMap :pom_548.
:pom_548 a rr:PredicateObjectMap;
    rr:predicateMap :pm_548.
:pm_548 a rr:PredicateMap;
    rr:constant grel:valueParameter.
:pom_548 rr:objectMap :om_546.
:om_546 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal.
:fn_183 rr:predicateObjectMap :pom_549.
:pom_549 a rr:PredicateObjectMap;
    rr:predicateMap :pm_549.
:pm_549 a rr:PredicateMap;
    rr:constant grel:valueParameter2.
:pom_549 rr:objectMap :om_547.
:om_547 a rr:ObjectMap;
    rr:constant "axlecounters";
    rr:termType rr:Literal.
:fn_182 rr:predicateObjectMap :pom_550.
:pom_550 a rr:PredicateObjectMap;
    rr:predicateMap :pm_550.
:pm_550 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#str>.
:pom_550 rr:objectMap :om_548.
:om_548 a rr:ObjectMap;
    rr:constant "http://data.europa.eu/949/concepts/train-detection/wheel_detector";
    rr:termType rr:IRI.
:pom_551 a rr:PredicateObjectMap.
:map_train-detection-system-type_000 rr:predicateObjectMap :pom_551.
:pm_551 a rr:PredicateMap.
:pom_551 rr:predicateMap :pm_551.
:pm_551 rr:constant era:trainDetectionSystemType.
:pom_551 rr:objectMap :om_549.
:om_549 a fnml:FunctionTermMap;
    rr:termType rr:IRI;
    fnml:functionValue :fn_184.
:fn_184 rml:logicalSource :source_121;
    rr:predicateObjectMap :pomexec_184.
:pomexec_184 rr:predicateMap :pmexec_184.
:pmexec_184 rr:constant fno:executes.
:pomexec_184 rr:objectMap :omexec_184.
:omexec_184 rr:constant "https://w3id.org/imec/idlab/function#trueCondition";
    rr:termType rr:IRI.
:fn_184 rr:predicateObjectMap :pom_552.
:pom_552 a rr:PredicateObjectMap;
    rr:predicateMap :pm_552.
:pm_552 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#strBoolean>.
:pom_552 rr:objectMap :om_550.
:om_550 a rr:ObjectMap, fnml:FunctionTermMap;
    fnml:functionValue :fn_185.
:fn_185 rml:logicalSource :source_121;
    rr:predicateObjectMap :pomexec_185.
:pomexec_185 rr:predicateMap :pmexec_185.
:pmexec_185 rr:constant fno:executes.
:pomexec_185 rr:objectMap :omexec_185.
:omexec_185 rr:constant "http://example.com/idlab/function/equal";
    rr:termType rr:IRI.
:fn_185 rr:predicateObjectMap :pom_553.
:pom_553 a rr:PredicateObjectMap;
    rr:predicateMap :pm_553.
:pm_553 a rr:PredicateMap;
    rr:constant grel:valueParameter.
:pom_553 rr:objectMap :om_551.
:om_551 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal.
:fn_185 rr:predicateObjectMap :pom_554.
:pom_554 a rr:PredicateObjectMap;
    rr:predicateMap :pm_554.
:pm_554 a rr:PredicateMap;
    rr:constant grel:valueParameter2.
:pom_554 rr:objectMap :om_552.
:om_552 a rr:ObjectMap;
    rr:constant "loops";
    rr:termType rr:Literal.
:fn_184 rr:predicateObjectMap :pom_555.
:pom_555 a rr:PredicateObjectMap;
    rr:predicateMap :pm_555.
:pm_555 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#str>.
:pom_555 rr:objectMap :om_553.
:om_553 a rr:ObjectMap;
    rr:constant "http://data.europa.eu/949/concepts/train-detection/loop";
    rr:termType rr:IRI.
:rules_000 void:exampleResource :map_max-distance-consecutive-axles_000.
:map_max-distance-consecutive-axles_000 rml:logicalSource :source_122.
:source_122 a rml:LogicalSource;
    rml:source :database_121;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.14.2.1')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_121 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_122 rml:referenceFormulation ql:CSV.
:map_max-distance-consecutive-axles_000 a rr:TriplesMap;
    rdfs:label "max-distance-consecutive-axles".
:s_122 a rr:SubjectMap.
:map_max-distance-consecutive-axles_000 rr:subjectMap :s_122.
:s_122 rr:template "http://era.europa.eu/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_121.
:gm_121 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_556 a rr:PredicateObjectMap.
:map_max-distance-consecutive-axles_000 rr:predicateObjectMap :pom_556.
:pm_556 a rr:PredicateMap.
:pom_556 rr:predicateMap :pm_556.
:pm_556 rr:constant era:maxDistConsecutiveAxles.
:pom_556 rr:objectMap :om_554.
:om_554 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal;
    rr:datatype xsd:integer.
:rules_000 void:exampleResource :map_min-distance-consecutive-axles_000.
:map_min-distance-consecutive-axles_000 rml:logicalSource :source_123.
:source_123 a rml:LogicalSource;
    rml:source :database_122;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.14.2.2')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_122 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_123 rml:referenceFormulation ql:CSV.
:map_min-distance-consecutive-axles_000 a rr:TriplesMap;
    rdfs:label "min-distance-consecutive-axles".
:s_123 a rr:SubjectMap.
:map_min-distance-consecutive-axles_000 rr:subjectMap :s_123.
:s_123 rr:template "http://era.europa.eu/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_122.
:gm_122 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_557 a rr:PredicateObjectMap.
:map_min-distance-consecutive-axles_000 rr:predicateObjectMap :pom_557.
:pm_557 a rr:PredicateMap.
:pom_557 rr:predicateMap :pm_557.
:pm_557 rr:constant era:minDistConsecutiveAxles.
:pom_557 rr:objectMap :om_555.
:om_555 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal;
    rr:datatype xsd:integer.
:rules_000 void:exampleResource :map_distance-first-last-axles_000.
:map_distance-first-last-axles_000 rml:logicalSource :source_124.
:source_124 a rml:LogicalSource;
    rml:source :database_123;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.14.2.3')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_123 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_124 rml:referenceFormulation ql:CSV.
:map_distance-first-last-axles_000 a rr:TriplesMap;
    rdfs:label "distance-first-last-axles".
:s_124 a rr:SubjectMap.
:map_distance-first-last-axles_000 rr:subjectMap :s_124.
:s_124 rr:template "http://era.europa.eu/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_123.
:gm_123 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_558 a rr:PredicateObjectMap.
:map_distance-first-last-axles_000 rr:predicateObjectMap :pom_558.
:pm_558 a rr:PredicateMap.
:pom_558 rr:predicateMap :pm_558.
:pm_558 rr:constant era:minDistFirstLastAxle.
:pom_558 rr:objectMap :om_556.
:om_556 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal;
    rr:datatype xsd:integer.
:rules_000 void:exampleResource :map_max-length-vehicle-nose_000.
:map_max-length-vehicle-nose_000 rml:logicalSource :source_125.
:source_125 a rml:LogicalSource;
    rml:source :database_124;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.14.2.4')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_124 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_125 rml:referenceFormulation ql:CSV.
:map_max-length-vehicle-nose_000 a rr:TriplesMap;
    rdfs:label "max-length-vehicle-nose".
:s_125 a rr:SubjectMap.
:map_max-length-vehicle-nose_000 rr:subjectMap :s_125.
:s_125 rr:template "http://era.europa.eu/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_124.
:gm_124 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_559 a rr:PredicateObjectMap.
:map_max-length-vehicle-nose_000 rr:predicateObjectMap :pom_559.
:pm_559 a rr:PredicateMap.
:pom_559 rr:predicateMap :pm_559.
:pm_559 rr:constant era:maxLengthVehicleNose.
:pom_559 rr:objectMap :om_557.
:om_557 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal;
    rr:datatype xsd:integer.
:rules_000 void:exampleResource :map_min-rim-width_000.
:map_min-rim-width_000 rml:logicalSource :source_126.
:source_126 a rml:LogicalSource;
    rml:source :database_125;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.14.2.5')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_125 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_126 rml:referenceFormulation ql:CSV.
:map_min-rim-width_000 a rr:TriplesMap;
    rdfs:label "min-rim-width".
:s_126 a rr:SubjectMap.
:map_min-rim-width_000 rr:subjectMap :s_126.
:s_126 rr:template "http://era.europa.eu/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_125.
:gm_125 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_560 a rr:PredicateObjectMap.
:map_min-rim-width_000 rr:predicateObjectMap :pom_560.
:pm_560 a rr:PredicateMap.
:pom_560 rr:predicateMap :pm_560.
:pm_560 rr:constant era:minRimWidth.
:pom_560 rr:objectMap :om_558.
:om_558 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal;
    rr:datatype xsd:double.
:rules_000 void:exampleResource :map_min-wheel-diameter_000.
:map_min-wheel-diameter_000 rml:logicalSource :source_127.
:source_127 a rml:LogicalSource;
    rml:source :database_126;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.14.2.6')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_126 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_127 rml:referenceFormulation ql:CSV.
:map_min-wheel-diameter_000 a rr:TriplesMap;
    rdfs:label "min-wheel-diameter".
:s_127 a rr:SubjectMap.
:map_min-wheel-diameter_000 rr:subjectMap :s_127.
:s_127 rr:template "http://era.europa.eu/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_126.
:gm_126 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_561 a rr:PredicateObjectMap.
:map_min-wheel-diameter_000 rr:predicateObjectMap :pom_561.
:pm_561 a rr:PredicateMap.
:pom_561 rr:predicateMap :pm_561.
:pm_561 rr:constant era:minWheelDiameter.
:pom_561 rr:objectMap :om_559.
:om_559 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal;
    rr:datatype xsd:integer.
:rules_000 void:exampleResource :map_min-flange-thickness_000.
:map_min-flange-thickness_000 rml:logicalSource :source_128.
:source_128 a rml:LogicalSource;
    rml:source :database_127;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.14.2.7')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_127 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_128 rml:referenceFormulation ql:CSV.
:map_min-flange-thickness_000 a rr:TriplesMap;
    rdfs:label "min-flange-thickness".
:s_128 a rr:SubjectMap.
:map_min-flange-thickness_000 rr:subjectMap :s_128.
:s_128 rr:template "http://era.europa.eu/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_127.
:gm_127 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_562 a rr:PredicateObjectMap.
:map_min-flange-thickness_000 rr:predicateObjectMap :pom_562.
:pm_562 a rr:PredicateMap.
:pom_562 rr:predicateMap :pm_562.
:pm_562 rr:constant era:minFlangeThickness.
:pom_562 rr:objectMap :om_560.
:om_560 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal;
    rr:datatype xsd:double.
:rules_000 void:exampleResource :map_min-flange-height_000.
:map_min-flange-height_000 rml:logicalSource :source_129.
:source_129 a rml:LogicalSource;
    rml:source :database_128;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.14.2.8')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_128 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_129 rml:referenceFormulation ql:CSV.
:map_min-flange-height_000 a rr:TriplesMap;
    rdfs:label "min-flange-height".
:s_129 a rr:SubjectMap.
:map_min-flange-height_000 rr:subjectMap :s_129.
:s_129 rr:template "http://era.europa.eu/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_128.
:gm_128 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_563 a rr:PredicateObjectMap.
:map_min-flange-height_000 rr:predicateObjectMap :pom_563.
:pm_563 a rr:PredicateMap.
:pom_563 rr:predicateMap :pm_563.
:pm_563 rr:constant era:minFlangeHeight.
:pom_563 rr:objectMap :om_561.
:om_561 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal;
    rr:datatype xsd:double.
:rules_000 void:exampleResource :map_max-flange-height_000.
:map_max-flange-height_000 rml:logicalSource :source_130.
:source_130 a rml:LogicalSource;
    rml:source :database_129;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.14.2.9')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_129 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_130 rml:referenceFormulation ql:CSV.
:map_max-flange-height_000 a rr:TriplesMap;
    rdfs:label "max-flange-height".
:s_130 a rr:SubjectMap.
:map_max-flange-height_000 rr:subjectMap :s_130.
:s_130 rr:template "http://era.europa.eu/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_129.
:gm_129 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_564 a rr:PredicateObjectMap.
:map_max-flange-height_000 rr:predicateObjectMap :pom_564.
:pm_564 a rr:PredicateMap.
:pom_564 rr:predicateMap :pm_564.
:pm_564 rr:constant era:maxFlangeHeight.
:pom_564 rr:objectMap :om_562.
:om_562 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal;
    rr:datatype xsd:double.
:rules_000 void:exampleResource :map_min-axle-load_000.
:map_min-axle-load_000 rml:logicalSource :source_131.
:source_131 a rml:LogicalSource;
    rml:source :database_130;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.14.2.10')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_130 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_131 rml:referenceFormulation ql:CSV.
:map_min-axle-load_000 a rr:TriplesMap;
    rdfs:label "min-axle-load".
:s_131 a rr:SubjectMap.
:map_min-axle-load_000 rr:subjectMap :s_131.
:s_131 rr:template "http://era.europa.eu/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_130.
:gm_130 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_565 a rr:PredicateObjectMap.
:map_min-axle-load_000 rr:predicateObjectMap :pom_565.
:pm_565 a rr:PredicateMap.
:pom_565 rr:predicateMap :pm_565.
:pm_565 rr:constant era:minAxleLoad.
:pom_565 rr:objectMap :om_563.
:om_563 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal;
    rr:datatype xsd:double.
:rules_000 void:exampleResource :map_ferromagnetic-wheel-material_000.
:map_ferromagnetic-wheel-material_000 rml:logicalSource :source_132.
:source_132 a rml:LogicalSource;
    rml:source :database_131;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.14.2.12')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_131 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_132 rml:referenceFormulation ql:CSV.
:map_ferromagnetic-wheel-material_000 a rr:TriplesMap;
    rdfs:label "ferromagnetic-wheel-material".
:s_132 a rr:SubjectMap.
:map_ferromagnetic-wheel-material_000 rr:subjectMap :s_132.
:s_132 rr:template "http://data.europa.eu/949/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_131.
:gm_131 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_566 a rr:PredicateObjectMap.
:map_ferromagnetic-wheel-material_000 rr:predicateObjectMap :pom_566.
:pm_566 a rr:PredicateMap.
:pom_566 rr:predicateMap :pm_566.
:pm_566 rr:constant era:ferromagneticWheelMaterial.
:pom_566 rr:objectMap :om_564.
:om_564 a fnml:FunctionTermMap;
    rr:termType rr:Literal;
    rr:datatype xsd:boolean;
    fnml:functionValue :fn_186.
:fn_186 rml:logicalSource :source_132;
    rr:predicateObjectMap :pomexec_186.
:pomexec_186 rr:predicateMap :pmexec_186.
:pmexec_186 rr:constant fno:executes.
:pomexec_186 rr:objectMap :omexec_186.
:omexec_186 rr:constant "https://w3id.org/imec/idlab/function#trueCondition";
    rr:termType rr:IRI.
:fn_186 rr:predicateObjectMap :pom_567.
:pom_567 a rr:PredicateObjectMap;
    rr:predicateMap :pm_567.
:pm_567 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#strBoolean>.
:pom_567 rr:objectMap :om_565.
:om_565 a rr:ObjectMap, fnml:FunctionTermMap;
    fnml:functionValue :fn_187.
:fn_187 rml:logicalSource :source_132;
    rr:predicateObjectMap :pomexec_187.
:pomexec_187 rr:predicateMap :pmexec_187.
:pmexec_187 rr:constant fno:executes.
:pomexec_187 rr:objectMap :omexec_187.
:omexec_187 rr:constant "http://example.com/idlab/function/equal";
    rr:termType rr:IRI.
:fn_187 rr:predicateObjectMap :pom_568.
:pom_568 a rr:PredicateObjectMap;
    rr:predicateMap :pm_568.
:pm_568 a rr:PredicateMap;
    rr:constant grel:valueParameter.
:pom_568 rr:objectMap :om_566.
:om_566 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal.
:fn_187 rr:predicateObjectMap :pom_569.
:pom_569 a rr:PredicateObjectMap;
    rr:predicateMap :pm_569.
:pm_569 a rr:PredicateMap;
    rr:constant grel:valueParameter2.
:pom_569 rr:objectMap :om_567.
:om_567 a rr:ObjectMap;
    rr:constant "True";
    rr:termType rr:Literal.
:fn_186 rr:predicateObjectMap :pom_570.
:pom_570 a rr:PredicateObjectMap;
    rr:predicateMap :pm_570.
:pm_570 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#str>.
:pom_570 rr:objectMap :om_568.
:om_568 a rr:ObjectMap;
    rr:constant "true";
    rr:termType rr:Literal.
:pom_571 a rr:PredicateObjectMap.
:map_ferromagnetic-wheel-material_000 rr:predicateObjectMap :pom_571.
:pm_571 a rr:PredicateMap.
:pom_571 rr:predicateMap :pm_571.
:pm_571 rr:constant era:ferromagneticWheelMaterial.
:pom_571 rr:objectMap :om_569.
:om_569 a fnml:FunctionTermMap;
    rr:termType rr:Literal;
    rr:datatype xsd:boolean;
    fnml:functionValue :fn_188.
:fn_188 rml:logicalSource :source_132;
    rr:predicateObjectMap :pomexec_188.
:pomexec_188 rr:predicateMap :pmexec_188.
:pmexec_188 rr:constant fno:executes.
:pomexec_188 rr:objectMap :omexec_188.
:omexec_188 rr:constant "https://w3id.org/imec/idlab/function#trueCondition";
    rr:termType rr:IRI.
:fn_188 rr:predicateObjectMap :pom_572.
:pom_572 a rr:PredicateObjectMap;
    rr:predicateMap :pm_572.
:pm_572 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#strBoolean>.
:pom_572 rr:objectMap :om_570.
:om_570 a rr:ObjectMap, fnml:FunctionTermMap;
    fnml:functionValue :fn_189.
:fn_189 rml:logicalSource :source_132;
    rr:predicateObjectMap :pomexec_189.
:pomexec_189 rr:predicateMap :pmexec_189.
:pmexec_189 rr:constant fno:executes.
:pomexec_189 rr:objectMap :omexec_189.
:omexec_189 rr:constant "http://example.com/idlab/function/equal";
    rr:termType rr:IRI.
:fn_189 rr:predicateObjectMap :pom_573.
:pom_573 a rr:PredicateObjectMap;
    rr:predicateMap :pm_573.
:pm_573 a rr:PredicateMap;
    rr:constant grel:valueParameter.
:pom_573 rr:objectMap :om_571.
:om_571 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal.
:fn_189 rr:predicateObjectMap :pom_574.
:pom_574 a rr:PredicateObjectMap;
    rr:predicateMap :pm_574.
:pm_574 a rr:PredicateMap;
    rr:constant grel:valueParameter2.
:pom_574 rr:objectMap :om_572.
:om_572 a rr:ObjectMap;
    rr:constant "False";
    rr:termType rr:Literal.
:fn_188 rr:predicateObjectMap :pom_575.
:pom_575 a rr:PredicateObjectMap;
    rr:predicateMap :pm_575.
:pm_575 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#str>.
:pom_575 rr:objectMap :om_573.
:om_573 a rr:ObjectMap;
    rr:constant "false";
    rr:termType rr:Literal.
:rules_000 void:exampleResource :map_max-sanding-output_000.
:map_max-sanding-output_000 rml:logicalSource :source_133.
:source_133 a rml:LogicalSource;
    rml:source :database_132;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.14.2.13')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_132 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_133 rml:referenceFormulation ql:CSV.
:map_max-sanding-output_000 a rr:TriplesMap;
    rdfs:label "max-sanding-output".
:s_133 a rr:SubjectMap.
:map_max-sanding-output_000 rr:subjectMap :s_133.
:s_133 rr:template "http://era.europa.eu/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_132.
:gm_132 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_576 a rr:PredicateObjectMap.
:map_max-sanding-output_000 rr:predicateObjectMap :pom_576.
:pm_576 a rr:PredicateMap.
:pom_576 rr:predicateMap :pm_576.
:pm_576 rr:constant era:vehicleMaxSandingOutput.
:pom_576 rr:objectMap :om_574.
:om_574 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal.
:rules_000 void:exampleResource :map_sanding-prevention_000.
:map_sanding-prevention_000 rml:logicalSource :source_134.
:source_134 a rml:LogicalSource;
    rml:source :database_133;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.14.2.14')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_133 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_134 rml:referenceFormulation ql:CSV.
:map_sanding-prevention_000 a rr:TriplesMap;
    rdfs:label "sanding-prevention".
:s_134 a rr:SubjectMap.
:map_sanding-prevention_000 rr:subjectMap :s_134.
:s_134 rr:template "http://data.europa.eu/949/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_133.
:gm_133 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_577 a rr:PredicateObjectMap.
:map_sanding-prevention_000 rr:predicateObjectMap :pom_577.
:pm_577 a rr:PredicateMap.
:pom_577 rr:predicateMap :pm_577.
:pm_577 rr:constant era:hasSandingPrevention.
:pom_577 rr:objectMap :om_575.
:om_575 a fnml:FunctionTermMap;
    rr:termType rr:Literal;
    rr:datatype xsd:boolean;
    fnml:functionValue :fn_190.
:fn_190 rml:logicalSource :source_134;
    rr:predicateObjectMap :pomexec_190.
:pomexec_190 rr:predicateMap :pmexec_190.
:pmexec_190 rr:constant fno:executes.
:pomexec_190 rr:objectMap :omexec_190.
:omexec_190 rr:constant "https://w3id.org/imec/idlab/function#trueCondition";
    rr:termType rr:IRI.
:fn_190 rr:predicateObjectMap :pom_578.
:pom_578 a rr:PredicateObjectMap;
    rr:predicateMap :pm_578.
:pm_578 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#strBoolean>.
:pom_578 rr:objectMap :om_576.
:om_576 a rr:ObjectMap, fnml:FunctionTermMap;
    fnml:functionValue :fn_191.
:fn_191 rml:logicalSource :source_134;
    rr:predicateObjectMap :pomexec_191.
:pomexec_191 rr:predicateMap :pmexec_191.
:pmexec_191 rr:constant fno:executes.
:pomexec_191 rr:objectMap :omexec_191.
:omexec_191 rr:constant "http://example.com/idlab/function/equal";
    rr:termType rr:IRI.
:fn_191 rr:predicateObjectMap :pom_579.
:pom_579 a rr:PredicateObjectMap;
    rr:predicateMap :pm_579.
:pm_579 a rr:PredicateMap;
    rr:constant grel:valueParameter.
:pom_579 rr:objectMap :om_577.
:om_577 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal.
:fn_191 rr:predicateObjectMap :pom_580.
:pom_580 a rr:PredicateObjectMap;
    rr:predicateMap :pm_580.
:pm_580 a rr:PredicateMap;
    rr:constant grel:valueParameter2.
:pom_580 rr:objectMap :om_578.
:om_578 a rr:ObjectMap;
    rr:constant "True";
    rr:termType rr:Literal.
:fn_190 rr:predicateObjectMap :pom_581.
:pom_581 a rr:PredicateObjectMap;
    rr:predicateMap :pm_581.
:pm_581 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#str>.
:pom_581 rr:objectMap :om_579.
:om_579 a rr:ObjectMap;
    rr:constant "true";
    rr:termType rr:Literal.
:pom_582 a rr:PredicateObjectMap.
:map_sanding-prevention_000 rr:predicateObjectMap :pom_582.
:pm_582 a rr:PredicateMap.
:pom_582 rr:predicateMap :pm_582.
:pm_582 rr:constant era:hasSandingPrevention.
:pom_582 rr:objectMap :om_580.
:om_580 a fnml:FunctionTermMap;
    rr:termType rr:Literal;
    rr:datatype xsd:boolean;
    fnml:functionValue :fn_192.
:fn_192 rml:logicalSource :source_134;
    rr:predicateObjectMap :pomexec_192.
:pomexec_192 rr:predicateMap :pmexec_192.
:pmexec_192 rr:constant fno:executes.
:pomexec_192 rr:objectMap :omexec_192.
:omexec_192 rr:constant "https://w3id.org/imec/idlab/function#trueCondition";
    rr:termType rr:IRI.
:fn_192 rr:predicateObjectMap :pom_583.
:pom_583 a rr:PredicateObjectMap;
    rr:predicateMap :pm_583.
:pm_583 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#strBoolean>.
:pom_583 rr:objectMap :om_581.
:om_581 a rr:ObjectMap, fnml:FunctionTermMap;
    fnml:functionValue :fn_193.
:fn_193 rml:logicalSource :source_134;
    rr:predicateObjectMap :pomexec_193.
:pomexec_193 rr:predicateMap :pmexec_193.
:pmexec_193 rr:constant fno:executes.
:pomexec_193 rr:objectMap :omexec_193.
:omexec_193 rr:constant "http://example.com/idlab/function/equal";
    rr:termType rr:IRI.
:fn_193 rr:predicateObjectMap :pom_584.
:pom_584 a rr:PredicateObjectMap;
    rr:predicateMap :pm_584.
:pm_584 a rr:PredicateMap;
    rr:constant grel:valueParameter.
:pom_584 rr:objectMap :om_582.
:om_582 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal.
:fn_193 rr:predicateObjectMap :pom_585.
:pom_585 a rr:PredicateObjectMap;
    rr:predicateMap :pm_585.
:pm_585 a rr:PredicateMap;
    rr:constant grel:valueParameter2.
:pom_585 rr:objectMap :om_583.
:om_583 a rr:ObjectMap;
    rr:constant "False";
    rr:termType rr:Literal.
:fn_192 rr:predicateObjectMap :pom_586.
:pom_586 a rr:PredicateObjectMap;
    rr:predicateMap :pm_586.
:pm_586 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#str>.
:pom_586 rr:objectMap :om_584.
:om_584 a rr:ObjectMap;
    rr:constant "false";
    rr:termType rr:Literal.
:rules_000 void:exampleResource :map_max-impedance-opposite-wheels_000.
:map_max-impedance-opposite-wheels_000 rml:logicalSource :source_135.
:source_135 a rml:LogicalSource;
    rml:source :database_134;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.14.2.16')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_134 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_135 rml:referenceFormulation ql:CSV.
:map_max-impedance-opposite-wheels_000 a rr:TriplesMap;
    rdfs:label "max-impedance-opposite-wheels".
:s_135 a rr:SubjectMap.
:map_max-impedance-opposite-wheels_000 rr:subjectMap :s_135.
:s_135 rr:template "http://era.europa.eu/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_134.
:gm_134 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_587 a rr:PredicateObjectMap.
:map_max-impedance-opposite-wheels_000 rr:predicateObjectMap :pom_587.
:pm_587 a rr:PredicateMap.
:pom_587 rr:predicateMap :pm_587.
:pm_587 rr:constant era:maxImpedanceWheelset.
:pom_587 rr:objectMap :om_585.
:om_585 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal;
    rr:datatype xsd:double.
:rules_000 void:exampleResource :map_min-vehicle-impedance_000.
:map_min-vehicle-impedance_000 rml:logicalSource :source_136.
:source_136 a rml:LogicalSource;
    rml:source :database_135;
    rml:query "SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT \"Name\" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.14.2.17')) AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';";
    rr:sqlVersion rr:SQL2008.
:database_135 a d2rq:Database;
    d2rq:jdbcDSN "${ERATV_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${ERATV_USER}";
    d2rq:password "${ERATV_PWD}".
:source_136 rml:referenceFormulation ql:CSV.
:map_min-vehicle-impedance_000 a rr:TriplesMap;
    rdfs:label "min-vehicle-impedance".
:s_136 a rr:SubjectMap.
:map_min-vehicle-impedance_000 rr:subjectMap :s_136.
:s_136 rr:template "http://era.europa.eu/vehicleTypes#{TypeVersionNumber}";
    rr:graphMap :gm_135.
:gm_135 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_588 a rr:PredicateObjectMap.
:map_min-vehicle-impedance_000 rr:predicateObjectMap :pom_588.
:pm_588 a rr:PredicateMap.
:pom_588 rr:predicateMap :pm_588.
:pm_588 rr:constant era:minVehicleImpedance.
:pom_588 rr:objectMap :om_586.
:om_586 a rr:ObjectMap;
    rml:reference "ParameterValue";
    rr:termType rr:Literal.
:pom_008 rr:objectMap :om_587.
:om_587 a rr:ObjectMap;
    rr:parentTriplesMap :map_eu-country_000;
    rr:joinCondition :jc_000.
:jc_000 rr:child "CountryCode";
    rr:parent "code".
:pom_109 rr:objectMap :om_588.
:om_588 a rr:ObjectMap;
    rr:parentTriplesMap :map_eu-country_000;
    rr:joinCondition :jc_001.
:jc_001 rr:child "Code";
    rr:parent "code".
