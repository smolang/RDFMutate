@prefix rr: <http://www.w3.org/ns/r2rml#>.
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>.
@prefix fnml: <http://semweb.mmlab.be/ns/fnml#>.
@prefix fno: <https://w3id.org/function/ontology#>.
@prefix d2rq: <http://www.wiwiss.fu-berlin.de/suhl/bizer/D2RQ/0.1#>.
@prefix void: <http://rdfs.org/ns/void#>.
@prefix dc: <http://purl.org/dc/terms/>.
@prefix foaf: <http://xmlns.com/foaf/0.1/>.
@prefix rml: <http://semweb.mmlab.be/ns/rml#>.
@prefix ql: <http://semweb.mmlab.be/ns/ql#>.
@prefix : <http://mapping.example.com/>.
@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.
@prefix idlab-fn: <http://example.com/idlab/function/>.
@prefix grel: <http://users.ugent.be/~bjdmeest/function/grel.ttl#>.
@prefix wgs: <http://www.w3.org/2003/01/geo/wgs84_pos#>.
@prefix geosparql: <http://www.opengis.net/ont/geosparql#>.
@prefix era: <http://data.europa.eu/949/>.
@prefix era-rsf: <http://data.europa.eu/949/concepts/rolling-stock-fire/>.

:rules_000 a void:Dataset;
    void:exampleResource :map_sol-tunnel_000.
:map_sol-tunnel_000 rml:logicalSource :source_000.
:source_000 a rml:LogicalSource;
    rml:source :database_000;
    rml:query "SELECT UICLines.UICCode, Tunnels.IMCode, Tunnels.UUID AS TUNNEL_LABEL, REPLACE(Tunnels.UUID, ' ', '_') AS TUNNEL_URI, (SELECT LTRIM(RTRIM(UOPID)) FROM RINF.dbo.OperationalPoints, RINF.dbo.LineNodes WHERE OperationalPointID=OperationalPoints.ID AND LineNodes.ID=LineEdges.LineNodeStartID AND OperationalPoints.VersionID=LineNodes.VersionID) AS FROM_NODE, Tracks.UUID AS TRACK_ID, (SELECT LTRIM(RTRIM(UOPID)) FROM RINF.dbo.OperationalPoints, RINF.dbo.LineNodes WHERE OperationalPointID=OperationalPoints.ID AND LineNodes.ID=LineEdges.LineNodeEndID AND OperationalPoints.VersionID=LineNodes.VersionID) AS TO_NODE, Tunnels.StartLat, Tunnels.StartLong, Tunnels.EndLat, Tunnels.EndLong, MemberStates.Code FROM RINF.dbo.LineEdges, RINF.dbo.SectionOfLines, RINF.dbo.SOLTracks, RINF.dbo.TrackTunnels, RINF.dbo.Tracks, RINF.dbo.UICLines, RINF.dbo.Tunnels, RINF.dbo.MemberStateVersions, RINF.dbo.MemberStates WHERE LineEdges.ID = SectionOfLines.LineEdgeID AND LineEdges.VersionID = SectionOfLines.VersionID AND SectionOfLines.ID = SOLTracks.SectionOfLineID AND SectionOfLines.UICLineID = UICLines.ID AND SectionOfLines.VersionID = UICLines.VersionID AND SectionOfLines.VersionID = SOLTracks.VersionID AND SOLTracks.TrackID = Tracks.ID AND SOLTracks.VersionID = Tracks.VersionID AND SOLTracks.TrackID = TrackTunnels.TrackID AND SOLTracks.VersionID = TrackTunnels.VersionID AND TrackTunnels.TunnelID = Tunnels.ID AND TrackTunnels.VersionID = Tunnels.VersionID AND Tunnels.VersionID = MemberStateVersions.ID AND MemberStateVersions.MemberStateID = MemberStates.ID;";
    rr:sqlVersion rr:SQL2008.
:database_000 a d2rq:Database;
    d2rq:jdbcDSN "${RINF_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${RINF_USER}";
    d2rq:password "${RINF_PWD}".
:source_000 rml:referenceFormulation ql:CSV.
:map_sol-tunnel_000 a rr:TriplesMap;
    rdfs:label "sol-tunnel".
:s_000 a rr:SubjectMap.
:map_sol-tunnel_000 rr:subjectMap :s_000.
:s_000 rr:template "http://data.europa.eu/949/funtionalInfrastructure/tunnels/{TUNNEL_URI}_{StartLong}{StartLat}_{EndLong}{EndLat}";
    rr:graphMap :gm_000.
:gm_000 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_000 a rr:PredicateObjectMap.
:map_sol-tunnel_000 rr:predicateObjectMap :pom_000.
:pm_000 a rr:PredicateMap.
:pom_000 rr:predicateMap :pm_000.
:pm_000 rr:constant rdf:type.
:pom_000 rr:objectMap :om_000.
:om_000 a rr:ObjectMap;
    rr:constant era:Tunnel;
    rr:termType rr:IRI.
:pom_001 a rr:PredicateObjectMap.
:map_sol-tunnel_000 rr:predicateObjectMap :pom_001.
:pm_001 a rr:PredicateMap.
:pom_001 rr:predicateMap :pm_001.
:pm_001 rr:constant rdfs:label.
:pom_001 rr:objectMap :om_001.
:om_001 a rr:ObjectMap;
    rml:reference "TUNNEL_LABEL";
    rr:termType rr:Literal.
:pom_002 a rr:PredicateObjectMap.
:map_sol-tunnel_000 rr:predicateObjectMap :pom_002.
:pm_002 a rr:PredicateMap.
:pom_002 rr:predicateMap :pm_002.
:pm_002 rr:constant era:imCode.
:pom_002 rr:objectMap :om_002.
:om_002 a rr:ObjectMap;
    rml:reference "IMCode";
    rr:termType rr:Literal.
:pom_003 a rr:PredicateObjectMap.
:map_sol-tunnel_000 rr:predicateObjectMap :pom_003.
:pm_003 a rr:PredicateMap.
:pom_003 rr:predicateMap :pm_003.
:pm_003 rr:constant era:tunnelIdentification.
:pom_003 rr:objectMap :om_003.
:om_003 a rr:ObjectMap;
    rml:reference "TUNNEL_LABEL";
    rr:termType rr:Literal.
:pom_004 a rr:PredicateObjectMap.
:map_sol-tunnel_000 rr:predicateObjectMap :pom_004.
:pm_004 a rr:PredicateMap.
:pom_004 rr:predicateMap :pm_004.
:pm_004 rr:constant era:startLocation.
:pom_004 rr:objectMap :om_004.
:om_004 a rr:ObjectMap;
    rr:template "http://data.europa.eu/949/locations/{StartLong}/{StartLat}";
    rr:termType rr:IRI.
:pom_005 a rr:PredicateObjectMap.
:map_sol-tunnel_000 rr:predicateObjectMap :pom_005.
:pm_005 a rr:PredicateMap.
:pom_005 rr:predicateMap :pm_005.
:pm_005 rr:constant era:endLocation.
:pom_005 rr:objectMap :om_005.
:om_005 a rr:ObjectMap;
    rr:template "http://data.europa.eu/949/locations/{EndLong}/{EndLat}";
    rr:termType rr:IRI.
:pom_006 a rr:PredicateObjectMap.
:map_sol-tunnel_000 rr:predicateObjectMap :pom_006.
:pm_006 a rr:PredicateMap.
:pom_006 rr:predicateMap :pm_006.
:pm_006 rr:constant era:netElement.
:pom_006 rr:objectMap :om_006.
:om_006 a rr:ObjectMap;
    rr:template "http://data.europa.eu/949/topology/netElements/{UICCode}_{FROM_NODE}_{TRACK_ID}_{TO_NODE}";
    rr:termType rr:IRI.
:pom_007 a rr:PredicateObjectMap.
:map_sol-tunnel_000 rr:predicateObjectMap :pom_007.
:pm_007 a rr:PredicateMap.
:pom_007 rr:predicateMap :pm_007.
:pm_007 rr:constant era:inCountry.
:rules_000 void:exampleResource :map_op-track-tunnel_000.
:map_op-track-tunnel_000 rml:logicalSource :source_001.
:source_001 a rml:LogicalSource;
    rml:source :database_001;
    rml:query "SELECT Tunnels.UUID AS TUNNEL_LABEL, Tunnels.IMCode, REPLACE(Tunnels.UUID, ' ', '_') AS TUNNEL_URI, Tracks.UUID AS TRACK_ID, LTRIM(RTRIM(OperationalPoints.UOPID)) AS UOPID, MemberStates.Code FROM RINF.dbo.OPTracks, RINF.dbo.TrackTunnels, RINF.dbo.Tracks, RINF.dbo.OperationalPoints, RINF.dbo.Tunnels, RINF.dbo.MemberStateVersions, RINF.dbo.MemberStates WHERE TrackTunnels.TunnelID = Tunnels.ID AND TrackTunnels.VersionID = Tunnels.VersionID AND TrackTunnels.TrackID = OPTracks.TrackID AND TrackTunnels.VersionID = OPTracks.VersionID AND OPTracks.TrackID = Tracks.ID AND OPTracks.VersionID = Tracks.VersionID AND OPTracks.OperationalPointID = OperationalPoints.ID AND OPTracks.VersionID = OperationalPoints.VersionID AND Tunnels.VersionID = MemberStateVersions.ID AND MemberStateVersions.MemberStateID = MemberStates.ID AND Tracks.IsFuturePlanning = 0;";
    rr:sqlVersion rr:SQL2008.
:database_001 a d2rq:Database;
    d2rq:jdbcDSN "${RINF_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${RINF_USER}";
    d2rq:password "${RINF_PWD}".
:source_001 rml:referenceFormulation ql:CSV.
:map_op-track-tunnel_000 a rr:TriplesMap;
    rdfs:label "op-track-tunnel".
:s_001 a rr:SubjectMap.
:map_op-track-tunnel_000 rr:subjectMap :s_001.
:s_001 rr:template "http://data.europa.eu/949/funtionalInfrastructure/tunnels/{UOPID}_{TRACK_ID}_{TUNNEL_URI}";
    rr:graphMap :gm_001.
:gm_001 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_008 a rr:PredicateObjectMap.
:map_op-track-tunnel_000 rr:predicateObjectMap :pom_008.
:pm_008 a rr:PredicateMap.
:pom_008 rr:predicateMap :pm_008.
:pm_008 rr:constant rdf:type.
:pom_008 rr:objectMap :om_007.
:om_007 a rr:ObjectMap;
    rr:constant era:Tunnel;
    rr:termType rr:IRI.
:pom_009 a rr:PredicateObjectMap.
:map_op-track-tunnel_000 rr:predicateObjectMap :pom_009.
:pm_009 a rr:PredicateMap.
:pom_009 rr:predicateMap :pm_009.
:pm_009 rr:constant rdfs:label.
:pom_009 rr:objectMap :om_008.
:om_008 a rr:ObjectMap;
    rml:reference "TUNNEL_LABEL";
    rr:termType rr:Literal.
:pom_010 a rr:PredicateObjectMap.
:map_op-track-tunnel_000 rr:predicateObjectMap :pom_010.
:pm_010 a rr:PredicateMap.
:pom_010 rr:predicateMap :pm_010.
:pm_010 rr:constant era:imCode.
:pom_010 rr:objectMap :om_009.
:om_009 a rr:ObjectMap;
    rml:reference "IMCode";
    rr:termType rr:Literal.
:pom_011 a rr:PredicateObjectMap.
:map_op-track-tunnel_000 rr:predicateObjectMap :pom_011.
:pm_011 a rr:PredicateMap.
:pom_011 rr:predicateMap :pm_011.
:pm_011 rr:constant era:tunnelIdentification.
:pom_011 rr:objectMap :om_010.
:om_010 a rr:ObjectMap;
    rml:reference "TUNNEL_LABEL";
    rr:termType rr:Literal.
:pom_012 a rr:PredicateObjectMap.
:map_op-track-tunnel_000 rr:predicateObjectMap :pom_012.
:pm_012 a rr:PredicateMap.
:pom_012 rr:predicateMap :pm_012.
:pm_012 rr:constant era:inCountry.
:rules_000 void:exampleResource :map_siding-tunnel_000.
:map_siding-tunnel_000 rml:logicalSource :source_002.
:source_002 a rml:LogicalSource;
    rml:source :database_002;
    rml:query "SELECT Tunnels.UUID AS TUNNEL_LABEL, REPLACE(Tunnels.UUID, ' ', '_') AS TUNNEL_URI, Sidings.UUID AS SIDING_ID, LTRIM(RTRIM(OperationalPoints.UOPID)) AS UOPID, MemberStates.Code, Tunnels.IMCode FROM RINF.dbo.Sidings, RINF.dbo.SidingTunnels, RINF.dbo.OperationalPoints, RINF.dbo.Tunnels, RINF.dbo.MemberStateVersions, RINF.dbo.MemberStates WHERE SidingTunnels.TunnelID = Tunnels.ID AND SidingTunnels.VersionID = Tunnels.VersionID AND SidingTunnels.SidingID = Sidings.ID AND SidingTunnels.VersionID = Sidings.VersionID AND Sidings.OperationalPointID = OperationalPoints.ID AND Sidings.VersionID = OperationalPoints.VersionID AND Tunnels.VersionID = MemberStateVersions.ID AND MemberStateVersions.MemberStateID = MemberStates.ID AND Sidings.IsFuturePlanning = 0;";
    rr:sqlVersion rr:SQL2008.
:database_002 a d2rq:Database;
    d2rq:jdbcDSN "${RINF_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${RINF_USER}";
    d2rq:password "${RINF_PWD}".
:source_002 rml:referenceFormulation ql:CSV.
:map_siding-tunnel_000 a rr:TriplesMap;
    rdfs:label "siding-tunnel".
:s_002 a rr:SubjectMap.
:map_siding-tunnel_000 rr:subjectMap :s_002.
:s_002 rr:template "http://data.europa.eu/949/funtionalInfrastructure/tunnels/{UOPID}_{SIDING_ID}_{TUNNEL_URI}";
    rr:graphMap :gm_002.
:gm_002 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_013 a rr:PredicateObjectMap.
:map_siding-tunnel_000 rr:predicateObjectMap :pom_013.
:pm_013 a rr:PredicateMap.
:pom_013 rr:predicateMap :pm_013.
:pm_013 rr:constant rdf:type.
:pom_013 rr:objectMap :om_011.
:om_011 a rr:ObjectMap;
    rr:constant era:Tunnel;
    rr:termType rr:IRI.
:pom_014 a rr:PredicateObjectMap.
:map_siding-tunnel_000 rr:predicateObjectMap :pom_014.
:pm_014 a rr:PredicateMap.
:pom_014 rr:predicateMap :pm_014.
:pm_014 rr:constant rdfs:label.
:pom_014 rr:objectMap :om_012.
:om_012 a rr:ObjectMap;
    rml:reference "TUNNEL_LABEL";
    rr:termType rr:Literal.
:pom_015 a rr:PredicateObjectMap.
:map_siding-tunnel_000 rr:predicateObjectMap :pom_015.
:pm_015 a rr:PredicateMap.
:pom_015 rr:predicateMap :pm_015.
:pm_015 rr:constant era:imCode.
:pom_015 rr:objectMap :om_013.
:om_013 a rr:ObjectMap;
    rml:reference "IMCode";
    rr:termType rr:Literal.
:pom_016 a rr:PredicateObjectMap.
:map_siding-tunnel_000 rr:predicateObjectMap :pom_016.
:pm_016 a rr:PredicateMap.
:pom_016 rr:predicateMap :pm_016.
:pm_016 rr:constant era:tunnelIdentification.
:pom_016 rr:objectMap :om_014.
:om_014 a rr:ObjectMap;
    rml:reference "TUNNEL_LABEL";
    rr:termType rr:Literal.
:pom_017 a rr:PredicateObjectMap.
:map_siding-tunnel_000 rr:predicateObjectMap :pom_017.
:pm_017 a rr:PredicateMap.
:pom_017 rr:predicateMap :pm_017.
:pm_017 rr:constant era:inCountry.
:rules_000 void:exampleResource :map_sol-tunnel-reference_000.
:map_sol-tunnel-reference_000 rml:logicalSource :source_003.
:source_003 a rml:LogicalSource;
    rml:source :database_003;
    rml:query "SELECT UICLines.UICCode, Tunnels.UUID AS TUNNEL_LABEL, REPLACE(Tunnels.UUID, ' ', '_') AS TUNNEL_URI, (SELECT LTRIM(RTRIM(UOPID)) FROM RINF.dbo.OperationalPoints, RINF.dbo.LineNodes WHERE OperationalPointID=OperationalPoints.ID AND LineNodes.ID=LineEdges.LineNodeStartID AND OperationalPoints.VersionID=LineNodes.VersionID) AS FROM_NODE, Tracks.UUID AS TRACK_ID, (SELECT LTRIM(RTRIM(UOPID)) FROM RINF.dbo.OperationalPoints, RINF.dbo.LineNodes WHERE OperationalPointID=OperationalPoints.ID AND LineNodes.ID=LineEdges.LineNodeEndID AND OperationalPoints.VersionID=LineNodes.VersionID) AS TO_NODE, ROUND((ABS(Tunnels.EndKm - Tunnels.StartKm) * 1000), 2) AS TunnelLength, Tunnels.StartLat, Tunnels.StartLong, Tunnels.EndLat, Tunnels.EndLong, MemberStates.Code FROM RINF.dbo.LineEdges, RINF.dbo.SectionOfLines, RINF.dbo.SOLTracks, RINF.dbo.TrackTunnels, RINF.dbo.Tracks, RINF.dbo.UICLines, RINF.dbo.Tunnels, RINF.dbo.MemberStateVersions, RINF.dbo.MemberStates WHERE LineEdges.ID = SectionOfLines.LineEdgeID AND LineEdges.VersionID = SectionOfLines.VersionID AND SectionOfLines.ID = SOLTracks.SectionOfLineID AND SectionOfLines.UICLineID = UICLines.ID AND SectionOfLines.VersionID = UICLines.VersionID AND SectionOfLines.VersionID = SOLTracks.VersionID AND SOLTracks.TrackID = Tracks.ID AND SOLTracks.VersionID = Tracks.VersionID AND SOLTracks.TrackID = TrackTunnels.TrackID AND SOLTracks.VersionID = TrackTunnels.VersionID AND TrackTunnels.TunnelID = Tunnels.ID AND TrackTunnels.VersionID = Tunnels.VersionID AND Tunnels.VersionID = MemberStateVersions.ID AND MemberStateVersions.MemberStateID = MemberStates.ID;";
    rr:sqlVersion rr:SQL2008.
:database_003 a d2rq:Database;
    d2rq:jdbcDSN "${RINF_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${RINF_USER}";
    d2rq:password "${RINF_PWD}".
:source_003 rml:referenceFormulation ql:CSV.
:map_sol-tunnel-reference_000 a rr:TriplesMap;
    rdfs:label "sol-tunnel-reference".
:s_003 a rr:SubjectMap.
:map_sol-tunnel-reference_000 rr:subjectMap :s_003.
:s_003 rr:template "http://data.europa.eu/949/topology/netElements/{UICCode}_{FROM_NODE}_{TRACK_ID}_{TO_NODE}";
    rr:graphMap :gm_003.
:gm_003 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_018 a rr:PredicateObjectMap.
:map_sol-tunnel-reference_000 rr:predicateObjectMap :pom_018.
:pm_018 a rr:PredicateMap.
:pom_018 rr:predicateMap :pm_018.
:pm_018 rr:constant era:passesThroughTunnel.
:pom_018 rr:objectMap :om_015.
:om_015 a rr:ObjectMap;
    rr:template "http://data.europa.eu/949/funtionalInfrastructure/tunnels/{TUNNEL_URI}_{StartLong}{StartLat}_{EndLong}{EndLat}";
    rr:termType rr:IRI.
:rules_000 void:exampleResource :map_op-track-tunnel-reference_000.
:map_op-track-tunnel-reference_000 rml:logicalSource :source_004.
:source_004 a rml:LogicalSource;
    rml:source :database_004;
    rml:query "SELECT Tunnels.UUID AS TUNNEL_LABEL, REPLACE(Tunnels.UUID, ' ', '_') AS TUNNEL_URI, Tracks.UUID AS TRACK_ID, LTRIM(RTRIM(OperationalPoints.UOPID)) AS UOPID, MemberStates.Code FROM RINF.dbo.OPTracks, RINF.dbo.TrackTunnels, RINF.dbo.Tracks, RINF.dbo.OperationalPoints, RINF.dbo.Tunnels, RINF.dbo.MemberStateVersions, RINF.dbo.MemberStates WHERE TrackTunnels.TunnelID = Tunnels.ID AND TrackTunnels.VersionID = Tunnels.VersionID AND TrackTunnels.TrackID = OPTracks.TrackID AND TrackTunnels.VersionID = OPTracks.VersionID AND OPTracks.TrackID = Tracks.ID AND OPTracks.VersionID = Tracks.VersionID AND OPTracks.OperationalPointID = OperationalPoints.ID AND OPTracks.VersionID = OperationalPoints.VersionID AND Tunnels.VersionID = MemberStateVersions.ID AND MemberStateVersions.MemberStateID = MemberStates.ID AND Tracks.IsFuturePlanning = 0;";
    rr:sqlVersion rr:SQL2008.
:database_004 a d2rq:Database;
    d2rq:jdbcDSN "${RINF_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${RINF_USER}";
    d2rq:password "${RINF_PWD}".
:source_004 rml:referenceFormulation ql:CSV.
:map_op-track-tunnel-reference_000 a rr:TriplesMap;
    rdfs:label "op-track-tunnel-reference".
:s_004 a rr:SubjectMap.
:map_op-track-tunnel-reference_000 rr:subjectMap :s_004.
:s_004 rr:template "http://data.europa.eu/949/functionalInfrastructure/tracks/{UOPID}_{TRACK_ID}";
    rr:graphMap :gm_004.
:gm_004 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_019 a rr:PredicateObjectMap.
:map_op-track-tunnel-reference_000 rr:predicateObjectMap :pom_019.
:pm_019 a rr:PredicateMap.
:pom_019 rr:predicateMap :pm_019.
:pm_019 rr:constant era:passesThroughTunnel.
:pom_019 rr:objectMap :om_016.
:om_016 a rr:ObjectMap;
    rr:template "http://data.europa.eu/949/funtionalInfrastructure/tunnels/{UOPID}_{TRACK_ID}_{TUNNEL_URI}";
    rr:termType rr:IRI.
:rules_000 void:exampleResource :map_siding-tunnel-reference_000.
:map_siding-tunnel-reference_000 rml:logicalSource :source_005.
:source_005 a rml:LogicalSource;
    rml:source :database_005;
    rml:query "SELECT Tunnels.UUID AS TUNNEL_LABEL, REPLACE(Tunnels.UUID, ' ', '_') AS TUNNEL_URI, Sidings.UUID AS SIDING_ID, LTRIM(RTRIM(OperationalPoints.UOPID)) AS UOPID, MemberStates.Code, Tunnels.IMCode FROM RINF.dbo.Sidings, RINF.dbo.SidingTunnels, RINF.dbo.OperationalPoints, RINF.dbo.Tunnels, RINF.dbo.MemberStateVersions, RINF.dbo.MemberStates WHERE SidingTunnels.TunnelID = Tunnels.ID AND SidingTunnels.VersionID = Tunnels.VersionID AND SidingTunnels.SidingID = Sidings.ID AND SidingTunnels.VersionID = Sidings.VersionID AND Sidings.OperationalPointID = OperationalPoints.ID AND Sidings.VersionID = OperationalPoints.VersionID AND Tunnels.VersionID = MemberStateVersions.ID AND MemberStateVersions.MemberStateID = MemberStates.ID AND Sidings.IsFuturePlanning = 0;";
    rr:sqlVersion rr:SQL2008.
:database_005 a d2rq:Database;
    d2rq:jdbcDSN "${RINF_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${RINF_USER}";
    d2rq:password "${RINF_PWD}".
:source_005 rml:referenceFormulation ql:CSV.
:map_siding-tunnel-reference_000 a rr:TriplesMap;
    rdfs:label "siding-tunnel-reference".
:s_005 a rr:SubjectMap.
:map_siding-tunnel-reference_000 rr:subjectMap :s_005.
:s_005 rr:template "http://data.europa.eu/949/functionalInfrastructure/sidings/{UOPID}_{SIDING_ID}";
    rr:graphMap :gm_005.
:gm_005 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_020 a rr:PredicateObjectMap.
:map_siding-tunnel-reference_000 rr:predicateObjectMap :pom_020.
:pm_020 a rr:PredicateMap.
:pom_020 rr:predicateMap :pm_020.
:pm_020 rr:constant era:passesThroughTunnel.
:pom_020 rr:objectMap :om_017.
:om_017 a rr:ObjectMap;
    rr:template "http://data.europa.eu/949/funtionalInfrastructure/tunnels/{UOPID}_{SIDING_ID}_{TUNNEL_URI}";
    rr:termType rr:IRI.
:rules_000 void:exampleResource :map_start-location_000.
:map_start-location_000 rml:logicalSource :source_006.
:source_006 a rml:LogicalSource;
    rml:source :database_006;
    rml:query "SELECT Tunnels.StartLat, Tunnels.StartLong FROM RINF.dbo.SectionOfLines, RINF.dbo.SOLTracks, RINF.dbo.TrackTunnels, RINF.dbo.Tunnels WHERE SectionOfLines.ID = SOLTracks.SectionOfLineID AND SectionOfLines.VersionID = SOLTracks.VersionID AND SOLTracks.TrackID = TrackTunnels.TrackID AND SOLTracks.VersionID = TrackTunnels.VersionID AND TrackTunnels.TunnelID = Tunnels.ID AND TrackTunnels.VersionID = Tunnels.VersionID;";
    rr:sqlVersion rr:SQL2008.
:database_006 a d2rq:Database;
    d2rq:jdbcDSN "${RINF_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${RINF_USER}";
    d2rq:password "${RINF_PWD}".
:source_006 rml:referenceFormulation ql:CSV.
:map_start-location_000 a rr:TriplesMap;
    rdfs:label "start-location".
:s_006 a rr:SubjectMap.
:map_start-location_000 rr:subjectMap :s_006.
:s_006 rr:template "http://data.europa.eu/949/locations/{StartLong}/{StartLat}";
    rr:graphMap :gm_006.
:gm_006 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_021 a rr:PredicateObjectMap.
:map_start-location_000 rr:predicateObjectMap :pom_021.
:pm_021 a rr:PredicateMap.
:pom_021 rr:predicateMap :pm_021.
:pm_021 rr:constant rdf:type.
:pom_021 rr:objectMap :om_018.
:om_018 a rr:ObjectMap;
    rr:constant wgs:Point;
    rr:termType rr:IRI.
:pom_022 a rr:PredicateObjectMap.
:map_start-location_000 rr:predicateObjectMap :pom_022.
:pm_022 a rr:PredicateMap.
:pom_022 rr:predicateMap :pm_022.
:pm_022 rr:constant rdf:type.
:pom_022 rr:objectMap :om_019.
:om_019 a rr:ObjectMap;
    rr:constant geosparql:Geometry;
    rr:termType rr:IRI.
:pom_023 a rr:PredicateObjectMap.
:map_start-location_000 rr:predicateObjectMap :pom_023.
:pm_023 a rr:PredicateMap.
:pom_023 rr:predicateMap :pm_023.
:pm_023 rr:constant wgs:lat.
:pom_023 rr:objectMap :om_020.
:om_020 a rr:ObjectMap;
    rml:reference "StartLat";
    rr:termType rr:Literal;
    rr:datatype xsd:double.
:pom_024 a rr:PredicateObjectMap.
:map_start-location_000 rr:predicateObjectMap :pom_024.
:pm_024 a rr:PredicateMap.
:pom_024 rr:predicateMap :pm_024.
:pm_024 rr:constant wgs:long.
:pom_024 rr:objectMap :om_021.
:om_021 a rr:ObjectMap;
    rml:reference "StartLong";
    rr:termType rr:Literal;
    rr:datatype xsd:double.
:pom_025 a rr:PredicateObjectMap.
:map_start-location_000 rr:predicateObjectMap :pom_025.
:pm_025 a rr:PredicateMap.
:pom_025 rr:predicateMap :pm_025.
:pm_025 rr:constant geosparql:asWKT.
:pom_025 rr:objectMap :om_022.
:om_022 a rr:ObjectMap;
    rr:template "POINT ({StartLong} {StartLat})";
    rr:termType rr:Literal;
    rr:datatype geosparql:wktLiteral.
:rules_000 void:exampleResource :map_end-location_000.
:map_end-location_000 rml:logicalSource :source_007.
:source_007 a rml:LogicalSource;
    rml:source :database_007;
    rml:query "SELECT Tunnels.EndLat, Tunnels.EndLong FROM RINF.dbo.SectionOfLines, RINF.dbo.SOLTracks, RINF.dbo.TrackTunnels, RINF.dbo.Tunnels WHERE SectionOfLines.ID = SOLTracks.SectionOfLineID AND SectionOfLines.VersionID = SOLTracks.VersionID AND SOLTracks.TrackID = TrackTunnels.TrackID AND SOLTracks.VersionID = TrackTunnels.VersionID AND TrackTunnels.TunnelID = Tunnels.ID AND TrackTunnels.VersionID = Tunnels.VersionID;";
    rr:sqlVersion rr:SQL2008.
:database_007 a d2rq:Database;
    d2rq:jdbcDSN "${RINF_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${RINF_USER}";
    d2rq:password "${RINF_PWD}".
:source_007 rml:referenceFormulation ql:CSV.
:map_end-location_000 a rr:TriplesMap;
    rdfs:label "end-location".
:s_007 a rr:SubjectMap.
:map_end-location_000 rr:subjectMap :s_007.
:s_007 rr:template "http://data.europa.eu/949/locations/{EndLong}/{EndLat}";
    rr:graphMap :gm_007.
:gm_007 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_026 a rr:PredicateObjectMap.
:map_end-location_000 rr:predicateObjectMap :pom_026.
:pm_026 a rr:PredicateMap.
:pom_026 rr:predicateMap :pm_026.
:pm_026 rr:constant rdf:type.
:pom_026 rr:objectMap :om_023.
:om_023 a rr:ObjectMap;
    rr:constant wgs:Point;
    rr:termType rr:IRI.
:pom_027 a rr:PredicateObjectMap.
:map_end-location_000 rr:predicateObjectMap :pom_027.
:pm_027 a rr:PredicateMap.
:pom_027 rr:predicateMap :pm_027.
:pm_027 rr:constant rdf:type.
:pom_027 rr:objectMap :om_024.
:om_024 a rr:ObjectMap;
    rr:constant geosparql:Geometry;
    rr:termType rr:IRI.
:pom_028 a rr:PredicateObjectMap.
:map_end-location_000 rr:predicateObjectMap :pom_028.
:pm_028 a rr:PredicateMap.
:pom_028 rr:predicateMap :pm_028.
:pm_028 rr:constant wgs:lat.
:pom_028 rr:objectMap :om_025.
:om_025 a rr:ObjectMap;
    rml:reference "EndLat";
    rr:termType rr:Literal;
    rr:datatype xsd:double.
:pom_029 a rr:PredicateObjectMap.
:map_end-location_000 rr:predicateObjectMap :pom_029.
:pm_029 a rr:PredicateMap.
:pom_029 rr:predicateMap :pm_029.
:pm_029 rr:constant wgs:long.
:pom_029 rr:objectMap :om_026.
:om_026 a rr:ObjectMap;
    rml:reference "EndLong";
    rr:termType rr:Literal;
    rr:datatype xsd:double.
:pom_030 a rr:PredicateObjectMap.
:map_end-location_000 rr:predicateObjectMap :pom_030.
:pm_030 a rr:PredicateMap.
:pom_030 rr:predicateMap :pm_030.
:pm_030 rr:constant geosparql:asWKT.
:pom_030 rr:objectMap :om_027.
:om_027 a rr:ObjectMap;
    rr:template "POINT ({EndLong} {EndLat})";
    rr:termType rr:Literal;
    rr:datatype geosparql:wktLiteral.
:rules_000 void:exampleResource :map_eu-country_000.
:map_eu-country_000 rml:logicalSource :source_008.
:source_008 a rml:LogicalSource;
    rml:source "data/countries.csv";
    rml:referenceFormulation ql:CSV.
:map_eu-country_000 a rr:TriplesMap;
    rdfs:label "eu-country".
:s_008 a rr:SubjectMap.
:map_eu-country_000 rr:subjectMap :s_008.
:s_008 rml:reference "eu".
:rules_000 void:exampleResource :map_verification_000.
:map_verification_000 rml:logicalSource :source_009.
:source_009 a rml:LogicalSource;
    rml:source :database_008;
    rml:query "SELECT REPLACE(Tunnels.UUID, ' ', '_') AS TUNNEL_URI, TunnelParameters.[Value], Tunnels.StartLat, Tunnels.StartLong, Tunnels.EndLat, Tunnels.EndLong, MemberStates.Code FROM RINF.dbo.TrackTunnels, RINF.dbo.Tunnels, RINF.dbo.TunnelParameters, RINF.dbo.Parameters, RINF.dbo.MemberStateVersions, RINF.dbo.MemberStates WHERE TrackTunnels.TunnelID = Tunnels.ID AND TrackTunnels.VersionID = Tunnels.VersionID AND TunnelParameters.TunnelID = TrackTunnels.TunnelID AND TunnelParameters.VersionID = TrackTunnels.VersionID AND TunnelParameters.ParameterId = Parameters.ID AND Parameters.[Index] = '1.1.1.1.8.5' AND Tunnels.VersionID = MemberStateVersions.ID AND MemberStateVersions.MemberStateID = MemberStates.ID AND TunnelParameters.[Value] is not null";
    rr:sqlVersion rr:SQL2008.
:database_008 a d2rq:Database;
    d2rq:jdbcDSN "${RINF_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${RINF_USER}";
    d2rq:password "${RINF_PWD}".
:source_009 rml:referenceFormulation ql:CSV.
:map_verification_000 a rr:TriplesMap;
    rdfs:label "verification".
:s_009 a rr:SubjectMap.
:map_verification_000 rr:subjectMap :s_009.
:s_009 rr:template "http://data.europa.eu/949/funtionalInfrastructure/tunnels/{TUNNEL_URI}_{StartLong}{StartLat}_{EndLong}{EndLat}";
    rr:graphMap :gm_008.
:gm_008 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_031 a rr:PredicateObjectMap.
:map_verification_000 rr:predicateObjectMap :pom_031.
:pm_031 a rr:PredicateMap.
:pom_031 rr:predicateMap :pm_031.
:pm_031 rr:constant era:verificationSRT.
:pom_031 rr:objectMap :om_028.
:om_028 a rr:ObjectMap;
    rml:reference "Value";
    rr:termType rr:Literal.
:rules_000 void:exampleResource :map_demonstration_000.
:map_demonstration_000 rml:logicalSource :source_010.
:source_010 a rml:LogicalSource;
    rml:source :database_009;
    rml:query "SELECT REPLACE(Tunnels.UUID, ' ', '_') AS TUNNEL_URI, TunnelParameters.[Value], Tunnels.StartLat, Tunnels.StartLong, Tunnels.EndLat, Tunnels.EndLong, MemberStates.Code FROM RINF.dbo.TrackTunnels, RINF.dbo.Tunnels, RINF.dbo.TunnelParameters, RINF.dbo.Parameters, RINF.dbo.MemberStateVersions, RINF.dbo.MemberStates WHERE TrackTunnels.TunnelID = Tunnels.ID AND TrackTunnels.VersionID = Tunnels.VersionID AND TunnelParameters.TunnelID = TrackTunnels.TunnelID AND TunnelParameters.VersionID = TrackTunnels.VersionID AND TunnelParameters.ParameterId = Parameters.ID AND Parameters.[Index] = '1.1.1.1.8.6' AND Tunnels.VersionID = MemberStateVersions.ID AND MemberStateVersions.MemberStateID = MemberStates.ID AND TunnelParameters.[Value] is not null";
    rr:sqlVersion rr:SQL2008.
:database_009 a d2rq:Database;
    d2rq:jdbcDSN "${RINF_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${RINF_USER}";
    d2rq:password "${RINF_PWD}".
:source_010 rml:referenceFormulation ql:CSV.
:map_demonstration_000 a rr:TriplesMap;
    rdfs:label "demonstration".
:s_010 a rr:SubjectMap.
:map_demonstration_000 rr:subjectMap :s_010.
:s_010 rr:template "http://data.europa.eu/949/funtionalInfrastructure/tunnels/{TUNNEL_URI}_{StartLong}{StartLat}_{EndLong}{EndLat}";
    rr:graphMap :gm_009.
:gm_009 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_032 a rr:PredicateObjectMap.
:map_demonstration_000 rr:predicateObjectMap :pom_032.
:pm_032 a rr:PredicateMap.
:pom_032 rr:predicateMap :pm_032.
:pm_032 rr:constant era:demonstrationSRT.
:pom_032 rr:objectMap :om_029.
:om_029 a rr:ObjectMap;
    rml:reference "Value";
    rr:termType rr:Literal.
:rules_000 void:exampleResource :map_length_000.
:map_length_000 rml:logicalSource :source_011.
:source_011 a rml:LogicalSource;
    rml:source :database_010;
    rml:query "SELECT REPLACE(Tunnels.UUID, ' ', '_') AS TUNNEL_URI, TunnelParameters.[Value], Tunnels.StartLat, Tunnels.StartLong, Tunnels.EndLat, Tunnels.EndLong, MemberStates.Code FROM RINF.dbo.TrackTunnels, RINF.dbo.Tunnels, RINF.dbo.TunnelParameters, RINF.dbo.Parameters, RINF.dbo.MemberStateVersions, RINF.dbo.MemberStates WHERE TrackTunnels.TunnelID = Tunnels.ID AND TrackTunnels.VersionID = Tunnels.VersionID AND TunnelParameters.TunnelID = TrackTunnels.TunnelID AND TunnelParameters.VersionID = TrackTunnels.VersionID AND TunnelParameters.ParameterId = Parameters.ID AND Parameters.[Index] = '1.1.1.1.8.7' AND Tunnels.VersionID = MemberStateVersions.ID AND MemberStateVersions.MemberStateID = MemberStates.ID AND TunnelParameters.[Value] is not null";
    rr:sqlVersion rr:SQL2008.
:database_010 a d2rq:Database;
    d2rq:jdbcDSN "${RINF_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${RINF_USER}";
    d2rq:password "${RINF_PWD}".
:source_011 rml:referenceFormulation ql:CSV.
:map_length_000 a rr:TriplesMap;
    rdfs:label "length".
:s_011 a rr:SubjectMap.
:map_length_000 rr:subjectMap :s_011.
:s_011 rr:template "http://data.europa.eu/949/funtionalInfrastructure/tunnels/{TUNNEL_URI}_{StartLong}{StartLat}_{EndLong}{EndLat}";
    rr:graphMap :gm_010.
:gm_010 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_033 a rr:PredicateObjectMap.
:map_length_000 rr:predicateObjectMap :pom_033.
:pm_033 a rr:PredicateMap.
:pom_033 rr:predicateMap :pm_033.
:pm_033 rr:constant era:length.
:pom_033 rr:objectMap :om_030.
:om_030 a rr:ObjectMap;
    rml:reference "Value";
    rr:termType rr:Literal;
    rr:datatype xsd:double.
:rules_000 void:exampleResource :map_cross-section-area_000.
:map_cross-section-area_000 rml:logicalSource :source_012.
:source_012 a rml:LogicalSource;
    rml:source :database_011;
    rml:query "SELECT REPLACE(Tunnels.UUID, ' ', '_') AS TUNNEL_URI, TunnelParameters.[Value], Tunnels.StartLat, Tunnels.StartLong, Tunnels.EndLat, Tunnels.EndLong, MemberStates.Code FROM RINF.dbo.TrackTunnels, RINF.dbo.Tunnels, RINF.dbo.TunnelParameters, RINF.dbo.Parameters, RINF.dbo.MemberStateVersions, RINF.dbo.MemberStates WHERE TrackTunnels.TunnelID = Tunnels.ID AND TrackTunnels.VersionID = Tunnels.VersionID AND TunnelParameters.TunnelID = TrackTunnels.TunnelID AND TunnelParameters.VersionID = TrackTunnels.VersionID AND TunnelParameters.ParameterId = Parameters.ID AND Parameters.[Index] = '1.1.1.1.8.8' AND Tunnels.VersionID = MemberStateVersions.ID AND MemberStateVersions.MemberStateID = MemberStates.ID AND TunnelParameters.[Value] is not null";
    rr:sqlVersion rr:SQL2008.
:database_011 a d2rq:Database;
    d2rq:jdbcDSN "${RINF_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${RINF_USER}";
    d2rq:password "${RINF_PWD}".
:source_012 rml:referenceFormulation ql:CSV.
:map_cross-section-area_000 a rr:TriplesMap;
    rdfs:label "cross-section-area".
:s_012 a rr:SubjectMap.
:map_cross-section-area_000 rr:subjectMap :s_012.
:s_012 rr:template "http://data.europa.eu/949/funtionalInfrastructure/tunnels/{TUNNEL_URI}_{StartLong}{StartLat}_{EndLong}{EndLat}";
    rr:graphMap :gm_011.
:gm_011 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_034 a rr:PredicateObjectMap.
:map_cross-section-area_000 rr:predicateObjectMap :pom_034.
:pm_034 a rr:PredicateMap.
:pom_034 rr:predicateMap :pm_034.
:pm_034 rr:constant era:crossSectionArea.
:pom_034 rr:objectMap :om_031.
:om_031 a rr:ObjectMap;
    rml:reference "Value";
    rr:termType rr:Literal;
    rr:datatype xsd:integer.
:rules_000 void:exampleResource :map_compliance-inf-tsi_000.
:map_compliance-inf-tsi_000 rml:logicalSource :source_013.
:source_013 a rml:LogicalSource;
    rml:source :database_012;
    rml:query "SELECT REPLACE(Tunnels.UUID, ' ', '_') AS TUNNEL_URI, LookupValues.[Value], Tunnels.StartLat, Tunnels.StartLong, Tunnels.EndLat, Tunnels.EndLong, MemberStates.Code FROM RINF.dbo.TrackTunnels, RINF.dbo.Tunnels, RINF.dbo.TunnelParameters, RINF.dbo.Parameters, RINF.dbo.LookupValues, RINF.dbo.MemberStateVersions, RINF.dbo.MemberStates WHERE TrackTunnels.TunnelID = Tunnels.ID AND TrackTunnels.VersionID = Tunnels.VersionID AND TunnelParameters.TunnelID = TrackTunnels.TunnelID AND TunnelParameters.VersionID = TrackTunnels.VersionID AND TunnelParameters.ParameterId = Parameters.ID AND Parameters.[Index] = '1.1.1.1.8.8.1' AND TunnelParameters.LookupValueID = LookupValues.ID AND Tunnels.VersionID = MemberStateVersions.ID AND MemberStateVersions.MemberStateID = MemberStates.ID AND LookupValues.[Value] is not null";
    rr:sqlVersion rr:SQL2008.
:database_012 a d2rq:Database;
    d2rq:jdbcDSN "${RINF_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${RINF_USER}";
    d2rq:password "${RINF_PWD}".
:source_013 rml:referenceFormulation ql:CSV.
:map_compliance-inf-tsi_000 a rr:TriplesMap;
    rdfs:label "compliance-inf-tsi".
:s_013 a rr:SubjectMap.
:map_compliance-inf-tsi_000 rr:subjectMap :s_013.
:s_013 rr:template "http://data.europa.eu/949/funtionalInfrastructure/tunnels/{TUNNEL_URI}_{StartLong}{StartLat}_{EndLong}{EndLat}";
    rr:graphMap :gm_012.
:gm_012 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_035 a rr:PredicateObjectMap.
:map_compliance-inf-tsi_000 rr:predicateObjectMap :pom_035.
:pm_035 a rr:PredicateMap.
:pom_035 rr:predicateMap :pm_035.
:pm_035 rr:constant era:complianceInfTsi.
:pom_035 rr:objectMap :om_032.
:om_032 a fnml:FunctionTermMap;
    rr:termType rr:Literal;
    rr:datatype xsd:boolean;
    fnml:functionValue :fn_000.
:fn_000 rml:logicalSource :source_013;
    rr:predicateObjectMap :pomexec_000.
:pomexec_000 rr:predicateMap :pmexec_000.
:pmexec_000 rr:constant fno:executes.
:pomexec_000 rr:objectMap :omexec_000.
:omexec_000 rr:constant "https://w3id.org/imec/idlab/function#trueCondition";
    rr:termType rr:IRI.
:fn_000 rr:predicateObjectMap :pom_036.
:pom_036 a rr:PredicateObjectMap;
    rr:predicateMap :pm_036.
:pm_036 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#strBoolean>.
:pom_036 rr:objectMap :om_033.
:om_033 a rr:ObjectMap, fnml:FunctionTermMap;
    fnml:functionValue :fn_001.
:fn_001 rml:logicalSource :source_013;
    rr:predicateObjectMap :pomexec_001.
:pomexec_001 rr:predicateMap :pmexec_001.
:pmexec_001 rr:constant fno:executes.
:pomexec_001 rr:objectMap :omexec_001.
:omexec_001 rr:constant "http://example.com/idlab/function/equal";
    rr:termType rr:IRI.
:fn_001 rr:predicateObjectMap :pom_037.
:pom_037 a rr:PredicateObjectMap;
    rr:predicateMap :pm_037.
:pm_037 a rr:PredicateMap;
    rr:constant grel:valueParameter.
:pom_037 rr:objectMap :om_034.
:om_034 a rr:ObjectMap;
    rml:reference "Value";
    rr:termType rr:Literal.
:fn_001 rr:predicateObjectMap :pom_038.
:pom_038 a rr:PredicateObjectMap;
    rr:predicateMap :pm_038.
:pm_038 a rr:PredicateMap;
    rr:constant grel:valueParameter2.
:pom_038 rr:objectMap :om_035.
:om_035 a rr:ObjectMap;
    rr:constant "Y";
    rr:termType rr:Literal.
:fn_000 rr:predicateObjectMap :pom_039.
:pom_039 a rr:PredicateObjectMap;
    rr:predicateMap :pm_039.
:pm_039 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#str>.
:pom_039 rr:objectMap :om_036.
:om_036 a rr:ObjectMap;
    rr:constant "true";
    rr:termType rr:Literal.
:pom_040 a rr:PredicateObjectMap.
:map_compliance-inf-tsi_000 rr:predicateObjectMap :pom_040.
:pm_040 a rr:PredicateMap.
:pom_040 rr:predicateMap :pm_040.
:pm_040 rr:constant era:complianceInfTsi.
:pom_040 rr:objectMap :om_037.
:om_037 a fnml:FunctionTermMap;
    rr:termType rr:Literal;
    rr:datatype xsd:boolean;
    fnml:functionValue :fn_002.
:fn_002 rml:logicalSource :source_013;
    rr:predicateObjectMap :pomexec_002.
:pomexec_002 rr:predicateMap :pmexec_002.
:pmexec_002 rr:constant fno:executes.
:pomexec_002 rr:objectMap :omexec_002.
:omexec_002 rr:constant "https://w3id.org/imec/idlab/function#trueCondition";
    rr:termType rr:IRI.
:fn_002 rr:predicateObjectMap :pom_041.
:pom_041 a rr:PredicateObjectMap;
    rr:predicateMap :pm_041.
:pm_041 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#strBoolean>.
:pom_041 rr:objectMap :om_038.
:om_038 a rr:ObjectMap, fnml:FunctionTermMap;
    fnml:functionValue :fn_003.
:fn_003 rml:logicalSource :source_013;
    rr:predicateObjectMap :pomexec_003.
:pomexec_003 rr:predicateMap :pmexec_003.
:pmexec_003 rr:constant fno:executes.
:pomexec_003 rr:objectMap :omexec_003.
:omexec_003 rr:constant "http://example.com/idlab/function/equal";
    rr:termType rr:IRI.
:fn_003 rr:predicateObjectMap :pom_042.
:pom_042 a rr:PredicateObjectMap;
    rr:predicateMap :pm_042.
:pm_042 a rr:PredicateMap;
    rr:constant grel:valueParameter.
:pom_042 rr:objectMap :om_039.
:om_039 a rr:ObjectMap;
    rml:reference "Value";
    rr:termType rr:Literal.
:fn_003 rr:predicateObjectMap :pom_043.
:pom_043 a rr:PredicateObjectMap;
    rr:predicateMap :pm_043.
:pm_043 a rr:PredicateMap;
    rr:constant grel:valueParameter2.
:pom_043 rr:objectMap :om_040.
:om_040 a rr:ObjectMap;
    rr:constant "N";
    rr:termType rr:Literal.
:fn_002 rr:predicateObjectMap :pom_044.
:pom_044 a rr:PredicateObjectMap;
    rr:predicateMap :pm_044.
:pm_044 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#str>.
:pom_044 rr:objectMap :om_041.
:om_041 a rr:ObjectMap;
    rr:constant "false";
    rr:termType rr:Literal.
:rules_000 void:exampleResource :map_document-reference_000.
:map_document-reference_000 rml:logicalSource :source_014.
:source_014 a rml:LogicalSource;
    rml:source :database_013;
    rml:query "SELECT REPLACE(Tunnels.UUID, ' ', '_') AS TUNNEL_URI, TunnelParameters.[Value], Tunnels.StartLat, Tunnels.StartLong, Tunnels.EndLat, Tunnels.EndLong, MemberStates.Code FROM RINF.dbo.TrackTunnels, RINF.dbo.Tunnels, RINF.dbo.TunnelParameters, RINF.dbo.Parameters, RINF.dbo.MemberStateVersions, RINF.dbo.MemberStates WHERE TrackTunnels.TunnelID = Tunnels.ID AND TrackTunnels.VersionID = Tunnels.VersionID AND TunnelParameters.TunnelID = TrackTunnels.TunnelID AND TunnelParameters.VersionID = TrackTunnels.VersionID AND TunnelParameters.ParameterId = Parameters.ID AND Parameters.[Index] = '1.1.1.1.8.8.2' AND Tunnels.VersionID = MemberStateVersions.ID AND MemberStateVersions.MemberStateID = MemberStates.ID AND TunnelParameters.[Value] is not null";
    rr:sqlVersion rr:SQL2008.
:database_013 a d2rq:Database;
    d2rq:jdbcDSN "${RINF_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${RINF_USER}";
    d2rq:password "${RINF_PWD}".
:source_014 rml:referenceFormulation ql:CSV.
:map_document-reference_000 a rr:TriplesMap;
    rdfs:label "document-reference".
:s_014 a rr:SubjectMap.
:map_document-reference_000 rr:subjectMap :s_014.
:s_014 rr:template "http://data.europa.eu/949/funtionalInfrastructure/tunnels/{TUNNEL_URI}_{StartLong}{StartLat}_{EndLong}{EndLat}";
    rr:graphMap :gm_013.
:gm_013 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_045 a rr:PredicateObjectMap.
:map_document-reference_000 rr:predicateObjectMap :pom_045.
:pm_045 a rr:PredicateMap.
:pom_045 rr:predicateMap :pm_045.
:pm_045 rr:constant era:tunnelDocRef.
:pom_045 rr:objectMap :om_042.
:om_042 a rr:ObjectMap;
    rml:reference "Value";
    rr:termType rr:Literal.
:rules_000 void:exampleResource :map_emergency-plan_000.
:map_emergency-plan_000 rml:logicalSource :source_015.
:source_015 a rml:LogicalSource;
    rml:source :database_014;
    rml:query "SELECT REPLACE(Tunnels.UUID, ' ', '_') AS TUNNEL_URI, LookupValues.[Value], Tunnels.StartLat, Tunnels.StartLong, Tunnels.EndLat, Tunnels.EndLong, MemberStates.Code FROM RINF.dbo.TrackTunnels, RINF.dbo.Tunnels, RINF.dbo.TunnelParameters, RINF.dbo.Parameters, RINF.dbo.LookupValues, RINF.dbo.MemberStateVersions, RINF.dbo.MemberStates WHERE TrackTunnels.TunnelID = Tunnels.ID AND TrackTunnels.VersionID = Tunnels.VersionID AND TunnelParameters.TunnelID = TrackTunnels.TunnelID AND TunnelParameters.VersionID = TrackTunnels.VersionID AND TunnelParameters.ParameterId = Parameters.ID AND Parameters.[Index] = '1.1.1.1.8.9' AND TunnelParameters.LookupValueID = LookupValues.ID AND Tunnels.VersionID = MemberStateVersions.ID AND MemberStateVersions.MemberStateID = MemberStates.ID AND LookupValues.[Value] is not null";
    rr:sqlVersion rr:SQL2008.
:database_014 a d2rq:Database;
    d2rq:jdbcDSN "${RINF_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${RINF_USER}";
    d2rq:password "${RINF_PWD}".
:source_015 rml:referenceFormulation ql:CSV.
:map_emergency-plan_000 a rr:TriplesMap;
    rdfs:label "emergency-plan".
:s_015 a rr:SubjectMap.
:map_emergency-plan_000 rr:subjectMap :s_015.
:s_015 rr:template "http://data.europa.eu/949/funtionalInfrastructure/tunnels/{TUNNEL_URI}_{StartLong}{StartLat}_{EndLong}{EndLat}";
    rr:graphMap :gm_014.
:gm_014 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_046 a rr:PredicateObjectMap.
:map_emergency-plan_000 rr:predicateObjectMap :pom_046.
:pm_046 a rr:PredicateMap.
:pom_046 rr:predicateMap :pm_046.
:pm_046 rr:constant era:hasEmergencyPlan.
:pom_046 rr:objectMap :om_043.
:om_043 a fnml:FunctionTermMap;
    rr:termType rr:Literal;
    rr:datatype xsd:boolean;
    fnml:functionValue :fn_004.
:fn_004 rml:logicalSource :source_015;
    rr:predicateObjectMap :pomexec_004.
:pomexec_004 rr:predicateMap :pmexec_004.
:pmexec_004 rr:constant fno:executes.
:pomexec_004 rr:objectMap :omexec_004.
:omexec_004 rr:constant "https://w3id.org/imec/idlab/function#trueCondition";
    rr:termType rr:IRI.
:fn_004 rr:predicateObjectMap :pom_047.
:pom_047 a rr:PredicateObjectMap;
    rr:predicateMap :pm_047.
:pm_047 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#strBoolean>.
:pom_047 rr:objectMap :om_044.
:om_044 a rr:ObjectMap, fnml:FunctionTermMap;
    fnml:functionValue :fn_005.
:fn_005 rml:logicalSource :source_015;
    rr:predicateObjectMap :pomexec_005.
:pomexec_005 rr:predicateMap :pmexec_005.
:pmexec_005 rr:constant fno:executes.
:pomexec_005 rr:objectMap :omexec_005.
:omexec_005 rr:constant "http://example.com/idlab/function/equal";
    rr:termType rr:IRI.
:fn_005 rr:predicateObjectMap :pom_048.
:pom_048 a rr:PredicateObjectMap;
    rr:predicateMap :pm_048.
:pm_048 a rr:PredicateMap;
    rr:constant grel:valueParameter.
:pom_048 rr:objectMap :om_045.
:om_045 a rr:ObjectMap;
    rml:reference "Value";
    rr:termType rr:Literal.
:fn_005 rr:predicateObjectMap :pom_049.
:pom_049 a rr:PredicateObjectMap;
    rr:predicateMap :pm_049.
:pm_049 a rr:PredicateMap;
    rr:constant grel:valueParameter2.
:pom_049 rr:objectMap :om_046.
:om_046 a rr:ObjectMap;
    rr:constant "Y";
    rr:termType rr:Literal.
:fn_004 rr:predicateObjectMap :pom_050.
:pom_050 a rr:PredicateObjectMap;
    rr:predicateMap :pm_050.
:pm_050 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#str>.
:pom_050 rr:objectMap :om_047.
:om_047 a rr:ObjectMap;
    rr:constant "true";
    rr:termType rr:Literal.
:pom_051 a rr:PredicateObjectMap.
:map_emergency-plan_000 rr:predicateObjectMap :pom_051.
:pm_051 a rr:PredicateMap.
:pom_051 rr:predicateMap :pm_051.
:pm_051 rr:constant era:hasEmergencyPlan.
:pom_051 rr:objectMap :om_048.
:om_048 a fnml:FunctionTermMap;
    rr:termType rr:Literal;
    rr:datatype xsd:boolean;
    fnml:functionValue :fn_006.
:fn_006 rml:logicalSource :source_015;
    rr:predicateObjectMap :pomexec_006.
:pomexec_006 rr:predicateMap :pmexec_006.
:pmexec_006 rr:constant fno:executes.
:pomexec_006 rr:objectMap :omexec_006.
:omexec_006 rr:constant "https://w3id.org/imec/idlab/function#trueCondition";
    rr:termType rr:IRI.
:fn_006 rr:predicateObjectMap :pom_052.
:pom_052 a rr:PredicateObjectMap;
    rr:predicateMap :pm_052.
:pm_052 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#strBoolean>.
:pom_052 rr:objectMap :om_049.
:om_049 a rr:ObjectMap, fnml:FunctionTermMap;
    fnml:functionValue :fn_007.
:fn_007 rml:logicalSource :source_015;
    rr:predicateObjectMap :pomexec_007.
:pomexec_007 rr:predicateMap :pmexec_007.
:pmexec_007 rr:constant fno:executes.
:pomexec_007 rr:objectMap :omexec_007.
:omexec_007 rr:constant "http://example.com/idlab/function/equal";
    rr:termType rr:IRI.
:fn_007 rr:predicateObjectMap :pom_053.
:pom_053 a rr:PredicateObjectMap;
    rr:predicateMap :pm_053.
:pm_053 a rr:PredicateMap;
    rr:constant grel:valueParameter.
:pom_053 rr:objectMap :om_050.
:om_050 a rr:ObjectMap;
    rml:reference "Value";
    rr:termType rr:Literal.
:fn_007 rr:predicateObjectMap :pom_054.
:pom_054 a rr:PredicateObjectMap;
    rr:predicateMap :pm_054.
:pm_054 a rr:PredicateMap;
    rr:constant grel:valueParameter2.
:pom_054 rr:objectMap :om_051.
:om_051 a rr:ObjectMap;
    rr:constant "N";
    rr:termType rr:Literal.
:fn_006 rr:predicateObjectMap :pom_055.
:pom_055 a rr:PredicateObjectMap;
    rr:predicateMap :pm_055.
:pm_055 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#str>.
:pom_055 rr:objectMap :om_052.
:om_052 a rr:ObjectMap;
    rr:constant "false";
    rr:termType rr:Literal.
:rules_000 void:exampleResource :map_required-rolling-stock-fire-category_000.
:map_required-rolling-stock-fire-category_000 rml:logicalSource :source_016.
:source_016 a rml:LogicalSource;
    rml:source :database_015;
    rml:query "SELECT REPLACE(Tunnels.UUID, ' ', '_') AS TUNNEL_URI, LookupValues.[Value], Tunnels.StartLat, Tunnels.StartLong, Tunnels.EndLat, Tunnels.EndLong, MemberStates.Code FROM RINF.dbo.TrackTunnels, RINF.dbo.Tunnels, RINF.dbo.TunnelParameters, RINF.dbo.Parameters, RINF.dbo.LookupValues, RINF.dbo.MemberStateVersions, RINF.dbo.MemberStates WHERE TrackTunnels.TunnelID = Tunnels.ID AND TrackTunnels.VersionID = Tunnels.VersionID AND TunnelParameters.TunnelID = TrackTunnels.TunnelID AND TunnelParameters.VersionID = TrackTunnels.VersionID AND TunnelParameters.ParameterId = Parameters.ID AND Parameters.[Index] = '1.1.1.1.8.10' AND TunnelParameters.LookupValueID = LookupValues.ID AND Tunnels.VersionID = MemberStateVersions.ID AND MemberStateVersions.MemberStateID = MemberStates.ID;";
    rr:sqlVersion rr:SQL2008.
:database_015 a d2rq:Database;
    d2rq:jdbcDSN "${RINF_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${RINF_USER}";
    d2rq:password "${RINF_PWD}".
:source_016 rml:referenceFormulation ql:CSV.
:map_required-rolling-stock-fire-category_000 a rr:TriplesMap;
    rdfs:label "required-rolling-stock-fire-category".
:s_016 a rr:SubjectMap.
:map_required-rolling-stock-fire-category_000 rr:subjectMap :s_016.
:s_016 rr:template "http://data.europa.eu/949/funtionalInfrastructure/tunnels/{TUNNEL_URI}_{StartLong}{StartLat}_{EndLong}{EndLat}";
    rr:graphMap :gm_015.
:gm_015 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_056 a rr:PredicateObjectMap.
:map_required-rolling-stock-fire-category_000 rr:predicateObjectMap :pom_056.
:pm_056 a rr:PredicateMap.
:pom_056 rr:predicateMap :pm_056.
:pm_056 rr:constant era:rollingStockFireCategory.
:pom_056 rr:objectMap :om_053.
:om_053 a fnml:FunctionTermMap;
    rr:termType rr:IRI;
    fnml:functionValue :fn_008.
:fn_008 rml:logicalSource :source_016;
    rr:predicateObjectMap :pomexec_008.
:pomexec_008 rr:predicateMap :pmexec_008.
:pmexec_008 rr:constant fno:executes.
:pomexec_008 rr:objectMap :omexec_008.
:omexec_008 rr:constant "https://w3id.org/imec/idlab/function#trueCondition";
    rr:termType rr:IRI.
:fn_008 rr:predicateObjectMap :pom_057.
:pom_057 a rr:PredicateObjectMap;
    rr:predicateMap :pm_057.
:pm_057 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#strBoolean>.
:pom_057 rr:objectMap :om_054.
:om_054 a rr:ObjectMap, fnml:FunctionTermMap;
    fnml:functionValue :fn_009.
:fn_009 rml:logicalSource :source_016;
    rr:predicateObjectMap :pomexec_009.
:pomexec_009 rr:predicateMap :pmexec_009.
:pmexec_009 rr:constant fno:executes.
:pomexec_009 rr:objectMap :omexec_009.
:omexec_009 rr:constant "http://example.com/idlab/function/equal";
    rr:termType rr:IRI.
:fn_009 rr:predicateObjectMap :pom_058.
:pom_058 a rr:PredicateObjectMap;
    rr:predicateMap :pm_058.
:pm_058 a rr:PredicateMap;
    rr:constant grel:valueParameter.
:pom_058 rr:objectMap :om_055.
:om_055 a rr:ObjectMap;
    rml:reference "Value";
    rr:termType rr:Literal.
:fn_009 rr:predicateObjectMap :pom_059.
:pom_059 a rr:PredicateObjectMap;
    rr:predicateMap :pm_059.
:pm_059 a rr:PredicateMap;
    rr:constant grel:valueParameter2.
:pom_059 rr:objectMap :om_056.
:om_056 a rr:ObjectMap;
    rr:constant "A";
    rr:termType rr:Literal.
:fn_008 rr:predicateObjectMap :pom_060.
:pom_060 a rr:PredicateObjectMap;
    rr:predicateMap :pm_060.
:pm_060 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#str>.
:pom_060 rr:objectMap :om_057.
:om_057 a rr:ObjectMap;
    rr:constant "http://data.europa.eu/949/concepts/rolling-stock-fire/a";
    rr:termType rr:IRI.
:pom_061 a rr:PredicateObjectMap.
:map_required-rolling-stock-fire-category_000 rr:predicateObjectMap :pom_061.
:pm_061 a rr:PredicateMap.
:pom_061 rr:predicateMap :pm_061.
:pm_061 rr:constant era:rollingStockFireCategory.
:pom_061 rr:objectMap :om_058.
:om_058 a fnml:FunctionTermMap;
    rr:termType rr:IRI;
    fnml:functionValue :fn_010.
:fn_010 rml:logicalSource :source_016;
    rr:predicateObjectMap :pomexec_010.
:pomexec_010 rr:predicateMap :pmexec_010.
:pmexec_010 rr:constant fno:executes.
:pomexec_010 rr:objectMap :omexec_010.
:omexec_010 rr:constant "https://w3id.org/imec/idlab/function#trueCondition";
    rr:termType rr:IRI.
:fn_010 rr:predicateObjectMap :pom_062.
:pom_062 a rr:PredicateObjectMap;
    rr:predicateMap :pm_062.
:pm_062 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#strBoolean>.
:pom_062 rr:objectMap :om_059.
:om_059 a rr:ObjectMap, fnml:FunctionTermMap;
    fnml:functionValue :fn_011.
:fn_011 rml:logicalSource :source_016;
    rr:predicateObjectMap :pomexec_011.
:pomexec_011 rr:predicateMap :pmexec_011.
:pmexec_011 rr:constant fno:executes.
:pomexec_011 rr:objectMap :omexec_011.
:omexec_011 rr:constant "http://example.com/idlab/function/equal";
    rr:termType rr:IRI.
:fn_011 rr:predicateObjectMap :pom_063.
:pom_063 a rr:PredicateObjectMap;
    rr:predicateMap :pm_063.
:pm_063 a rr:PredicateMap;
    rr:constant grel:valueParameter.
:pom_063 rr:objectMap :om_060.
:om_060 a rr:ObjectMap;
    rml:reference "Value";
    rr:termType rr:Literal.
:fn_011 rr:predicateObjectMap :pom_064.
:pom_064 a rr:PredicateObjectMap;
    rr:predicateMap :pm_064.
:pm_064 a rr:PredicateMap;
    rr:constant grel:valueParameter2.
:pom_064 rr:objectMap :om_061.
:om_061 a rr:ObjectMap;
    rr:constant "B";
    rr:termType rr:Literal.
:fn_010 rr:predicateObjectMap :pom_065.
:pom_065 a rr:PredicateObjectMap;
    rr:predicateMap :pm_065.
:pm_065 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#str>.
:pom_065 rr:objectMap :om_062.
:om_062 a rr:ObjectMap;
    rr:constant "http://data.europa.eu/949/concepts/rolling-stock-fire/b";
    rr:termType rr:IRI.
:pom_066 a rr:PredicateObjectMap.
:map_required-rolling-stock-fire-category_000 rr:predicateObjectMap :pom_066.
:pm_066 a rr:PredicateMap.
:pom_066 rr:predicateMap :pm_066.
:pm_066 rr:constant era:rollingStockFireCategory.
:pom_066 rr:objectMap :om_063.
:om_063 a fnml:FunctionTermMap;
    rr:termType rr:IRI;
    fnml:functionValue :fn_012.
:fn_012 rml:logicalSource :source_016;
    rr:predicateObjectMap :pomexec_012.
:pomexec_012 rr:predicateMap :pmexec_012.
:pmexec_012 rr:constant fno:executes.
:pomexec_012 rr:objectMap :omexec_012.
:omexec_012 rr:constant "https://w3id.org/imec/idlab/function#trueCondition";
    rr:termType rr:IRI.
:fn_012 rr:predicateObjectMap :pom_067.
:pom_067 a rr:PredicateObjectMap;
    rr:predicateMap :pm_067.
:pm_067 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#strBoolean>.
:pom_067 rr:objectMap :om_064.
:om_064 a rr:ObjectMap, fnml:FunctionTermMap;
    fnml:functionValue :fn_013.
:fn_013 rml:logicalSource :source_016;
    rr:predicateObjectMap :pomexec_013.
:pomexec_013 rr:predicateMap :pmexec_013.
:pmexec_013 rr:constant fno:executes.
:pomexec_013 rr:objectMap :omexec_013.
:omexec_013 rr:constant "http://example.com/idlab/function/equal";
    rr:termType rr:IRI.
:fn_013 rr:predicateObjectMap :pom_068.
:pom_068 a rr:PredicateObjectMap;
    rr:predicateMap :pm_068.
:pm_068 a rr:PredicateMap;
    rr:constant grel:valueParameter.
:pom_068 rr:objectMap :om_065.
:om_065 a rr:ObjectMap;
    rml:reference "Value";
    rr:termType rr:Literal.
:fn_013 rr:predicateObjectMap :pom_069.
:pom_069 a rr:PredicateObjectMap;
    rr:predicateMap :pm_069.
:pm_069 a rr:PredicateMap;
    rr:constant grel:valueParameter2.
:pom_069 rr:objectMap :om_066.
:om_066 a rr:ObjectMap;
    rr:constant "none";
    rr:termType rr:Literal.
:fn_012 rr:predicateObjectMap :pom_070.
:pom_070 a rr:PredicateObjectMap;
    rr:predicateMap :pm_070.
:pm_070 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#str>.
:pom_070 rr:objectMap :om_067.
:om_067 a rr:ObjectMap;
    rr:constant "http://data.europa.eu/949/concepts/rolling-stock-fire/none";
    rr:termType rr:IRI.
:rules_000 void:exampleResource :map_sol-required-national-rolling-stock-fire-category_000.
:map_sol-required-national-rolling-stock-fire-category_000 rml:logicalSource :source_017.
:source_017 a rml:LogicalSource;
    rml:source :database_016;
    rml:query "SELECT REPLACE(Tunnels.UUID, ' ', '_') AS TUNNEL_URI, TunnelParameters.[Value], Tunnels.StartLat, Tunnels.StartLong, Tunnels.EndLat, Tunnels.EndLong, MemberStates.Code FROM RINF.dbo.TrackTunnels, RINF.dbo.Tunnels, RINF.dbo.TunnelParameters, RINF.dbo.Parameters, RINF.dbo.MemberStateVersions, RINF.dbo.MemberStates WHERE TrackTunnels.TunnelID = Tunnels.ID AND TrackTunnels.VersionID = Tunnels.VersionID AND TunnelParameters.TunnelID = TrackTunnels.TunnelID AND TunnelParameters.VersionID = TrackTunnels.VersionID AND TunnelParameters.ParameterId = Parameters.ID AND TunnelParameters.[Value] IS NOT NULL AND Parameters.[Index] IN ('1.1.1.1.8.11') AND Tunnels.VersionID = MemberStateVersions.ID AND MemberStateVersions.MemberStateID = MemberStates.ID;";
    rr:sqlVersion rr:SQL2008.
:database_016 a d2rq:Database;
    d2rq:jdbcDSN "${RINF_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${RINF_USER}";
    d2rq:password "${RINF_PWD}".
:source_017 rml:referenceFormulation ql:CSV.
:map_sol-required-national-rolling-stock-fire-category_000 a rr:TriplesMap;
    rdfs:label "sol-required-national-rolling-stock-fire-category".
:s_017 a rr:SubjectMap.
:map_sol-required-national-rolling-stock-fire-category_000 rr:subjectMap :s_017.
:s_017 rr:template "http://data.europa.eu/949/funtionalInfrastructure/tunnels/{TUNNEL_URI}_{StartLong}{StartLat}_{EndLong}{EndLat}";
    rr:graphMap :gm_016.
:gm_016 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_071 a rr:PredicateObjectMap.
:map_sol-required-national-rolling-stock-fire-category_000 rr:predicateObjectMap :pom_071.
:pm_071 a rr:PredicateMap.
:pom_071 rr:predicateMap :pm_071.
:pm_071 rr:constant era:nationalRollingStockFireCategory.
:pom_071 rr:objectMap :om_068.
:om_068 a rr:ObjectMap;
    rml:reference "Value";
    rr:termType rr:Literal.
:rules_000 void:exampleResource :map_opt-verification_000.
:map_opt-verification_000 rml:logicalSource :source_018.
:source_018 a rml:LogicalSource;
    rml:source :database_017;
    rml:query "SELECT REPLACE(Tunnels.UUID, ' ', '_') AS TUNNEL_URI, TunnelParameters.[Value], Tracks.UUID AS TRACK_ID, LTRIM(RTRIM(OperationalPoints.UOPID)) AS UOPID FROM RINF.dbo.TunnelParameters, RINF.dbo.Parameters, RINF.dbo.TrackTunnels, RINF.dbo.Tunnels, RINF.dbo.Tracks, RINF.dbo.OPTracks, RINF.dbo.OperationalPoints WHERE TrackTunnels.TunnelID = Tunnels.ID AND TrackTunnels.VersionID = Tunnels.VersionID AND TrackTunnels.TrackID = OPTracks.TrackID AND TrackTunnels.VersionID = OPTracks.VersionID AND OPTracks.TrackID = Tracks.ID AND OPTracks.VersionID = Tracks.VersionID AND OPTracks.OperationalPointID = OperationalPoints.ID AND OPTracks.VersionID = OperationalPoints.VersionID AND TunnelParameters.TunnelID = TrackTunnels.TunnelID AND TunnelParameters.VersionID = TrackTunnels.VersionID AND TunnelParameters.ParameterID = Parameters.ID AND Parameters.[Index] IN ('1.2.1.0.5.3') AND TunnelParameters.[Value] IS NOT NULL";
    rr:sqlVersion rr:SQL2008.
:database_017 a d2rq:Database;
    d2rq:jdbcDSN "${RINF_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${RINF_USER}";
    d2rq:password "${RINF_PWD}".
:source_018 rml:referenceFormulation ql:CSV.
:map_opt-verification_000 a rr:TriplesMap;
    rdfs:label "opt-verification".
:s_018 a rr:SubjectMap.
:map_opt-verification_000 rr:subjectMap :s_018.
:s_018 rr:template "http://data.europa.eu/949/funtionalInfrastructure/tunnels/{UOPID}_{TRACK_ID}_{TUNNEL_URI}";
    rr:graphMap :gm_017.
:gm_017 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_072 a rr:PredicateObjectMap.
:map_opt-verification_000 rr:predicateObjectMap :pom_072.
:pm_072 a rr:PredicateMap.
:pom_072 rr:predicateMap :pm_072.
:pm_072 rr:constant era:verificationSRT.
:pom_072 rr:objectMap :om_069.
:om_069 a rr:ObjectMap;
    rml:reference "Value";
    rr:termType rr:Literal.
:rules_000 void:exampleResource :map_opt-demonstration_000.
:map_opt-demonstration_000 rml:logicalSource :source_019.
:source_019 a rml:LogicalSource;
    rml:source :database_018;
    rml:query "SELECT REPLACE(Tunnels.UUID, ' ', '_') AS TUNNEL_URI, TunnelParameters.[Value], Tracks.UUID AS TRACK_ID, LTRIM(RTRIM(OperationalPoints.UOPID)) AS UOPID FROM RINF.dbo.TunnelParameters, RINF.dbo.Parameters, RINF.dbo.TrackTunnels, RINF.dbo.Tunnels, RINF.dbo.Tracks, RINF.dbo.OPTracks, RINF.dbo.OperationalPoints WHERE TrackTunnels.TunnelID = Tunnels.ID AND TrackTunnels.VersionID = Tunnels.VersionID AND TrackTunnels.TrackID = OPTracks.TrackID AND TrackTunnels.VersionID = OPTracks.VersionID AND OPTracks.TrackID = Tracks.ID AND OPTracks.VersionID = Tracks.VersionID AND OPTracks.OperationalPointID = OperationalPoints.ID AND OPTracks.VersionID = OperationalPoints.VersionID AND TunnelParameters.TunnelID = TrackTunnels.TunnelID AND TunnelParameters.VersionID = TrackTunnels.VersionID AND TunnelParameters.ParameterID = Parameters.ID AND Parameters.[Index] IN ('1.2.1.0.5.3') AND TunnelParameters.[Value] IS NOT NULL";
    rr:sqlVersion rr:SQL2008.
:database_018 a d2rq:Database;
    d2rq:jdbcDSN "${RINF_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${RINF_USER}";
    d2rq:password "${RINF_PWD}".
:source_019 rml:referenceFormulation ql:CSV.
:map_opt-demonstration_000 a rr:TriplesMap;
    rdfs:label "opt-demonstration".
:s_019 a rr:SubjectMap.
:map_opt-demonstration_000 rr:subjectMap :s_019.
:s_019 rr:template "http://data.europa.eu/949/funtionalInfrastructure/tunnels/{UOPID}_{TRACK_ID}_{TUNNEL_URI}";
    rr:graphMap :gm_018.
:gm_018 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_073 a rr:PredicateObjectMap.
:map_opt-demonstration_000 rr:predicateObjectMap :pom_073.
:pm_073 a rr:PredicateMap.
:pom_073 rr:predicateMap :pm_073.
:pm_073 rr:constant era:demonstrationSRT.
:pom_073 rr:objectMap :om_070.
:om_070 a rr:ObjectMap;
    rml:reference "Value";
    rr:termType rr:Literal.
:rules_000 void:exampleResource :map_opt-length_000.
:map_opt-length_000 rml:logicalSource :source_020.
:source_020 a rml:LogicalSource;
    rml:source :database_019;
    rml:query "SELECT REPLACE(Tunnels.UUID, ' ', '_') AS TUNNEL_URI, TunnelParameters.[Value], Tracks.UUID AS TRACK_ID, LTRIM(RTRIM(OperationalPoints.UOPID)) AS UOPID FROM RINF.dbo.TunnelParameters, RINF.dbo.Parameters, RINF.dbo.TrackTunnels, RINF.dbo.Tunnels, RINF.dbo.Tracks, RINF.dbo.OPTracks, RINF.dbo.OperationalPoints WHERE TrackTunnels.TunnelID = Tunnels.ID AND TrackTunnels.VersionID = Tunnels.VersionID AND TrackTunnels.TrackID = OPTracks.TrackID AND TrackTunnels.VersionID = OPTracks.VersionID AND OPTracks.TrackID = Tracks.ID AND OPTracks.VersionID = Tracks.VersionID AND OPTracks.OperationalPointID = OperationalPoints.ID AND OPTracks.VersionID = OperationalPoints.VersionID AND TunnelParameters.TunnelID = TrackTunnels.TunnelID AND TunnelParameters.VersionID = TrackTunnels.VersionID AND TunnelParameters.ParameterID = Parameters.ID AND Parameters.[Index] IN ('1.2.1.0.5.5') AND TunnelParameters.[Value] IS NOT NULL";
    rr:sqlVersion rr:SQL2008.
:database_019 a d2rq:Database;
    d2rq:jdbcDSN "${RINF_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${RINF_USER}";
    d2rq:password "${RINF_PWD}".
:source_020 rml:referenceFormulation ql:CSV.
:map_opt-length_000 a rr:TriplesMap;
    rdfs:label "opt-length".
:s_020 a rr:SubjectMap.
:map_opt-length_000 rr:subjectMap :s_020.
:s_020 rr:template "http://data.europa.eu/949/funtionalInfrastructure/tunnels/{UOPID}_{TRACK_ID}_{TUNNEL_URI}";
    rr:graphMap :gm_019.
:gm_019 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_074 a rr:PredicateObjectMap.
:map_opt-length_000 rr:predicateObjectMap :pom_074.
:pm_074 a rr:PredicateMap.
:pom_074 rr:predicateMap :pm_074.
:pm_074 rr:constant era:length.
:pom_074 rr:objectMap :om_071.
:om_071 a rr:ObjectMap;
    rml:reference "Value";
    rr:termType rr:Literal;
    rr:datatype xsd:double.
:rules_000 void:exampleResource :map_opt-emergency-plan_000.
:map_opt-emergency-plan_000 rml:logicalSource :source_021.
:source_021 a rml:LogicalSource;
    rml:source :database_020;
    rml:query "SELECT REPLACE(Tunnels.UUID, ' ', '_') AS TUNNEL_URI, LookupValues.[Value], Tracks.UUID AS TRACK_ID, LTRIM(RTRIM(OperationalPoints.UOPID)) AS UOPID FROM RINF.dbo.TrackTunnels, RINF.dbo.Tunnels, RINF.dbo.TunnelParameters, RINF.dbo.Parameters, RINF.dbo.LookupValues, RINF.dbo.Tracks, RINF.dbo.OPTracks, RINF.dbo.OperationalPoints WHERE TrackTunnels.TunnelID = Tunnels.ID AND TrackTunnels.VersionID = Tunnels.VersionID AND TrackTunnels.TrackID = OPTracks.TrackID AND TrackTunnels.VersionID = OPTracks.VersionID AND OPTracks.TrackID = Tracks.ID AND OPTracks.VersionID = Tracks.VersionID AND OPTracks.OperationalPointID = OperationalPoints.ID AND OPTracks.VersionID = OperationalPoints.VersionID AND TunnelParameters.TunnelID = TrackTunnels.TunnelID AND TunnelParameters.VersionID = TrackTunnels.VersionID AND TunnelParameters.ParameterId = Parameters.ID AND Parameters.[Index] IN ('1.2.1.0.5.6') AND TunnelParameters.LookupValueID IS NOT NULL AND TunnelParameters.LookupValueID = LookupValues.ID;";
    rr:sqlVersion rr:SQL2008.
:database_020 a d2rq:Database;
    d2rq:jdbcDSN "${RINF_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${RINF_USER}";
    d2rq:password "${RINF_PWD}".
:source_021 rml:referenceFormulation ql:CSV.
:map_opt-emergency-plan_000 a rr:TriplesMap;
    rdfs:label "opt-emergency-plan".
:s_021 a rr:SubjectMap.
:map_opt-emergency-plan_000 rr:subjectMap :s_021.
:s_021 rr:template "http://data.europa.eu/949/funtionalInfrastructure/tunnels/{UOPID}_{TRACK_ID}_{TUNNEL_URI}";
    rr:graphMap :gm_020.
:gm_020 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_075 a rr:PredicateObjectMap.
:map_opt-emergency-plan_000 rr:predicateObjectMap :pom_075.
:pm_075 a rr:PredicateMap.
:pom_075 rr:predicateMap :pm_075.
:pm_075 rr:constant era:hasEmergencyPlan.
:pom_075 rr:objectMap :om_072.
:om_072 a fnml:FunctionTermMap;
    rr:termType rr:Literal;
    rr:datatype xsd:boolean;
    fnml:functionValue :fn_014.
:fn_014 rml:logicalSource :source_021;
    rr:predicateObjectMap :pomexec_014.
:pomexec_014 rr:predicateMap :pmexec_014.
:pmexec_014 rr:constant fno:executes.
:pomexec_014 rr:objectMap :omexec_014.
:omexec_014 rr:constant "https://w3id.org/imec/idlab/function#trueCondition";
    rr:termType rr:IRI.
:fn_014 rr:predicateObjectMap :pom_076.
:pom_076 a rr:PredicateObjectMap;
    rr:predicateMap :pm_076.
:pm_076 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#strBoolean>.
:pom_076 rr:objectMap :om_073.
:om_073 a rr:ObjectMap, fnml:FunctionTermMap;
    fnml:functionValue :fn_015.
:fn_015 rml:logicalSource :source_021;
    rr:predicateObjectMap :pomexec_015.
:pomexec_015 rr:predicateMap :pmexec_015.
:pmexec_015 rr:constant fno:executes.
:pomexec_015 rr:objectMap :omexec_015.
:omexec_015 rr:constant "http://example.com/idlab/function/equal";
    rr:termType rr:IRI.
:fn_015 rr:predicateObjectMap :pom_077.
:pom_077 a rr:PredicateObjectMap;
    rr:predicateMap :pm_077.
:pm_077 a rr:PredicateMap;
    rr:constant grel:valueParameter.
:pom_077 rr:objectMap :om_074.
:om_074 a rr:ObjectMap;
    rml:reference "Value";
    rr:termType rr:Literal.
:fn_015 rr:predicateObjectMap :pom_078.
:pom_078 a rr:PredicateObjectMap;
    rr:predicateMap :pm_078.
:pm_078 a rr:PredicateMap;
    rr:constant grel:valueParameter2.
:pom_078 rr:objectMap :om_075.
:om_075 a rr:ObjectMap;
    rr:constant "Y";
    rr:termType rr:Literal.
:fn_014 rr:predicateObjectMap :pom_079.
:pom_079 a rr:PredicateObjectMap;
    rr:predicateMap :pm_079.
:pm_079 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#str>.
:pom_079 rr:objectMap :om_076.
:om_076 a rr:ObjectMap;
    rr:constant "true";
    rr:termType rr:Literal.
:pom_080 a rr:PredicateObjectMap.
:map_opt-emergency-plan_000 rr:predicateObjectMap :pom_080.
:pm_080 a rr:PredicateMap.
:pom_080 rr:predicateMap :pm_080.
:pm_080 rr:constant era:hasEmergencyPlan.
:pom_080 rr:objectMap :om_077.
:om_077 a fnml:FunctionTermMap;
    rr:termType rr:Literal;
    rr:datatype xsd:boolean;
    fnml:functionValue :fn_016.
:fn_016 rml:logicalSource :source_021;
    rr:predicateObjectMap :pomexec_016.
:pomexec_016 rr:predicateMap :pmexec_016.
:pmexec_016 rr:constant fno:executes.
:pomexec_016 rr:objectMap :omexec_016.
:omexec_016 rr:constant "https://w3id.org/imec/idlab/function#trueCondition";
    rr:termType rr:IRI.
:fn_016 rr:predicateObjectMap :pom_081.
:pom_081 a rr:PredicateObjectMap;
    rr:predicateMap :pm_081.
:pm_081 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#strBoolean>.
:pom_081 rr:objectMap :om_078.
:om_078 a rr:ObjectMap, fnml:FunctionTermMap;
    fnml:functionValue :fn_017.
:fn_017 rml:logicalSource :source_021;
    rr:predicateObjectMap :pomexec_017.
:pomexec_017 rr:predicateMap :pmexec_017.
:pmexec_017 rr:constant fno:executes.
:pomexec_017 rr:objectMap :omexec_017.
:omexec_017 rr:constant "http://example.com/idlab/function/equal";
    rr:termType rr:IRI.
:fn_017 rr:predicateObjectMap :pom_082.
:pom_082 a rr:PredicateObjectMap;
    rr:predicateMap :pm_082.
:pm_082 a rr:PredicateMap;
    rr:constant grel:valueParameter.
:pom_082 rr:objectMap :om_079.
:om_079 a rr:ObjectMap;
    rml:reference "Value";
    rr:termType rr:Literal.
:fn_017 rr:predicateObjectMap :pom_083.
:pom_083 a rr:PredicateObjectMap;
    rr:predicateMap :pm_083.
:pm_083 a rr:PredicateMap;
    rr:constant grel:valueParameter2.
:pom_083 rr:objectMap :om_080.
:om_080 a rr:ObjectMap;
    rr:constant "N";
    rr:termType rr:Literal.
:fn_016 rr:predicateObjectMap :pom_084.
:pom_084 a rr:PredicateObjectMap;
    rr:predicateMap :pm_084.
:pm_084 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#str>.
:pom_084 rr:objectMap :om_081.
:om_081 a rr:ObjectMap;
    rr:constant "false";
    rr:termType rr:Literal.
:rules_000 void:exampleResource :map_opt-required-rolling-stock-fire-category_000.
:map_opt-required-rolling-stock-fire-category_000 rml:logicalSource :source_022.
:source_022 a rml:LogicalSource;
    rml:source :database_021;
    rml:query "SELECT REPLACE(Tunnels.UUID, ' ', '_') AS TUNNEL_URI, LookupValues.[Value], Tracks.UUID AS TRACK_ID, LTRIM(RTRIM(OperationalPoints.UOPID)) AS UOPID FROM RINF.dbo.TrackTunnels, RINF.dbo.Tunnels, RINF.dbo.TunnelParameters, RINF.dbo.Parameters, RINF.dbo.LookupValues, RINF.dbo.Tracks, RINF.dbo.OPTracks, RINF.dbo.OperationalPoints WHERE TrackTunnels.TunnelID = Tunnels.ID AND TrackTunnels.VersionID = Tunnels.VersionID AND TrackTunnels.TrackID = OPTracks.TrackID AND TrackTunnels.VersionID = OPTracks.VersionID AND OPTracks.TrackID = Tracks.ID AND OPTracks.VersionID = Tracks.VersionID AND OPTracks.OperationalPointID = OperationalPoints.ID AND OPTracks.VersionID = OperationalPoints.VersionID AND TunnelParameters.TunnelID = TrackTunnels.TunnelID AND TunnelParameters.VersionID = TrackTunnels.VersionID AND TunnelParameters.ParameterId = Parameters.ID AND Parameters.[Index] IN ('1.2.1.0.5.7') AND TunnelParameters.LookupValueID IS NOT NULL AND TunnelParameters.LookupValueID = LookupValues.ID;";
    rr:sqlVersion rr:SQL2008.
:database_021 a d2rq:Database;
    d2rq:jdbcDSN "${RINF_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${RINF_USER}";
    d2rq:password "${RINF_PWD}".
:source_022 rml:referenceFormulation ql:CSV.
:map_opt-required-rolling-stock-fire-category_000 a rr:TriplesMap;
    rdfs:label "opt-required-rolling-stock-fire-category".
:s_022 a rr:SubjectMap.
:map_opt-required-rolling-stock-fire-category_000 rr:subjectMap :s_022.
:s_022 rr:template "http://data.europa.eu/949/funtionalInfrastructure/tunnels/{UOPID}_{TRACK_ID}_{TUNNEL_URI}";
    rr:graphMap :gm_021.
:gm_021 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_085 a rr:PredicateObjectMap.
:map_opt-required-rolling-stock-fire-category_000 rr:predicateObjectMap :pom_085.
:pm_085 a rr:PredicateMap.
:pom_085 rr:predicateMap :pm_085.
:pm_085 rr:constant era:rollingStockFireCategory.
:pom_085 rr:objectMap :om_082.
:om_082 a fnml:FunctionTermMap;
    rr:termType rr:IRI;
    fnml:functionValue :fn_018.
:fn_018 rml:logicalSource :source_022;
    rr:predicateObjectMap :pomexec_018.
:pomexec_018 rr:predicateMap :pmexec_018.
:pmexec_018 rr:constant fno:executes.
:pomexec_018 rr:objectMap :omexec_018.
:omexec_018 rr:constant "https://w3id.org/imec/idlab/function#trueCondition";
    rr:termType rr:IRI.
:fn_018 rr:predicateObjectMap :pom_086.
:pom_086 a rr:PredicateObjectMap;
    rr:predicateMap :pm_086.
:pm_086 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#strBoolean>.
:pom_086 rr:objectMap :om_083.
:om_083 a rr:ObjectMap, fnml:FunctionTermMap;
    fnml:functionValue :fn_019.
:fn_019 rml:logicalSource :source_022;
    rr:predicateObjectMap :pomexec_019.
:pomexec_019 rr:predicateMap :pmexec_019.
:pmexec_019 rr:constant fno:executes.
:pomexec_019 rr:objectMap :omexec_019.
:omexec_019 rr:constant "http://example.com/idlab/function/equal";
    rr:termType rr:IRI.
:fn_019 rr:predicateObjectMap :pom_087.
:pom_087 a rr:PredicateObjectMap;
    rr:predicateMap :pm_087.
:pm_087 a rr:PredicateMap;
    rr:constant grel:valueParameter.
:pom_087 rr:objectMap :om_084.
:om_084 a rr:ObjectMap;
    rml:reference "Value";
    rr:termType rr:Literal.
:fn_019 rr:predicateObjectMap :pom_088.
:pom_088 a rr:PredicateObjectMap;
    rr:predicateMap :pm_088.
:pm_088 a rr:PredicateMap;
    rr:constant grel:valueParameter2.
:pom_088 rr:objectMap :om_085.
:om_085 a rr:ObjectMap;
    rr:constant "A";
    rr:termType rr:Literal.
:fn_018 rr:predicateObjectMap :pom_089.
:pom_089 a rr:PredicateObjectMap;
    rr:predicateMap :pm_089.
:pm_089 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#str>.
:pom_089 rr:objectMap :om_086.
:om_086 a rr:ObjectMap;
    rr:constant "http://data.europa.eu/949/concepts/rolling-stock-fire/a";
    rr:termType rr:IRI.
:pom_090 a rr:PredicateObjectMap.
:map_opt-required-rolling-stock-fire-category_000 rr:predicateObjectMap :pom_090.
:pm_090 a rr:PredicateMap.
:pom_090 rr:predicateMap :pm_090.
:pm_090 rr:constant era:rollingStockFireCategory.
:pom_090 rr:objectMap :om_087.
:om_087 a fnml:FunctionTermMap;
    rr:termType rr:IRI;
    fnml:functionValue :fn_020.
:fn_020 rml:logicalSource :source_022;
    rr:predicateObjectMap :pomexec_020.
:pomexec_020 rr:predicateMap :pmexec_020.
:pmexec_020 rr:constant fno:executes.
:pomexec_020 rr:objectMap :omexec_020.
:omexec_020 rr:constant "https://w3id.org/imec/idlab/function#trueCondition";
    rr:termType rr:IRI.
:fn_020 rr:predicateObjectMap :pom_091.
:pom_091 a rr:PredicateObjectMap;
    rr:predicateMap :pm_091.
:pm_091 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#strBoolean>.
:pom_091 rr:objectMap :om_088.
:om_088 a rr:ObjectMap, fnml:FunctionTermMap;
    fnml:functionValue :fn_021.
:fn_021 rml:logicalSource :source_022;
    rr:predicateObjectMap :pomexec_021.
:pomexec_021 rr:predicateMap :pmexec_021.
:pmexec_021 rr:constant fno:executes.
:pomexec_021 rr:objectMap :omexec_021.
:omexec_021 rr:constant "http://example.com/idlab/function/equal";
    rr:termType rr:IRI.
:fn_021 rr:predicateObjectMap :pom_092.
:pom_092 a rr:PredicateObjectMap;
    rr:predicateMap :pm_092.
:pm_092 a rr:PredicateMap;
    rr:constant grel:valueParameter.
:pom_092 rr:objectMap :om_089.
:om_089 a rr:ObjectMap;
    rml:reference "Value";
    rr:termType rr:Literal.
:fn_021 rr:predicateObjectMap :pom_093.
:pom_093 a rr:PredicateObjectMap;
    rr:predicateMap :pm_093.
:pm_093 a rr:PredicateMap;
    rr:constant grel:valueParameter2.
:pom_093 rr:objectMap :om_090.
:om_090 a rr:ObjectMap;
    rr:constant "B";
    rr:termType rr:Literal.
:fn_020 rr:predicateObjectMap :pom_094.
:pom_094 a rr:PredicateObjectMap;
    rr:predicateMap :pm_094.
:pm_094 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#str>.
:pom_094 rr:objectMap :om_091.
:om_091 a rr:ObjectMap;
    rr:constant "http://data.europa.eu/949/concepts/rolling-stock-fire/b";
    rr:termType rr:IRI.
:pom_095 a rr:PredicateObjectMap.
:map_opt-required-rolling-stock-fire-category_000 rr:predicateObjectMap :pom_095.
:pm_095 a rr:PredicateMap.
:pom_095 rr:predicateMap :pm_095.
:pm_095 rr:constant era:rollingStockFireCategory.
:pom_095 rr:objectMap :om_092.
:om_092 a fnml:FunctionTermMap;
    rr:termType rr:IRI;
    fnml:functionValue :fn_022.
:fn_022 rml:logicalSource :source_022;
    rr:predicateObjectMap :pomexec_022.
:pomexec_022 rr:predicateMap :pmexec_022.
:pmexec_022 rr:constant fno:executes.
:pomexec_022 rr:objectMap :omexec_022.
:omexec_022 rr:constant "https://w3id.org/imec/idlab/function#trueCondition";
    rr:termType rr:IRI.
:fn_022 rr:predicateObjectMap :pom_096.
:pom_096 a rr:PredicateObjectMap;
    rr:predicateMap :pm_096.
:pm_096 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#strBoolean>.
:pom_096 rr:objectMap :om_093.
:om_093 a rr:ObjectMap, fnml:FunctionTermMap;
    fnml:functionValue :fn_023.
:fn_023 rml:logicalSource :source_022;
    rr:predicateObjectMap :pomexec_023.
:pomexec_023 rr:predicateMap :pmexec_023.
:pmexec_023 rr:constant fno:executes.
:pomexec_023 rr:objectMap :omexec_023.
:omexec_023 rr:constant "http://example.com/idlab/function/equal";
    rr:termType rr:IRI.
:fn_023 rr:predicateObjectMap :pom_097.
:pom_097 a rr:PredicateObjectMap;
    rr:predicateMap :pm_097.
:pm_097 a rr:PredicateMap;
    rr:constant grel:valueParameter.
:pom_097 rr:objectMap :om_094.
:om_094 a rr:ObjectMap;
    rml:reference "Value";
    rr:termType rr:Literal.
:fn_023 rr:predicateObjectMap :pom_098.
:pom_098 a rr:PredicateObjectMap;
    rr:predicateMap :pm_098.
:pm_098 a rr:PredicateMap;
    rr:constant grel:valueParameter2.
:pom_098 rr:objectMap :om_095.
:om_095 a rr:ObjectMap;
    rr:constant "none";
    rr:termType rr:Literal.
:fn_022 rr:predicateObjectMap :pom_099.
:pom_099 a rr:PredicateObjectMap;
    rr:predicateMap :pm_099.
:pm_099 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#str>.
:pom_099 rr:objectMap :om_096.
:om_096 a rr:ObjectMap;
    rr:constant "http://data.europa.eu/949/concepts/rolling-stock-fire/none";
    rr:termType rr:IRI.
:rules_000 void:exampleResource :map_opt-required-national-rolling-stock-fire-category_000.
:map_opt-required-national-rolling-stock-fire-category_000 rml:logicalSource :source_023.
:source_023 a rml:LogicalSource;
    rml:source :database_022;
    rml:query "SELECT REPLACE(Tunnels.UUID, ' ', '_') AS TUNNEL_URI, TunnelParameters.[Value], Tracks.UUID AS TRACK_ID, LTRIM(RTRIM(OperationalPoints.UOPID)) AS UOPID FROM RINF.dbo.TunnelParameters, RINF.dbo.Parameters, RINF.dbo.TrackTunnels, RINF.dbo.Tunnels, RINF.dbo.Tracks, RINF.dbo.OPTracks, RINF.dbo.OperationalPoints WHERE TrackTunnels.TunnelID = Tunnels.ID AND TrackTunnels.VersionID = Tunnels.VersionID AND TrackTunnels.TrackID = OPTracks.TrackID AND TrackTunnels.VersionID = OPTracks.VersionID AND OPTracks.TrackID = Tracks.ID AND OPTracks.VersionID = Tracks.VersionID AND OPTracks.OperationalPointID = OperationalPoints.ID AND OPTracks.VersionID = OperationalPoints.VersionID AND TunnelParameters.TunnelID = TrackTunnels.TunnelID AND TunnelParameters.VersionID = TrackTunnels.VersionID AND TunnelParameters.ParameterID = Parameters.ID AND Parameters.[Index] IN ('1.2.1.0.5.8') AND TunnelParameters.[Value] IS NOT NULL";
    rr:sqlVersion rr:SQL2008.
:database_022 a d2rq:Database;
    d2rq:jdbcDSN "${RINF_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${RINF_USER}";
    d2rq:password "${RINF_PWD}".
:source_023 rml:referenceFormulation ql:CSV.
:map_opt-required-national-rolling-stock-fire-category_000 a rr:TriplesMap;
    rdfs:label "opt-required-national-rolling-stock-fire-category".
:s_023 a rr:SubjectMap.
:map_opt-required-national-rolling-stock-fire-category_000 rr:subjectMap :s_023.
:s_023 rr:template "http://data.europa.eu/949/funtionalInfrastructure/tunnels/{UOPID}_{TRACK_ID}_{TUNNEL_URI}";
    rr:graphMap :gm_022.
:gm_022 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_100 a rr:PredicateObjectMap.
:map_opt-required-national-rolling-stock-fire-category_000 rr:predicateObjectMap :pom_100.
:pm_100 a rr:PredicateMap.
:pom_100 rr:predicateMap :pm_100.
:pm_100 rr:constant era:nationalRollingStockFireCategory.
:pom_100 rr:objectMap :om_097.
:om_097 a rr:ObjectMap;
    rml:reference "Value";
    rr:termType rr:Literal.
:rules_000 void:exampleResource :map_opt-diesel-therm-allowed_000.
:map_opt-diesel-therm-allowed_000 rml:logicalSource :source_024.
:source_024 a rml:LogicalSource;
    rml:source :database_023;
    rml:query "SELECT REPLACE(Tunnels.UUID, ' ', '_') AS TUNNEL_URI, LookupValues.[Value], Tracks.UUID AS TRACK_ID, LTRIM(RTRIM(OperationalPoints.UOPID)) AS UOPID FROM RINF.dbo.TrackTunnels, RINF.dbo.Tunnels, RINF.dbo.TunnelParameters, RINF.dbo.Parameters, RINF.dbo.LookupValues, RINF.dbo.Tracks, RINF.dbo.OPTracks, RINF.dbo.OperationalPoints WHERE TrackTunnels.TunnelID = Tunnels.ID AND TrackTunnels.VersionID = Tunnels.VersionID AND TrackTunnels.TrackID = OPTracks.TrackID AND TrackTunnels.VersionID = OPTracks.VersionID AND OPTracks.TrackID = Tracks.ID AND OPTracks.VersionID = Tracks.VersionID AND OPTracks.OperationalPointID = OperationalPoints.ID AND OPTracks.VersionID = OperationalPoints.VersionID AND TunnelParameters.TunnelID = TrackTunnels.TunnelID AND TunnelParameters.VersionID = TrackTunnels.VersionID AND TunnelParameters.ParameterId = Parameters.ID AND Parameters.[Index] IN ('1.2.1.0.5.9') AND TunnelParameters.LookupValueID IS NOT NULL AND TunnelParameters.LookupValueID = LookupValues.ID;";
    rr:sqlVersion rr:SQL2008.
:database_023 a d2rq:Database;
    d2rq:jdbcDSN "${RINF_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${RINF_USER}";
    d2rq:password "${RINF_PWD}".
:source_024 rml:referenceFormulation ql:CSV.
:map_opt-diesel-therm-allowed_000 a rr:TriplesMap;
    rdfs:label "opt-diesel-therm-allowed".
:s_024 a rr:SubjectMap.
:map_opt-diesel-therm-allowed_000 rr:subjectMap :s_024.
:s_024 rr:template "http://data.europa.eu/949/funtionalInfrastructure/tunnels/{UOPID}_{TRACK_ID}_{TUNNEL_URI}";
    rr:graphMap :gm_023.
:gm_023 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_101 a rr:PredicateObjectMap.
:map_opt-diesel-therm-allowed_000 rr:predicateObjectMap :pom_101.
:pm_101 a rr:PredicateMap.
:pom_101 rr:predicateMap :pm_101.
:pm_101 rr:constant era:dieselThermalAllowed.
:pom_101 rr:objectMap :om_098.
:om_098 a fnml:FunctionTermMap;
    rr:termType rr:Literal;
    rr:datatype xsd:boolean;
    fnml:functionValue :fn_024.
:fn_024 rml:logicalSource :source_024;
    rr:predicateObjectMap :pomexec_024.
:pomexec_024 rr:predicateMap :pmexec_024.
:pmexec_024 rr:constant fno:executes.
:pomexec_024 rr:objectMap :omexec_024.
:omexec_024 rr:constant "https://w3id.org/imec/idlab/function#trueCondition";
    rr:termType rr:IRI.
:fn_024 rr:predicateObjectMap :pom_102.
:pom_102 a rr:PredicateObjectMap;
    rr:predicateMap :pm_102.
:pm_102 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#strBoolean>.
:pom_102 rr:objectMap :om_099.
:om_099 a rr:ObjectMap, fnml:FunctionTermMap;
    fnml:functionValue :fn_025.
:fn_025 rml:logicalSource :source_024;
    rr:predicateObjectMap :pomexec_025.
:pomexec_025 rr:predicateMap :pmexec_025.
:pmexec_025 rr:constant fno:executes.
:pomexec_025 rr:objectMap :omexec_025.
:omexec_025 rr:constant "http://example.com/idlab/function/equal";
    rr:termType rr:IRI.
:fn_025 rr:predicateObjectMap :pom_103.
:pom_103 a rr:PredicateObjectMap;
    rr:predicateMap :pm_103.
:pm_103 a rr:PredicateMap;
    rr:constant grel:valueParameter.
:pom_103 rr:objectMap :om_100.
:om_100 a rr:ObjectMap;
    rml:reference "Value";
    rr:termType rr:Literal.
:fn_025 rr:predicateObjectMap :pom_104.
:pom_104 a rr:PredicateObjectMap;
    rr:predicateMap :pm_104.
:pm_104 a rr:PredicateMap;
    rr:constant grel:valueParameter2.
:pom_104 rr:objectMap :om_101.
:om_101 a rr:ObjectMap;
    rr:constant "Y";
    rr:termType rr:Literal.
:fn_024 rr:predicateObjectMap :pom_105.
:pom_105 a rr:PredicateObjectMap;
    rr:predicateMap :pm_105.
:pm_105 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#str>.
:pom_105 rr:objectMap :om_102.
:om_102 a rr:ObjectMap;
    rr:constant "true";
    rr:termType rr:Literal.
:pom_106 a rr:PredicateObjectMap.
:map_opt-diesel-therm-allowed_000 rr:predicateObjectMap :pom_106.
:pm_106 a rr:PredicateMap.
:pom_106 rr:predicateMap :pm_106.
:pm_106 rr:constant era:dieselThermalAllowed.
:pom_106 rr:objectMap :om_103.
:om_103 a fnml:FunctionTermMap;
    rr:termType rr:Literal;
    rr:datatype xsd:boolean;
    fnml:functionValue :fn_026.
:fn_026 rml:logicalSource :source_024;
    rr:predicateObjectMap :pomexec_026.
:pomexec_026 rr:predicateMap :pmexec_026.
:pmexec_026 rr:constant fno:executes.
:pomexec_026 rr:objectMap :omexec_026.
:omexec_026 rr:constant "https://w3id.org/imec/idlab/function#trueCondition";
    rr:termType rr:IRI.
:fn_026 rr:predicateObjectMap :pom_107.
:pom_107 a rr:PredicateObjectMap;
    rr:predicateMap :pm_107.
:pm_107 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#strBoolean>.
:pom_107 rr:objectMap :om_104.
:om_104 a rr:ObjectMap, fnml:FunctionTermMap;
    fnml:functionValue :fn_027.
:fn_027 rml:logicalSource :source_024;
    rr:predicateObjectMap :pomexec_027.
:pomexec_027 rr:predicateMap :pmexec_027.
:pmexec_027 rr:constant fno:executes.
:pomexec_027 rr:objectMap :omexec_027.
:omexec_027 rr:constant "http://example.com/idlab/function/equal";
    rr:termType rr:IRI.
:fn_027 rr:predicateObjectMap :pom_108.
:pom_108 a rr:PredicateObjectMap;
    rr:predicateMap :pm_108.
:pm_108 a rr:PredicateMap;
    rr:constant grel:valueParameter.
:pom_108 rr:objectMap :om_105.
:om_105 a rr:ObjectMap;
    rml:reference "Value";
    rr:termType rr:Literal.
:fn_027 rr:predicateObjectMap :pom_109.
:pom_109 a rr:PredicateObjectMap;
    rr:predicateMap :pm_109.
:pm_109 a rr:PredicateMap;
    rr:constant grel:valueParameter2.
:pom_109 rr:objectMap :om_106.
:om_106 a rr:ObjectMap;
    rr:constant "N";
    rr:termType rr:Literal.
:fn_026 rr:predicateObjectMap :pom_110.
:pom_110 a rr:PredicateObjectMap;
    rr:predicateMap :pm_110.
:pm_110 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#str>.
:pom_110 rr:objectMap :om_107.
:om_107 a rr:ObjectMap;
    rr:constant "false";
    rr:termType rr:Literal.
:rules_000 void:exampleResource :map_siding-verification_000.
:map_siding-verification_000 rml:logicalSource :source_025.
:source_025 a rml:LogicalSource;
    rml:source :database_024;
    rml:query "SELECT REPLACE(Tunnels.UUID, ' ', '_') AS TUNNEL_URI, TunnelParameters.[Value], Sidings.UUID AS SIDING_ID, LTRIM(RTRIM(OperationalPoints.UOPID)) AS UOPID FROM RINF.dbo.SidingTunnels, RINF.dbo.Tunnels, RINF.dbo.Sidings, RINF.dbo.TunnelParameters, RINF.dbo.Parameters, RINF.dbo.OperationalPoints WHERE SidingTunnels.TunnelID = Tunnels.ID AND SidingTunnels.VersionID = Tunnels.VersionID AND SidingTunnels.SidingID = Sidings.ID AND SidingTunnels.VersionID = Sidings.VersionID AND Sidings.OperationalPointID = OperationalPoints.ID AND Sidings.VersionID = OperationalPoints.VersionID AND TunnelParameters.TunnelID = Tunnels.ID AND TunnelParameters.VersionID = Tunnels.VersionID AND TunnelParameters.ParameterId = Parameters.ID AND Parameters.[Index] IN ('1.2.2.0.5.3') AND TunnelParameters.[Value] IS NOT NULL;";
    rr:sqlVersion rr:SQL2008.
:database_024 a d2rq:Database;
    d2rq:jdbcDSN "${RINF_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${RINF_USER}";
    d2rq:password "${RINF_PWD}".
:source_025 rml:referenceFormulation ql:CSV.
:map_siding-verification_000 a rr:TriplesMap;
    rdfs:label "siding-verification".
:s_025 a rr:SubjectMap.
:map_siding-verification_000 rr:subjectMap :s_025.
:s_025 rr:template "http://data.europa.eu/949/funtionalInfrastructure/tunnels/{UOPID}_{SIDING_ID}_{TUNNEL_URI}";
    rr:graphMap :gm_024.
:gm_024 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_111 a rr:PredicateObjectMap.
:map_siding-verification_000 rr:predicateObjectMap :pom_111.
:pm_111 a rr:PredicateMap.
:pom_111 rr:predicateMap :pm_111.
:pm_111 rr:constant era:verificationSRT.
:pom_111 rr:objectMap :om_108.
:om_108 a rr:ObjectMap;
    rml:reference "Value";
    rr:termType rr:Literal.
:rules_000 void:exampleResource :map_siding-demonstration_000.
:map_siding-demonstration_000 rml:logicalSource :source_026.
:source_026 a rml:LogicalSource;
    rml:source :database_025;
    rml:query "SELECT REPLACE(Tunnels.UUID, ' ', '_') AS TUNNEL_URI, TunnelParameters.[Value], Sidings.UUID AS SIDING_ID, LTRIM(RTRIM(OperationalPoints.UOPID)) AS UOPID FROM RINF.dbo.SidingTunnels, RINF.dbo.Tunnels, RINF.dbo.Sidings, RINF.dbo.TunnelParameters, RINF.dbo.Parameters, RINF.dbo.OperationalPoints WHERE SidingTunnels.TunnelID = Tunnels.ID AND SidingTunnels.VersionID = Tunnels.VersionID AND SidingTunnels.SidingID = Sidings.ID AND SidingTunnels.VersionID = Sidings.VersionID AND Sidings.OperationalPointID = OperationalPoints.ID AND Sidings.VersionID = OperationalPoints.VersionID AND TunnelParameters.TunnelID = Tunnels.ID AND TunnelParameters.VersionID = Tunnels.VersionID AND TunnelParameters.ParameterId = Parameters.ID AND Parameters.[Index] IN ('1.2.2.0.5.4') AND TunnelParameters.[Value] IS NOT NULL;";
    rr:sqlVersion rr:SQL2008.
:database_025 a d2rq:Database;
    d2rq:jdbcDSN "${RINF_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${RINF_USER}";
    d2rq:password "${RINF_PWD}".
:source_026 rml:referenceFormulation ql:CSV.
:map_siding-demonstration_000 a rr:TriplesMap;
    rdfs:label "siding-demonstration".
:s_026 a rr:SubjectMap.
:map_siding-demonstration_000 rr:subjectMap :s_026.
:s_026 rr:template "http://data.europa.eu/949/funtionalInfrastructure/tunnels/{UOPID}_{SIDING_ID}_{TUNNEL_URI}";
    rr:graphMap :gm_025.
:gm_025 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_112 a rr:PredicateObjectMap.
:map_siding-demonstration_000 rr:predicateObjectMap :pom_112.
:pm_112 a rr:PredicateMap.
:pom_112 rr:predicateMap :pm_112.
:pm_112 rr:constant era:demonstrationSRT.
:pom_112 rr:objectMap :om_109.
:om_109 a rr:ObjectMap;
    rml:reference "Value";
    rr:termType rr:Literal.
:rules_000 void:exampleResource :map_siding-length_000.
:map_siding-length_000 rml:logicalSource :source_027.
:source_027 a rml:LogicalSource;
    rml:source :database_026;
    rml:query "SELECT REPLACE(Tunnels.UUID, ' ', '_') AS TUNNEL_URI, TunnelParameters.[Value], Sidings.UUID AS SIDING_ID, LTRIM(RTRIM(OperationalPoints.UOPID)) AS UOPID FROM RINF.dbo.SidingTunnels, RINF.dbo.Tunnels, RINF.dbo.Sidings, RINF.dbo.TunnelParameters, RINF.dbo.Parameters, RINF.dbo.OperationalPoints WHERE SidingTunnels.TunnelID = Tunnels.ID AND SidingTunnels.VersionID = Tunnels.VersionID AND SidingTunnels.SidingID = Sidings.ID AND SidingTunnels.VersionID = Sidings.VersionID AND Sidings.OperationalPointID = OperationalPoints.ID AND Sidings.VersionID = OperationalPoints.VersionID AND TunnelParameters.TunnelID = Tunnels.ID AND TunnelParameters.VersionID = Tunnels.VersionID AND TunnelParameters.ParameterId = Parameters.ID AND Parameters.[Index] IN ('1.2.2.0.5.5') AND TunnelParameters.[Value] IS NOT NULL;";
    rr:sqlVersion rr:SQL2008.
:database_026 a d2rq:Database;
    d2rq:jdbcDSN "${RINF_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${RINF_USER}";
    d2rq:password "${RINF_PWD}".
:source_027 rml:referenceFormulation ql:CSV.
:map_siding-length_000 a rr:TriplesMap;
    rdfs:label "siding-length".
:s_027 a rr:SubjectMap.
:map_siding-length_000 rr:subjectMap :s_027.
:s_027 rr:template "http://data.europa.eu/949/funtionalInfrastructure/tunnels/{UOPID}_{SIDING_ID}_{TUNNEL_URI}";
    rr:graphMap :gm_026.
:gm_026 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_113 a rr:PredicateObjectMap.
:map_siding-length_000 rr:predicateObjectMap :pom_113.
:pm_113 a rr:PredicateMap.
:pom_113 rr:predicateMap :pm_113.
:pm_113 rr:constant era:length.
:pom_113 rr:objectMap :om_110.
:om_110 a rr:ObjectMap;
    rml:reference "Value";
    rr:termType rr:Literal;
    rr:datatype xsd:double.
:rules_000 void:exampleResource :map_siding-emergency-plan_000.
:map_siding-emergency-plan_000 rml:logicalSource :source_028.
:source_028 a rml:LogicalSource;
    rml:source :database_027;
    rml:query "SELECT REPLACE(Tunnels.UUID, ' ', '_') AS TUNNEL_URI, LookupValues.[Value], Sidings.UUID AS SIDING_ID, LTRIM(RTRIM(OperationalPoints.UOPID)) AS UOPID FROM RINF.dbo.SidingTunnels, RINF.dbo.Tunnels, RINF.dbo.Sidings, RINF.dbo.TunnelParameters, RINF.dbo.Parameters, RINF.dbo.LookupValues, RINF.dbo.OperationalPoints WHERE SidingTunnels.TunnelID = Tunnels.ID AND SidingTunnels.VersionID = Tunnels.VersionID AND SidingTunnels.SidingID = Sidings.ID AND SidingTunnels.VersionID = Sidings.VersionID AND Sidings.OperationalPointID = OperationalPoints.ID AND Sidings.VersionID = OperationalPoints.VersionID AND TunnelParameters.TunnelID = Tunnels.ID AND TunnelParameters.VersionID = Tunnels.VersionID AND TunnelParameters.ParameterId = Parameters.ID AND Parameters.[Index] IN ('1.2.2.0.5.6') AND TunnelParameters.LookupValueID IS NOT NULL AND TunnelParameters.LookupValueID = LookupValues.ID;";
    rr:sqlVersion rr:SQL2008.
:database_027 a d2rq:Database;
    d2rq:jdbcDSN "${RINF_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${RINF_USER}";
    d2rq:password "${RINF_PWD}".
:source_028 rml:referenceFormulation ql:CSV.
:map_siding-emergency-plan_000 a rr:TriplesMap;
    rdfs:label "siding-emergency-plan".
:s_028 a rr:SubjectMap.
:map_siding-emergency-plan_000 rr:subjectMap :s_028.
:s_028 rr:template "http://data.europa.eu/949/funtionalInfrastructure/tunnels/{UOPID}_{SIDING_ID}_{TUNNEL_URI}";
    rr:graphMap :gm_027.
:gm_027 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_114 a rr:PredicateObjectMap.
:map_siding-emergency-plan_000 rr:predicateObjectMap :pom_114.
:pm_114 a rr:PredicateMap.
:pom_114 rr:predicateMap :pm_114.
:pm_114 rr:constant era:hasEmergencyPlan.
:pom_114 rr:objectMap :om_111.
:om_111 a fnml:FunctionTermMap;
    rr:termType rr:Literal;
    rr:datatype xsd:boolean;
    fnml:functionValue :fn_028.
:fn_028 rml:logicalSource :source_028;
    rr:predicateObjectMap :pomexec_028.
:pomexec_028 rr:predicateMap :pmexec_028.
:pmexec_028 rr:constant fno:executes.
:pomexec_028 rr:objectMap :omexec_028.
:omexec_028 rr:constant "https://w3id.org/imec/idlab/function#trueCondition";
    rr:termType rr:IRI.
:fn_028 rr:predicateObjectMap :pom_115.
:pom_115 a rr:PredicateObjectMap;
    rr:predicateMap :pm_115.
:pm_115 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#strBoolean>.
:pom_115 rr:objectMap :om_112.
:om_112 a rr:ObjectMap, fnml:FunctionTermMap;
    fnml:functionValue :fn_029.
:fn_029 rml:logicalSource :source_028;
    rr:predicateObjectMap :pomexec_029.
:pomexec_029 rr:predicateMap :pmexec_029.
:pmexec_029 rr:constant fno:executes.
:pomexec_029 rr:objectMap :omexec_029.
:omexec_029 rr:constant "http://example.com/idlab/function/equal";
    rr:termType rr:IRI.
:fn_029 rr:predicateObjectMap :pom_116.
:pom_116 a rr:PredicateObjectMap;
    rr:predicateMap :pm_116.
:pm_116 a rr:PredicateMap;
    rr:constant grel:valueParameter.
:pom_116 rr:objectMap :om_113.
:om_113 a rr:ObjectMap;
    rml:reference "Value";
    rr:termType rr:Literal.
:fn_029 rr:predicateObjectMap :pom_117.
:pom_117 a rr:PredicateObjectMap;
    rr:predicateMap :pm_117.
:pm_117 a rr:PredicateMap;
    rr:constant grel:valueParameter2.
:pom_117 rr:objectMap :om_114.
:om_114 a rr:ObjectMap;
    rr:constant "Y";
    rr:termType rr:Literal.
:fn_028 rr:predicateObjectMap :pom_118.
:pom_118 a rr:PredicateObjectMap;
    rr:predicateMap :pm_118.
:pm_118 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#str>.
:pom_118 rr:objectMap :om_115.
:om_115 a rr:ObjectMap;
    rr:constant "true";
    rr:termType rr:Literal.
:pom_119 a rr:PredicateObjectMap.
:map_siding-emergency-plan_000 rr:predicateObjectMap :pom_119.
:pm_119 a rr:PredicateMap.
:pom_119 rr:predicateMap :pm_119.
:pm_119 rr:constant era:hasEmergencyPlan.
:pom_119 rr:objectMap :om_116.
:om_116 a fnml:FunctionTermMap;
    rr:termType rr:Literal;
    rr:datatype xsd:boolean;
    fnml:functionValue :fn_030.
:fn_030 rml:logicalSource :source_028;
    rr:predicateObjectMap :pomexec_030.
:pomexec_030 rr:predicateMap :pmexec_030.
:pmexec_030 rr:constant fno:executes.
:pomexec_030 rr:objectMap :omexec_030.
:omexec_030 rr:constant "https://w3id.org/imec/idlab/function#trueCondition";
    rr:termType rr:IRI.
:fn_030 rr:predicateObjectMap :pom_120.
:pom_120 a rr:PredicateObjectMap;
    rr:predicateMap :pm_120.
:pm_120 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#strBoolean>.
:pom_120 rr:objectMap :om_117.
:om_117 a rr:ObjectMap, fnml:FunctionTermMap;
    fnml:functionValue :fn_031.
:fn_031 rml:logicalSource :source_028;
    rr:predicateObjectMap :pomexec_031.
:pomexec_031 rr:predicateMap :pmexec_031.
:pmexec_031 rr:constant fno:executes.
:pomexec_031 rr:objectMap :omexec_031.
:omexec_031 rr:constant "http://example.com/idlab/function/equal";
    rr:termType rr:IRI.
:fn_031 rr:predicateObjectMap :pom_121.
:pom_121 a rr:PredicateObjectMap;
    rr:predicateMap :pm_121.
:pm_121 a rr:PredicateMap;
    rr:constant grel:valueParameter.
:pom_121 rr:objectMap :om_118.
:om_118 a rr:ObjectMap;
    rml:reference "Value";
    rr:termType rr:Literal.
:fn_031 rr:predicateObjectMap :pom_122.
:pom_122 a rr:PredicateObjectMap;
    rr:predicateMap :pm_122.
:pm_122 a rr:PredicateMap;
    rr:constant grel:valueParameter2.
:pom_122 rr:objectMap :om_119.
:om_119 a rr:ObjectMap;
    rr:constant "N";
    rr:termType rr:Literal.
:fn_030 rr:predicateObjectMap :pom_123.
:pom_123 a rr:PredicateObjectMap;
    rr:predicateMap :pm_123.
:pm_123 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#str>.
:pom_123 rr:objectMap :om_120.
:om_120 a rr:ObjectMap;
    rr:constant "false";
    rr:termType rr:Literal.
:rules_000 void:exampleResource :map_siding-required-rolling-stock-fire-category_000.
:map_siding-required-rolling-stock-fire-category_000 rml:logicalSource :source_029.
:source_029 a rml:LogicalSource;
    rml:source :database_028;
    rml:query "SELECT REPLACE(Tunnels.UUID, ' ', '_') AS TUNNEL_URI, LookupValues.[Value], Sidings.UUID AS SIDING_ID, LTRIM(RTRIM(OperationalPoints.UOPID)) AS UOPID FROM RINF.dbo.SidingTunnels, RINF.dbo.Tunnels, RINF.dbo.Sidings, RINF.dbo.TunnelParameters, RINF.dbo.Parameters, RINF.dbo.LookupValues, RINF.dbo.OperationalPoints WHERE SidingTunnels.TunnelID = Tunnels.ID AND SidingTunnels.VersionID = Tunnels.VersionID AND SidingTunnels.SidingID = Sidings.ID AND SidingTunnels.VersionID = Sidings.VersionID AND Sidings.OperationalPointID = OperationalPoints.ID AND Sidings.VersionID = OperationalPoints.VersionID AND TunnelParameters.TunnelID = Tunnels.ID AND TunnelParameters.VersionID = Tunnels.VersionID AND TunnelParameters.ParameterId = Parameters.ID AND Parameters.[Index] IN ('1.2.2.0.5.7') AND TunnelParameters.LookupValueID IS NOT NULL AND TunnelParameters.LookupValueID = LookupValues.ID;";
    rr:sqlVersion rr:SQL2008.
:database_028 a d2rq:Database;
    d2rq:jdbcDSN "${RINF_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${RINF_USER}";
    d2rq:password "${RINF_PWD}".
:source_029 rml:referenceFormulation ql:CSV.
:map_siding-required-rolling-stock-fire-category_000 a rr:TriplesMap;
    rdfs:label "siding-required-rolling-stock-fire-category".
:s_029 a rr:SubjectMap.
:map_siding-required-rolling-stock-fire-category_000 rr:subjectMap :s_029.
:s_029 rr:template "http://data.europa.eu/949/funtionalInfrastructure/tunnels/{UOPID}_{SIDING_ID}_{TUNNEL_URI}";
    rr:graphMap :gm_028.
:gm_028 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_124 a rr:PredicateObjectMap.
:map_siding-required-rolling-stock-fire-category_000 rr:predicateObjectMap :pom_124.
:pm_124 a rr:PredicateMap.
:pom_124 rr:predicateMap :pm_124.
:pm_124 rr:constant era:rollingStockFireCategory.
:pom_124 rr:objectMap :om_121.
:om_121 a fnml:FunctionTermMap;
    rr:termType rr:IRI;
    fnml:functionValue :fn_032.
:fn_032 rml:logicalSource :source_029;
    rr:predicateObjectMap :pomexec_032.
:pomexec_032 rr:predicateMap :pmexec_032.
:pmexec_032 rr:constant fno:executes.
:pomexec_032 rr:objectMap :omexec_032.
:omexec_032 rr:constant "https://w3id.org/imec/idlab/function#trueCondition";
    rr:termType rr:IRI.
:fn_032 rr:predicateObjectMap :pom_125.
:pom_125 a rr:PredicateObjectMap;
    rr:predicateMap :pm_125.
:pm_125 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#strBoolean>.
:pom_125 rr:objectMap :om_122.
:om_122 a rr:ObjectMap, fnml:FunctionTermMap;
    fnml:functionValue :fn_033.
:fn_033 rml:logicalSource :source_029;
    rr:predicateObjectMap :pomexec_033.
:pomexec_033 rr:predicateMap :pmexec_033.
:pmexec_033 rr:constant fno:executes.
:pomexec_033 rr:objectMap :omexec_033.
:omexec_033 rr:constant "http://example.com/idlab/function/equal";
    rr:termType rr:IRI.
:fn_033 rr:predicateObjectMap :pom_126.
:pom_126 a rr:PredicateObjectMap;
    rr:predicateMap :pm_126.
:pm_126 a rr:PredicateMap;
    rr:constant grel:valueParameter.
:pom_126 rr:objectMap :om_123.
:om_123 a rr:ObjectMap;
    rml:reference "Value";
    rr:termType rr:Literal.
:fn_033 rr:predicateObjectMap :pom_127.
:pom_127 a rr:PredicateObjectMap;
    rr:predicateMap :pm_127.
:pm_127 a rr:PredicateMap;
    rr:constant grel:valueParameter2.
:pom_127 rr:objectMap :om_124.
:om_124 a rr:ObjectMap;
    rr:constant "A";
    rr:termType rr:Literal.
:fn_032 rr:predicateObjectMap :pom_128.
:pom_128 a rr:PredicateObjectMap;
    rr:predicateMap :pm_128.
:pm_128 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#str>.
:pom_128 rr:objectMap :om_125.
:om_125 a rr:ObjectMap;
    rr:constant "http://data.europa.eu/949/concepts/rolling-stock-fire/a";
    rr:termType rr:IRI.
:pom_129 a rr:PredicateObjectMap.
:map_siding-required-rolling-stock-fire-category_000 rr:predicateObjectMap :pom_129.
:pm_129 a rr:PredicateMap.
:pom_129 rr:predicateMap :pm_129.
:pm_129 rr:constant era:rollingStockFireCategory.
:pom_129 rr:objectMap :om_126.
:om_126 a fnml:FunctionTermMap;
    rr:termType rr:IRI;
    fnml:functionValue :fn_034.
:fn_034 rml:logicalSource :source_029;
    rr:predicateObjectMap :pomexec_034.
:pomexec_034 rr:predicateMap :pmexec_034.
:pmexec_034 rr:constant fno:executes.
:pomexec_034 rr:objectMap :omexec_034.
:omexec_034 rr:constant "https://w3id.org/imec/idlab/function#trueCondition";
    rr:termType rr:IRI.
:fn_034 rr:predicateObjectMap :pom_130.
:pom_130 a rr:PredicateObjectMap;
    rr:predicateMap :pm_130.
:pm_130 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#strBoolean>.
:pom_130 rr:objectMap :om_127.
:om_127 a rr:ObjectMap, fnml:FunctionTermMap;
    fnml:functionValue :fn_035.
:fn_035 rml:logicalSource :source_029;
    rr:predicateObjectMap :pomexec_035.
:pomexec_035 rr:predicateMap :pmexec_035.
:pmexec_035 rr:constant fno:executes.
:pomexec_035 rr:objectMap :omexec_035.
:omexec_035 rr:constant "http://example.com/idlab/function/equal";
    rr:termType rr:IRI.
:fn_035 rr:predicateObjectMap :pom_131.
:pom_131 a rr:PredicateObjectMap;
    rr:predicateMap :pm_131.
:pm_131 a rr:PredicateMap;
    rr:constant grel:valueParameter.
:pom_131 rr:objectMap :om_128.
:om_128 a rr:ObjectMap;
    rml:reference "Value";
    rr:termType rr:Literal.
:fn_035 rr:predicateObjectMap :pom_132.
:pom_132 a rr:PredicateObjectMap;
    rr:predicateMap :pm_132.
:pm_132 a rr:PredicateMap;
    rr:constant grel:valueParameter2.
:pom_132 rr:objectMap :om_129.
:om_129 a rr:ObjectMap;
    rr:constant "B";
    rr:termType rr:Literal.
:fn_034 rr:predicateObjectMap :pom_133.
:pom_133 a rr:PredicateObjectMap;
    rr:predicateMap :pm_133.
:pm_133 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#str>.
:pom_133 rr:objectMap :om_130.
:om_130 a rr:ObjectMap;
    rr:constant "http://data.europa.eu/949/concepts/rolling-stock-fire/b";
    rr:termType rr:IRI.
:pom_134 a rr:PredicateObjectMap.
:map_siding-required-rolling-stock-fire-category_000 rr:predicateObjectMap :pom_134.
:pm_134 a rr:PredicateMap.
:pom_134 rr:predicateMap :pm_134.
:pm_134 rr:constant era:rollingStockFireCategory.
:pom_134 rr:objectMap :om_131.
:om_131 a fnml:FunctionTermMap;
    rr:termType rr:IRI;
    fnml:functionValue :fn_036.
:fn_036 rml:logicalSource :source_029;
    rr:predicateObjectMap :pomexec_036.
:pomexec_036 rr:predicateMap :pmexec_036.
:pmexec_036 rr:constant fno:executes.
:pomexec_036 rr:objectMap :omexec_036.
:omexec_036 rr:constant "https://w3id.org/imec/idlab/function#trueCondition";
    rr:termType rr:IRI.
:fn_036 rr:predicateObjectMap :pom_135.
:pom_135 a rr:PredicateObjectMap;
    rr:predicateMap :pm_135.
:pm_135 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#strBoolean>.
:pom_135 rr:objectMap :om_132.
:om_132 a rr:ObjectMap, fnml:FunctionTermMap;
    fnml:functionValue :fn_037.
:fn_037 rml:logicalSource :source_029;
    rr:predicateObjectMap :pomexec_037.
:pomexec_037 rr:predicateMap :pmexec_037.
:pmexec_037 rr:constant fno:executes.
:pomexec_037 rr:objectMap :omexec_037.
:omexec_037 rr:constant "http://example.com/idlab/function/equal";
    rr:termType rr:IRI.
:fn_037 rr:predicateObjectMap :pom_136.
:pom_136 a rr:PredicateObjectMap;
    rr:predicateMap :pm_136.
:pm_136 a rr:PredicateMap;
    rr:constant grel:valueParameter.
:pom_136 rr:objectMap :om_133.
:om_133 a rr:ObjectMap;
    rml:reference "Value";
    rr:termType rr:Literal.
:fn_037 rr:predicateObjectMap :pom_137.
:pom_137 a rr:PredicateObjectMap;
    rr:predicateMap :pm_137.
:pm_137 a rr:PredicateMap;
    rr:constant grel:valueParameter2.
:pom_137 rr:objectMap :om_134.
:om_134 a rr:ObjectMap;
    rr:constant "none";
    rr:termType rr:Literal.
:fn_036 rr:predicateObjectMap :pom_138.
:pom_138 a rr:PredicateObjectMap;
    rr:predicateMap :pm_138.
:pm_138 a rr:PredicateMap;
    rr:constant <https://w3id.org/imec/idlab/function#str>.
:pom_138 rr:objectMap :om_135.
:om_135 a rr:ObjectMap;
    rr:constant "http://data.europa.eu/949/concepts/rolling-stock-fire/none";
    rr:termType rr:IRI.
:rules_000 void:exampleResource :map_siding-required-national-rolling-stock-fire-category_000.
:map_siding-required-national-rolling-stock-fire-category_000 rml:logicalSource :source_030.
:source_030 a rml:LogicalSource;
    rml:source :database_029;
    rml:query "SELECT REPLACE(Tunnels.UUID, ' ', '_') AS TUNNEL_URI, TunnelParameters.[Value], Sidings.UUID AS SIDING_ID, LTRIM(RTRIM(OperationalPoints.UOPID)) AS UOPID FROM RINF.dbo.SidingTunnels, RINF.dbo.Tunnels, RINF.dbo.Sidings, RINF.dbo.TunnelParameters, RINF.dbo.Parameters, RINF.dbo.OperationalPoints WHERE SidingTunnels.TunnelID = Tunnels.ID AND SidingTunnels.VersionID = Tunnels.VersionID AND SidingTunnels.SidingID = Sidings.ID AND SidingTunnels.VersionID = Sidings.VersionID AND Sidings.OperationalPointID = OperationalPoints.ID AND Sidings.VersionID = OperationalPoints.VersionID AND TunnelParameters.TunnelID = Tunnels.ID AND TunnelParameters.VersionID = Tunnels.VersionID AND TunnelParameters.ParameterId = Parameters.ID AND Parameters.[Index] IN ('1.2.2.0.5.8') AND TunnelParameters.[Value] IS NOT NULL;";
    rr:sqlVersion rr:SQL2008.
:database_029 a d2rq:Database;
    d2rq:jdbcDSN "${RINF_HOST}";
    d2rq:jdbcDriver "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    d2rq:username "${RINF_USER}";
    d2rq:password "${RINF_PWD}".
:source_030 rml:referenceFormulation ql:CSV.
:map_siding-required-national-rolling-stock-fire-category_000 a rr:TriplesMap;
    rdfs:label "siding-required-national-rolling-stock-fire-category".
:s_030 a rr:SubjectMap.
:map_siding-required-national-rolling-stock-fire-category_000 rr:subjectMap :s_030.
:s_030 rr:template "http://data.europa.eu/949/funtionalInfrastructure/tunnels/{UOPID}_{SIDING_ID}_{TUNNEL_URI}";
    rr:graphMap :gm_029.
:gm_029 a rr:GraphMap;
    rr:constant "${NAMED_GRAPH}".
:pom_139 a rr:PredicateObjectMap.
:map_siding-required-national-rolling-stock-fire-category_000 rr:predicateObjectMap :pom_139.
:pm_139 a rr:PredicateMap.
:pom_139 rr:predicateMap :pm_139.
:pm_139 rr:constant era:nationalRollingStockFireCategory.
:pom_139 rr:objectMap :om_136.
:om_136 a rr:ObjectMap;
    rml:reference "Value";
    rr:termType rr:Literal.
:pom_007 rr:objectMap :om_137.
:om_137 a rr:ObjectMap;
    rr:parentTriplesMap :map_eu-country_000;
    rr:joinCondition :jc_000.
:jc_000 rr:child "Code";
    rr:parent "code".
:pom_012 rr:objectMap :om_138.
:om_138 a rr:ObjectMap;
    rr:parentTriplesMap :map_eu-country_000;
    rr:joinCondition :jc_001.
:jc_001 rr:child "Code";
    rr:parent "code".
:pom_017 rr:objectMap :om_139.
:om_139 a rr:ObjectMap;
    rr:parentTriplesMap :map_eu-country_000;
    rr:joinCondition :jc_002.
:jc_002 rr:child "Code";
    rr:parent "code".
